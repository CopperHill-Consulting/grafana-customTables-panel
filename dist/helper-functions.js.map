{"version":3,"sources":["../src/helper-functions.js"],"names":["RGX_CELL_PLACEHOLDER","RGX_OLD_VAR_WORKAROUND","RGX_ESCAPED_CHARS","RGX_LOOSE_DATE","toCSV","rows","opt_options","Object","headers","concat","nullString","hasOwnProperty","delimiter","RGX_DELIMIT","RegExp","JS","quoteRegExp","map","row","cell","toString","prototype","call","test","replace","join","parseRegExp","strPattern","parts","exec","_","escapeRegExp","pseudoCssToJSON","strLess","openCount","closeCount","match","ruleName","styleName","styleValue","JSON","stringify","trim","parse","e","Error","offsetByTZ","date","opt_tzOffset","Date","getTimezoneOffset","getCellValue","valToMod","isForLink","options","cellsByColName","joinValues","colIndex","rgx","ctrl","varsByName","rule","ruleType","type","unitFormat","unitFormatString","unitFormatDecimals","tzOffsetType","tzOffset","matches","timeSrv","timeRangeForUrl","from","to","value","includes","match0","isTime","opt_timePart","matchesKey","isColOrVar","name","isRaw","isEscape","isParam","paramName","encodeURIComponent","result","Set","has","length","v","undefined","_isAMomentObject","toDate","getHtmlText","div","html","innerHTML","textContent","document","createElement","term","strTerm","terms","DEFAULT_MUSTS","hasPlus","hasMinus","rgxBody","rgxFlags","quoteBody","word","must","push","breakStart","space","specialChar","isQuote","isAsterisk","breakEnd","matchWordStart","ignoreCase","ignoreErrors","console","warn","str","musts","slice","matchWraps","forEach","termIndex","lastIndex","sort","a","b","index","filter","matchWrap","matchWrapIndex","keepIt","prevMatch","prevMatchEnd","some","parseLocalDate","strDate","parseOptionalNumber","strNum","BigInt","isNaN","module","exports"],"mappings":"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","sourcesContent":["import * as JS from './external/YourJS.min';\nimport { getValueFormat } from './format-values';\n\nconst RGX_CELL_PLACEHOLDER = /\\$\\{(time)(?:-(to|from))?\\}|\\$\\{(?:(value|cell|0|[1-9]\\d*)|(col|join-col|var):((?:[^\\}:\\\\]*|\\\\.)+))(?::(?:(raw)|(escape)|(param)(?::((?:[^\\}:\\\\]*|\\\\.)+))?))?\\}/g;\nconst RGX_OLD_VAR_WORKAROUND = /([\\?&])var-(\\$\\{var:(?:[^\\}:\\\\]*|\\\\.)+:param\\})/g;\nconst RGX_ESCAPED_CHARS = /\\\\(.)/g;\nconst RGX_LOOSE_DATE = /^(\\d{4})-(\\d\\d?)-(\\d\\d?)(?:(?:T|\\s+)(\\d\\d?):(\\d\\d?)(?::(\\d\\d?)(?:\\.(\\d\\d?\\d?))?)?)?$/;\n\n/**\n * Converts an array of arrays of values to a CSV string.\n * @param rows {Array<Array>}\n *     An array of arrays of values that should be converted to a CSV string.\n * @param opt_options {Object=}\n *     Optional.  If this contains a `nullString` property the value will be used\n *     as the string that will appear whenever `null` or `undefined` is found.\n *     If this contains a `headers` property the value should be an array\n *     indicating the headers to be included as the first row.\n * @returns {string}\n *     The CSV version of `rows` with any specified options.\n */\nfunction toCSV(rows, opt_options) {\n  opt_options = Object(opt_options);\n  if (opt_options.headers) {\n    rows = [opt_options.headers].concat(rows);\n  }\n  let nullString = opt_options.hasOwnProperty('nullString') ? opt_options.nullString : '(NULL)';\n  let delimiter = opt_options.delimiter || ',';\n  let RGX_DELIMIT = delimiter === ','\n    ? /[\",\\n\\r]/\n    : new RegExp('[\"\\r\\n' + JS.quoteRegExp(delimiter) + ']');\n  return rows\n    .map(function (row) {\n      return row.map(function (cell) {\n        cell = cell != null\n          ? 'function' === typeof cell.toString\n            ? cell + \"\"\n            : Object.prototype.toString.call(cell)\n          : nullString;\n        return RGX_DELIMIT.test(cell) ? '\"' + (cell).replace(/\"/g, '\"\"') + '\"' : cell;\n      }).join(delimiter);\n    })\n    .join('\\n');\n}\n\nfunction parseRegExp(strPattern) {\n  let parts = /^\\/(.+)\\/(\\w*)$/.exec(strPattern);\n  return parts ? new RegExp(parts[1], parts[2]) : new RegExp('^' + _.escapeRegExp(strPattern) + '$', 'i');\n}\n\nfunction pseudoCssToJSON(strLess) {\n  var openCount = 0;\n  var closeCount = 0;\n\n  strLess = strLess\n    .replace(/\\/\\*[^]*?\\*\\//g, '')\n    .replace(\n      /([^\\{\\};]+)\\{|([^:\\{\\}]+):([^;]+);|\\}/g,\n      function (match, ruleName, styleName, styleValue) {\n        if (ruleName) {\n          openCount++;\n          return JSON.stringify(ruleName.trim()) + \":{\";\n        }\n        if (styleName) {\n          return JSON.stringify(styleName.trim()) + \":\" + JSON.stringify(styleValue.trim()) + \",\";\n        }\n        closeCount++;\n        return \"},\";\n      }\n    )\n    .replace(/,\\s*(\\}|$)/g, '$1');\n\n  try {\n    return JSON.stringify(JSON.parse(\"{\" + strLess + \"}\"), null, 2);\n  }\n  catch (e) {\n    throw new Error(\n      openCount !== closeCount\n        ? \"Pseudo-CSS contains too many \" + (openCount > closeCount ? \"open\" : \"clos\") + \"ing braces.\"\n        : \"Pseudo-CSS couldn't be parsed correctly.\"\n    );\n  }\n}\n\nfunction offsetByTZ(date, opt_tzOffset) {\n  date = new Date(date);\n  opt_tzOffset = opt_tzOffset == null ? date.getTimezoneOffset() : opt_tzOffset;\n  return new Date(+date + opt_tzOffset * 6e4);\n}\n\nfunction getCellValue(valToMod, isForLink, options) {\n  let { cell, cellsByColName, joinValues, colIndex, rgx, ctrl, varsByName, rule } = options;\n  let { type: ruleType, unitFormat, unitFormatString, unitFormatDecimals, tzOffsetType, tzOffset } = rule;\n  let matches = ruleType === 'FILTER'\n    ? cell != null\n      ? Object(rgx.exec(cell + ''))\n      : { '0': 'null' }\n    : { '0': cell };\n\n  let { from, to } = ctrl.timeSrv.timeRangeForUrl();\n\n  if (/^dateTime/.test(unitFormat)) {\n    let date = tzOffsetType === 'NO-TIMEZONE'\n      ? offsetByTZ(cell)\n      : tzOffsetType === 'TIMEZONE'\n        ? offsetByTZ(cell, tzOffset)\n        : new Date(cell);\n    matches.value = getValueFormat(unitFormat)(date, unitFormatString);\n  }\n  else {\n    matches.value = matches.cell = (!['none', null, void 0].includes(unitFormat) && 'number' === typeof cell)\n      ? getValueFormat(unitFormat)(cell, unitFormatDecimals, null)\n      : cell\n  }\n\n  return valToMod.replace(RGX_OLD_VAR_WORKAROUND, '$1$2').replace(\n    RGX_CELL_PLACEHOLDER,\n    function (match0, isTime, opt_timePart, matchesKey, isColOrVar, name, isRaw, isEscape, isParam, paramName) {\n      if (isTime) {\n        return (opt_timePart != 'to' ? 'from=' + encodeURIComponent(from) : '')\n          + (opt_timePart ? '' : '&')\n          + (opt_timePart != 'from' ? 'to=' + encodeURIComponent(to) : '');\n      }\n\n      isRaw = isRaw || !(isForLink || isEscape);\n      name = matchesKey || (name && name.replace(RGX_ESCAPED_CHARS, '$1'));\n      \n      let result = [...new Set(\n        matchesKey\n          ? _.has(matches, matchesKey) ? [matches[matchesKey]] : []\n          : isColOrVar === 'col'\n            ? _.has(cellsByColName, name) ? [cellsByColName[name]] : []\n            : isColOrVar === 'join-col'\n              ? (joinValues && _.has(joinValues[colIndex], name)) ? [joinValues[colIndex][name]] : []\n              : _.has(varsByName, name) ? varsByName[name] : []\n      )];\n\n      return result.length < 1\n        ? match0\n        : isRaw\n          ? result.join(',')\n          : isParam\n            ? result.map(v => encodeURIComponent(paramName == undefined ? isColOrVar === 'var' ? `var-${name}` : name : paramName) + '=' + encodeURIComponent(v)).join('&')\n            : encodeURIComponent(result.join(','));\n    }\n  );\n}\n\n// TODO:  Should be improved if other types will be passed\nlet stringify = value => value instanceof Date\n  ? +value\n  : (value && value._isAMomentObject)\n    ? +value.toDate()\n    : `${value}`;\n\nconst getHtmlText = (div => html => (div.innerHTML = html, div.textContent))(document.createElement('div'));\n\n/**\n * Creates a function that when called will try to match the given string\n * against `strTerm`.\n * @param strTerm {string}\n *   The string that will be parsed and used to test one or more strings.\n * @param opt_options {?Object}\n *   Optional.  An object containing all of the options to be used.  The\n *   `ignoreCase` property (defaults to true) can be added specified to\n *   allow/disallow non-RegExp terms to match strings regardless of casing.\n *   The `matchWordStart` (defaults to false) can be added to allow plain words\n *   to match even if word only starts with the word entered in the term.  The\n *   `ignoreErrors` (defaults to false) can be added to indicate whether\n *   malformed will throw JS errors.\n */\nfunction term(strTerm, opt_options) {\n  opt_options = Object(opt_options);\n\n  var terms = [];\n  var DEFAULT_MUSTS = [];\n  strTerm.replace(\n    /(?:(\\+)|(-))?(?:\\/((?:[^\\\\\\/]+|\\\\.)+)\\/(i?)|\"((?:[^\"]+|\"\")*)\"|(\\S+))/g,\n    function (match, hasPlus, hasMinus, rgxBody, rgxFlags, quoteBody, word) {\n      try {\n        var must = hasPlus === '+' ? true : hasMinus === '-' ? false : undefined;\n        terms.push({\n          rgx: rgxBody\n            ? new RegExp(rgxBody, (rgxFlags || '') + 'g')\n            : new RegExp(\n              (quoteBody || word).replace(\n                /(^\\b)|(\\s)|([\\[\\]\\{\\}\\(\\)\\+\\$\\^\\\\\\|\\?])|(\"\")|(\\*)|(\\b$)/g,\n                function (match, breakStart, space, specialChar, isQuote, isAsterisk, breakEnd) {\n                  return space\n                    ? '\\\\s+'\n                    : specialChar\n                      ? '\\\\' + specialChar\n                      : isQuote\n                        ? '\"'\n                        : isAsterisk\n                          ? '.*'\n                          : (breakStart === '' || (breakEnd === '' && (!opt_options.matchWordStart || quoteBody)))\n                            ? '\\\\b'\n                            : match;\n                }\n              ),\n              'g' + (opt_options.ignoreCase === false ? '' : 'i')\n            ),\n          must: hasPlus === '+' ? true : hasMinus === '-' ? false : undefined\n        });\n        DEFAULT_MUSTS.push(must !== true);\n      }\n      catch (e) {\n        if (opt_options.ignoreErrors) {\n          console.warn(e);\n        }\n        else {\n          throw e;\n        }\n      }\n    }\n  );\n\n  return function (str) {\n    var musts = DEFAULT_MUSTS.slice();\n    var matchWraps = [];\n    terms.forEach(function (term, termIndex) {\n      var match;\n      while (match = term.rgx.exec(str)) {\n        if (match[0] === '') {\n          term.rgx.lastIndex++;\n        }\n        matchWraps.push({ match: match, term: term, termIndex: termIndex });\n      }\n    });\n\n    matchWraps = matchWraps.sort(function (a, b) {\n      return (a.match.index - b.match.index) || (a.termIndex - b.termIndex);\n    }).filter(function (matchWrap, matchWrapIndex) {\n      var keepIt = !matchWrapIndex;\n      if (!keepIt) {\n        var prevMatch = matchWraps[matchWrapIndex - 1].match;\n        var prevMatchEnd = prevMatch.index + prevMatch[0].length;\n        keepIt = matchWrap.match.index >= prevMatchEnd;\n      }\n      if (keepIt) {\n        musts[matchWrap.termIndex] = matchWrap.term.must;\n      }\n      return keepIt;\n    });\n\n    return !musts.some(function (must) { return must === false; })\n      && !!matchWraps.length\n      && matchWraps.map(function (matchWrap) { return matchWrap.match; });\n  };\n}\n\nfunction parseLocalDate(strDate) {\n  let match = RGX_LOOSE_DATE.exec(strDate);\n  if (match) {\n    return new Date(+match[1], +match[2] - 1, +match[3], +match[4] || 0, +match[5] || 0, +match[6] || 0, +match[7] || 0);\n  }\n}\n\nfunction parseOptionalNumber(strNum) {\n  if (strNum) {\n    if ('function' === typeof BigInt && /^-?(0|[1-9]\\d+)n$/.test(strNum)) {\n      return BigInt(strNum.slice(0, -1));\n    }\n    else if (!isNaN(strNum = +strNum)) {\n      return strNum;\n    }\n  }\n}\n\nmodule.exports = {\n  toCSV,\n  parseRegExp,\n  pseudoCssToJSON,\n  getCellValue,\n  getHtmlText,\n  term,\n  parseLocalDate,\n  parseOptionalNumber\n};"],"file":"helper-functions.js"}