{"version":3,"sources":["../src/ctrl.js"],"names":["DEFAULT_PSEUDO_CSS","TOOLTIP_PLACEMENTS","CONTENT_RULE_TYPES","id","text","CONTENT_RULE_CLASS_LEVELS","CONTENT_RULE_MAX_VALUE_OPS","CONTENT_RULE_MIN_VALUE_OPS","CONTENT_RULE_EXACT_NUM_OPS","DEFAULT_PANEL_SETTINGS","allowLengthChange","allowOrdering","allowSearching","columnDefs","initialPageLength","isFullWidth","pageLengths","pseudoCSS","DataTablePanelCtrl","$scope","$injector","$rootScope","_","defaultsDeep","panel","events","on","onInitEditMode","bind","onDataReceived","onDataError","onInitPanelActions","onPanelSizeChanged","draw","panelJSON","getPanelSettingsJSON","spacing","JSON","stringify","key","value","has","undefined","fixDataTableSize","path","addEditorTab","actions","push","click","dataList","length","forEach","data","isReal","EXTRA_COLS","columns","concat","range","map","y","rows","x","Math","random","type","name","test","eval","filter","display","displayIsHTML","url","openNewWindow","width","classNames","isVisible","isOrderable","isSearchable","contentRules","columnDef","splice","indexOf","classLevel","negateCriteria","minValue","maxValue","minValueOp","maxValueOp","tooltip","placement","contentRule","replace","split","reduce","arr","parseInt","Infinity","div","JS","dom","parseDataList","href","encodeURIComponent","toCSV","row","carry","cell","visible","innerHTML","html","textContent","headers","header","download","title","formatDate","Date","templateSrv","variables","variable","varValues","toArray","current","isAll","includeAll","ctrl","jElem","panelElement","height","tableOpts","cls","style","table","jTable","jQuery","appendTo","dataTableOpts","column","colIndex","result","colDef","className","orderable","searchable","scrollY","scrollX","scrollCollapse","ordering","searching","lengthChange","lengthMenu","getPageLengthOptions","opt","pageLength","order","headerCallback","tr","thIndex","col","jTH","eq","rowCallback","rowData","tdIndex","jTD","level","addClass","names","escape","dataTable","DataTable","find","css","each","i","elem","trim","appendChild","parse","pseudoCssToJSON","varsByName","getVarsByName","colDefs","colDefRgxs","parseRegExp","colDefContentRuleFilters","rule","cloneDeep","extend","colDefRgx","colDefIndex","gcvOptions","cellsByColName","ruleType","rgx","getCellValue","target","slice","cellValue","rules","reduceRight","val","ruleIndex","isMatch","colDefContentRuleFilter","minIsNum","RGX_SIMPLE_NUMBER","maxIsNum","displayHTML","tooltipHTML","toLowerCase","refId","fullHeight","jWrap","wrapHeight","jScrollBody","scrollHeight","nonScrollHeight","error","isValid","element","jContent","elemContent","pageLengthOptions","setContent","selector","err","msg","message","elemMsg","alignItems","textAlign","$","margin","append","scope","attrs","throttleDraw","debounce","MetricsPanelCtrl","templateUrl"],"mappings":"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","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport * as JS from './external/YourJS.min';\nimport './external/helper-functions';\nimport './external/datatables/js/jquery.dataTables.min';\nimport './external/datatables/js/dataTables.fixedHeader.min';\nimport './external/datatables/css/jquery.dataTables.min.css!';\nimport './external/datatables/css/fixedHeader.dataTables.min.css!';\n\nconst DEFAULT_PSEUDO_CSS = `\n.theme-dark & {\n  color: white;\n}\ntable.dataTable tbody tr {\n  &:hover td {\n    background-image: linear-gradient(0deg, rgba(128,128,128,0.1), rgba(128,128,128,0.1));\n  }\n  &, &.even, &.odd {\n    background-color: transparent;\n    >.sorting_1, >.sorting_2, >.sorting_3 {\n      background-color: transparent;\n    }\n    td {\n      border-color: transparent;\n    }\n  }\n  &.odd {\n    background-color: rgba(128,128,128,0.3);\n  }\n  &.even {\n    background-color: rgba(128,128,128,0.15);\n  }\n}\n`;\n\nconst TOOLTIP_PLACEMENTS = [\n  { \"id\": \"TOP\", \"text\": \"Top\" },\n  { \"id\": \"LEFT\", \"text\": \"Left\" },\n  { \"id\": \"RIGHT\", \"text\": \"Right\" },\n  { \"id\": \"BOTTOM\", \"text\": \"Bottom\" }\n];\n\nconst CONTENT_RULE_TYPES = [\n  { id: 'FILTER', text: 'Filter by exact value or RegExp' },\n  { id: 'RANGE', text: \"Match a range of values\" },\n  { id: 'NULL', text: \"Is NULL\" }\n];\n\nconst CONTENT_RULE_CLASS_LEVELS = [\n  { id: 'CELL', text: \"Only the cell\" },\n  { id: 'ROW', text: 'Entire row' }\n];\n\nconst CONTENT_RULE_MAX_VALUE_OPS = [\n  { id: '', text: '' },\n  { id: '>=', text: '\\u2265 (greater than or equal to)' },\n  { id: '>', text: '> (greater than)' }\n];\n\nconst CONTENT_RULE_MIN_VALUE_OPS = [\n  { id: '', text: '' },\n  { id: '<', text: '< (less than)' },\n  { id: '<=', text: '\\u2264 (less than or equal to)' }\n];\n\nconst CONTENT_RULE_EXACT_NUM_OPS = [\n  { id: '==', text: '= (equals)' },\n  { id: '!=', text: \"\\u2260 (doesn't)\" }\n];\n\nconst DEFAULT_PANEL_SETTINGS = {\n  allowLengthChange: true,\n  allowOrdering: true,\n  allowSearching: true,\n  columnDefs: [],\n  initialPageLength: 25,\n  isFullWidth: true,\n  pageLengths: '10,15,20,25,50,100',\n  pseudoCSS: DEFAULT_PSEUDO_CSS\n};\n\nexport class DataTablePanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n\n    this.$rootScope = $rootScope;\n\n    _.defaultsDeep(this.panel, DEFAULT_PANEL_SETTINGS);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n    this.events.on('render', this.onPanelSizeChanged.bind(this));\n    this.events.on('view-mode-changed', this.draw.bind(this));\n  }\n\n  drawIfChanged() {\n    if (this.panelJSON !== this.getPanelSettingsJSON()) {\n      this.draw();\n    }\n  }\n\n  getPanelSettingsJSON(spacing) {\n    let panel = this.panel;\n    return JSON.stringify(\n      panel,\n      function (key, value) {\n        return (this != panel || _.has(DEFAULT_PANEL_SETTINGS, key))\n          ? value\n          : undefined;\n      },\n      spacing\n    );\n  }\n\n  onPanelSizeChanged() {\n    this.fixDataTableSize();\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/copperhill-datatables-panel/partials/';\n    this.addEditorTab('Table View', `${path}refresh-view.html`, 1);\n    this.addEditorTab('Options', `${path}editor.html`, 2);\n    this.addEditorTab('Column Definitions', `${path}column-defs.html`, 3);\n    this.addEditorTab('Styles', `${path}styles.html`, 4);\n    this.addEditorTab('Table View', `${path}refresh-view.html`, 5);\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({ text: 'Export CSV', click: 'ctrl.exportCSV()' });\n  }\n\n  onDataError() {\n    this.draw();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      dataList.forEach(data => data.isReal = true);\n      this.dataList = dataList;\n    }\n    else {\n      let EXTRA_COLS = 2;\n      this.dataList = [\n        {\n          columns: [{ text: \"X\" }, { text: \"X * X\" }, { text: \"X + X\" }].concat(_.range(EXTRA_COLS).map(y => ({ text: `${y} / Math.random()` }))),\n          rows: _.range(150).map(x => [x, x * x, x + x].concat(_.range(EXTRA_COLS).map(y => y / Math.random()))),\n          isReal: false,\n          type: 'table'\n        }\n      ];\n    }\n\n    this.draw();\n  }\n\n  getConstByName(name) {\n    if (/^[A-Z_][A-Z_0-9]*$/.test(name)) {\n     return eval(name);\n    }\n  }\n\n  addColumnDef() {\n    this.panel.columnDefs.push({\n      filter: '/[^]*/',\n      display: '${value}',\n      displayIsHTML: false,\n      url: '',\n      openNewWindow: true,\n      width: '',\n      classNames: '',\n      isVisible: true,\n      isOrderable: true,\n      isSearchable: true,\n      contentRules: []\n    });\n  }\n\n  removeColumnDef(columnDef) {\n    let columnDefs = this.panel.columnDefs;\n    columnDefs.splice(columnDefs.indexOf(columnDef), 1);\n  }\n\n  addColumnContentRule(columnDef) {\n    columnDef.contentRules.push({\n      type: CONTENT_RULE_TYPES[0].id,\n      classNames: '',\n      classLevel: CONTENT_RULE_CLASS_LEVELS[0].id,\n      filter: '',\n      negateCriteria: false,\n      display: '${value}',\n      displayIsHTML: false,\n      minValue: null,\n      maxValue: null,\n      minValueOp: null,\n      maxValueOp: null,\n      url: '',\n      openNewWindow: true,\n      tooltip: {\n        isVisible: false,\n        display: '',\n        placement: TOOLTIP_PLACEMENTS[0].id\n      }\n    });\n  }\n\n  removeColumnContentRule(contentRule, columnDef) {\n    let contentRules = columnDef.contentRules;\n    contentRules.splice(contentRules.indexOf(contentRule), 1);\n  }\n\n  getPageLengthOptions() {\n    return this.panel.pageLengths\n        .replace(/\\s+/g, '')\n        .split(',')\n        .reduce(\n          (arr, x) => {\n            if (+x === parseInt(x, 10) && +x >= -1) {\n              x = x == -1 ? Infinity : +x;\n              arr.push({ value: x, text: x === Infinity ? 'All' : x });\n            }\n            return arr;\n          },\n          []\n        );\n  }\n\n  exportCSV() {\n    let div = JS.dom({ _: 'div' });\n    let data = this.parseDataList(0);\n\n    JS.dom({\n      _: 'a',\n      href: 'data:text/csv;charset=utf-8,' + encodeURIComponent(\n        toCSV(\n          data.rows.map(row => row.reduce((carry, cell) => {\n            if (cell.visible) {\n              div.innerHTML = cell.html;\n              carry.push(div.textContent);\n            }\n            return carry;\n          }, [])),\n          {\n            headers: data.columns.reduce((carry, header) => {\n              if (header.visible) {\n                div.innerHTML = header.html;\n                carry.push(div.textContent);\n              }\n              return carry;\n            }, [])\n          }\n        )\n      ),\n      download: this.panel.title + JS.formatDate(new Date, \" (YYYY-MM-DD 'at' H.mm.ss).'csv'\")\n    }).click();\n  }\n\n  getVarsByName() {\n    return this.templateSrv.variables.reduce(\n      (carry, variable) => {\n        // At times current.value is a string and at times it is an array.\n        let varValues = JS.toArray(variable.current.value);\n        let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n        carry[variable.name] = isAll ? [variable.current.text] : varValues;\n        return carry;\n      },\n      {}\n    );\n  }\n\n  setContent(data) {\n    let ctrl = this;\n    let panel = ctrl.panel;\n    let jElem = ctrl.panelElement;\n    let height = jElem.height();\n    let tableOpts = { _: 'table', cls: 'display', style: {} };\n    if (panel.isFullWidth) {\n      tableOpts.style.width = '100%';\n    }\n\n    let table = JS.dom(tableOpts);\n    let jTable = jQuery(table).appendTo(jElem.html(''));\n    let columns = data.columns;\n    let headers = data.headers;\n    let dataTableOpts = {\n      data: data.rows,\n      columns: columns.map((column, colIndex) => {\n        let result = { title: column.text, visible: column.visible };\n\n        let colDef = column.colDef;\n        if (colDef && column.visible) {\n          if (colDef.width) {\n            result.width = colDef.width;\n          }\n          if (colDef.classNames) {\n            result.className = colDef.classNames;\n          }\n          result.orderable = colDef.isOrderable;\n          result.searchable = colDef.isSearchable;\n        }\n\n        return result;\n      }),\n      scrollY: height,\n      scrollX: true,\n      scrollCollapse: true,\n      ordering: panel.allowOrdering,\n      searching: panel.allowSearching,\n      lengthChange: panel.allowLengthChange,\n      lengthMenu: ctrl.getPageLengthOptions().reduce(\n        (arr, opt) => [\n          arr[0].concat([opt.value === Infinity ? -1 : opt.value]),\n          arr[1].concat([opt.value === Infinity ? 'All' : opt.value])\n        ],\n        [[], []]\n      ),\n      pageLength: panel.initialPageLength,\n      order: [],\n      headerCallback(tr) {\n        let thIndex = 0;\n        columns.forEach(col => {\n          if (col.visible) {\n            let jTH = jQuery('>th', tr).eq(thIndex++).html(col.html);\n          }\n        });\n      },\n      rowCallback(tr, rowData) {\n        let tdIndex = 0;\n        rowData.forEach(cell => {\n          if (cell.visible) {\n            let jTD = jQuery('>td', tr).eq(tdIndex++);\n            if (cell.cls && cell.cls.level === 'CELL') {\n              jTD.addClass(cell.cls.names);\n            }\n            let html = cell.html;\n            if (cell.tooltip) {\n              html = `<div data-tooltip data-original-title=\"${_.escape(cell.tooltip.display)}\" data-placement=\"${cell.tooltip.placement}\" class=\"d-inline-block\">${html}</div>`;\n            }\n            jTD.html(html);\n          }\n          else if (cell.cls && cell.cls.level === 'ROW') {\n            jQuery(tr).addClass(cell.cls.names);\n          }\n        });\n      }\n    };\n    let dataTable = jTable.DataTable(dataTableOpts);\n\n    jElem.find('.dataTables_scrollHeadInner').css('margin', '0 auto');\n    ctrl.fixDataTableSize();\n\n    jElem.each((i, elem) => {\n      elem.className = elem.className.replace(/\\b_\\d+\\b/g, ' ').replace(/\\s+/g, ' ').trim();\n      elem.appendChild(JS.css(JSON.parse(pseudoCssToJSON(panel.pseudoCSS)), elem));\n    });\n  }\n\n  parseDataList() {\n    let ctrl = this;\n    let data = ctrl.dataList[0];\n    let columns = data.columns;\n    let rows = data.rows;\n    let varsByName = ctrl.getVarsByName();\n    let headers = columns.map(col => col.text);\n    let colDefs = ctrl.panel.columnDefs;\n    let colDefRgxs = colDefs.map(colDef => parseRegExp(colDef.filter));\n    let colDefContentRuleFilters = colDefs.map(\n      colDef => colDef.contentRules.map(\n        rule => rule.type === 'FILTER' ? parseRegExp(rule.filter) : null\n      )\n    );\n\n    columns = _.cloneDeep(columns).map(column => {\n      column = _.extend(\n        'string' === typeof column ? { text: column } : column,\n        { visible: true }\n      );\n\n      colDefRgxs.find((colDefRgx, colDefIndex) => {\n        if (colDefRgx.test(column.text)) {\n          let colDef = colDefs[colDefIndex];\n          let gcvOptions = {\n            cell: column.text,\n            cellsByColName: {},\n            ruleType: 'FILTER',\n            rgx: colDefRgx,\n            ctrl,\n            varsByName\n          };\n          column.text = getCellValue(colDef.display, false, gcvOptions);\n\n          let html = colDef.displayIsHTML ? column.text : _.escape(column.text);\n\n          if (colDef.url) {\n            let url = _.escape(getCellValue(colDef.url, true, gcvOptions));\n            let target = colDef.openNewWindow ? '_blank' : '';\n            html = `<a href=\"${url}\" target=\"${target}\" onclick=\"event.stopPropagation()\">${html}</a>`;\n          }\n\n          _.extend(column, {\n            colDef,\n            colDefContentRuleFilters: colDefContentRuleFilters[colDefIndex],\n            html: html,\n            visible: colDef.isVisible\n          });\n\n          return true;\n        }\n      });\n\n      if (!_.has(column, 'html')) {\n        column.html = _.escape(column.text);\n      }\n\n      return column;\n    });\n\n    rows = rows.map(row => {\n      return row.slice().map((cellValue, colIndex) => {\n        let column = columns[colIndex];\n        let colDef = column.colDef;\n\n        let cell = {\n          html: cellValue,\n          visible: column.visible\n        };\n\n        if (colDef) {\n          let rules = colDef.contentRules;\n          let cellsByColName = row.reduceRight(\n            (carry, val, i) => _.extend(carry, { [headers[i]]: val }),\n            {}\n          );\n\n          // Use Array#find() solely to match the first applicable rule...\n          rules.find((rule, ruleIndex) => {\n            let isMatch = true;\n            let type = rule.type;\n            let colDefContentRuleFilter = column.colDefContentRuleFilters[ruleIndex];\n            let gcvOptions = {\n              cell: cell.html,\n              cellsByColName,\n              ruleType: rule.type,\n              rgx: colDefContentRuleFilter,\n              ctrl,\n              varsByName\n            };\n            if (type === 'FILTER') {\n              isMatch = colDefContentRuleFilter.test(cell.html);\n            }\n            else if (type === 'RANGE') {\n              let minValue = rule.minValue;\n              let minIsNum = RGX_SIMPLE_NUMBER.test(minValue);\n              let maxValue = rule.maxValue;\n              let maxIsNum = RGX_SIMPLE_NUMBER.test(maxValue);\n              if (minIsNum) {\n                minValue = +minValue;\n              }\n              if (maxIsNum) {\n                maxValue = +maxValue;\n              }\n\n              if (minIsNum || maxIsNum) {\n                cellValue = +cellValue;\n              }\n\n              let minValueOp = rule.minValueOp;\n              if (minValueOp) {\n                isMatch = isMatch && (minValueOp === '<=' ? minValue <= cellValue : (minValue < cellValue));\n              }\n              let maxValueOp = rule.maxValueOp;\n              if (maxValueOp) {\n                isMatch = isMatch && (maxValueOp === '>=' ? maxValue >= cellValue : (maxValue > cellValue));\n              }\n            }\n            else {\n              isMatch = cell.html == null;\n            }\n\n            isMatch = isMatch !== rule.negateCriteria;\n\n            // If this is a match apply the class(es)\n            if (isMatch) {\n              if (rule.classNames) {\n                cell.cls = {\n                  names: getCellValue(rule.classNames, false, gcvOptions),\n                  level: rule.classLevel\n                };\n              }\n\n              // Set the display\n              let displayHTML = getCellValue(rule.display, false, gcvOptions);\n              if (!rule.displayIsHTML) {\n                displayHTML = _.escape(displayHTML);\n              }\n              if (rule.url) {\n                let url = _.escape(getCellValue(rule.url, true, gcvOptions));\n                let target = rule.openNewWindow ? '_blank' : '';\n                let tooltipHTML = '';\n                if (rule.tooltip.isVisible) {\n                  cell.tooltip = {\n                    display: getCellValue(rule.tooltip.display, false, gcvOptions),\n                    placement: rule.tooltip.placement.toLowerCase()\n                  };\n                }\n                displayHTML = `<a href=\"${url}\" target=\"${target}\">${displayHTML}</a>`;\n              }\n              cell.html = displayHTML;\n            }\n\n            return isMatch;\n          });\n        }\n\n        return cell;\n      });\n    });\n\n    return { columns, rows, headers, type: data.type, refId: data.refId };\n  }\n\n  fixDataTableSize() {\n    let jElem = this.panelElement;\n    let fullHeight = jElem.height();\n    let jWrap = jElem.find('.dataTables_wrapper');\n    if (jWrap.length) {\n      let wrapHeight = jWrap.height();\n      let jScrollBody = jWrap.find('.dataTables_scrollBody');\n      let scrollHeight = jScrollBody.height();\n      let nonScrollHeight = wrapHeight - scrollHeight;\n      jScrollBody.css('max-height', fullHeight - nonScrollHeight);\n    }\n  }\n\n  draw() {\n    let error;\n    let isValid = false;\n    let ctrl = this;\n    let jElem = ctrl.element;\n    let jContent = ctrl.panelElement.css('position', 'relative').html('');\n    let elemContent = jContent[0];\n    let data = ctrl.parseDataList();\n\n    ctrl.pageLengthOptions = ctrl.getPageLengthOptions();\n\n    if (data && data.rows.length) {\n      if (data.type === 'table') {\n        try {\n          ctrl.setContent(data);\n          ctrl.panelJSON = this.getPanelSettingsJSON();\n          jElem.tooltip({ selector: '[data-tooltip]' });\n          isValid = true;\n        }\n        catch (err) {\n          error = err;\n        }\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n      if (error) {\n        throw error;\n      }\n    }\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.element = elem;\n    this.panelElement = elem.find('.panel-content');\n    this.throttleDraw = _.debounce(this.draw.bind(this), 1000);\n  }\n}\n\nDataTablePanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}