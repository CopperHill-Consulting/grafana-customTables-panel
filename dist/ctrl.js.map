{"version":3,"sources":["../src/ctrl.js"],"names":["DEFAULT_PSEUDO_CSS","TOOLTIP_PLACEMENTS","CONTENT_RULE_TYPES","id","text","CONTENT_RULE_CLASS_LEVELS","CONTENT_RULE_MAX_VALUE_OPS","CONTENT_RULE_MIN_VALUE_OPS","CONTENT_RULE_EXACT_NUM_OPS","DEFAULT_PANEL_SETTINGS","allowLengthChange","allowOrdering","allowSearching","columnDefs","initialPageLength","isFullWidth","pageLengths","pseudoCSS","varCols","dataRefId","mainJoinColumn","joinColumn","nameColumn","valueColumn","DataTablePanelCtrl","$scope","$injector","$rootScope","_","defaultsDeep","panel","events","on","onInitEditMode","bind","onDataReceived","onDataError","onInitPanelActions","onPanelSizeChanged","draw","panelJSON","getPanelSettingsJSON","spacing","JSON","stringify","key","value","has","undefined","fixDataTableSize","path","addEditorTab","actions","push","click","dataList","length","forEach","data","isReal","putVarColsInData","EXTRA_COLS","columns","concat","range","map","y","rows","x","Math","random","type","name","test","eval","filter","display","displayIsHTML","url","openNewWindow","width","classNames","isVisible","isOrderable","isSearchable","contentRules","columnDef","splice","indexOf","classLevel","negateCriteria","minValue","maxValue","minValueOp","maxValueOp","tooltip","placement","contentRule","replace","split","reduce","arr","parseInt","Infinity","parseDataList","JS","dom","href","encodeURIComponent","row","carry","cell","visible","html","headers","header","download","title","formatDate","Date","templateSrv","variables","variable","varValues","toArray","current","isAll","includeAll","ctrl","jElem","panelElement","height","domTable","style","table","jTable","jQuery","appendTo","dataTableOpts","column","colIndex","result","colDef","className","orderable","searchable","headerCallback","tr","thIndex","col","jTH","eq","rowCallback","rowData","pageDisplayIndex","displayIndex","rowIndex","tdIndex","console","log","arguments","cellText","jTD","cls","level","addClass","names","escape","scrollY","scrollX","scrollCollapse","ordering","searching","lengthChange","lengthMenu","getPageLengthOptions","opt","pageLength","order","dataTable","DataTable","find","css","each","i","elem","trim","appendChild","parse","getVarColsData","refId","slice","MAIN_COL_COUNT","MAIN_ROW_COUNT","vcData","vcHeaders","mainJoinColIndex","findIndex","c","joinColIndex","nameColIndex","valueColIndex","mainRowIndex","sort","a","b","vcRows","vcRow","vcHeader","vcJoinValue","isNewVCHeader","mainRow","pop","colCount","apply","Array","fill","varsByName","getVarsByName","colDefs","colDefRgxs","colDefContentRuleFilters","rule","cloneDeep","extend","colDefRgx","colDefIndex","gcvOptions","cellsByColName","ruleType","rgx","target","cellValue","ruleApplied","rules","reduceRight","val","ruleIndex","isMatch","colDefContentRuleFilter","minIsNum","RGX_SIMPLE_NUMBER","maxIsNum","displayHTML","tooltipHTML","toLowerCase","fullHeight","jWrap","wrapHeight","jScrollBody","scrollHeight","nonScrollHeight","error","isValid","element","jContent","elemContent","pageLengthOptions","drawDataTable","selector","err","msg","message","elemMsg","alignItems","textAlign","$","margin","append","scope","attrs","throttleDraw","debounce","MetricsPanelCtrl","templateUrl"],"mappings":"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","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport * as JS from './external/YourJS.min';\nimport { toCSV, parseRegExp, pseudoCssToJSON, getCellValue, getHtmlText } from './helper-functions';\nimport './external/datatables/js/jquery.dataTables.min';\nimport './external/datatables/js/dataTables.fixedHeader.min';\nimport './external/datatables/css/jquery.dataTables.min.css!';\nimport './external/datatables/css/fixedHeader.dataTables.min.css!';\n\n\nconst DEFAULT_PSEUDO_CSS = `\n.theme-dark & {\n  color: white;\n}\ntable.dataTable tbody tr {\n  &:hover td {\n    background-image: linear-gradient(0deg, rgba(128,128,128,0.1), rgba(128,128,128,0.1));\n  }\n  &, &.even, &.odd {\n    background-color: transparent;\n    td {\n      border-color: transparent;\n    }\n  }\n  &.odd {\n    background-color: rgba(128,128,128,0.3);\n  }\n  &.even {\n    background-color: rgba(128,128,128,0.15);\n  }\n}\n`;\n\nconst TOOLTIP_PLACEMENTS = [\n  { \"id\": \"TOP\", \"text\": \"Top\" },\n  { \"id\": \"LEFT\", \"text\": \"Left\" },\n  { \"id\": \"RIGHT\", \"text\": \"Right\" },\n  { \"id\": \"BOTTOM\", \"text\": \"Bottom\" }\n];\n\nconst CONTENT_RULE_TYPES = [\n  { id: 'FILTER', text: 'Filter by exact value or RegExp' },\n  { id: 'RANGE', text: \"Match a range of values\" },\n  { id: 'NULL', text: \"Is NULL\" }\n];\n\nconst CONTENT_RULE_CLASS_LEVELS = [\n  { id: 'CELL', text: \"Only the cell\" },\n  { id: 'ROW', text: 'Entire row' }\n];\n\nconst CONTENT_RULE_MAX_VALUE_OPS = [\n  { id: '', text: '' },\n  { id: '>=', text: '\\u2265 (greater than or equal to)' },\n  { id: '>', text: '> (greater than)' }\n];\n\nconst CONTENT_RULE_MIN_VALUE_OPS = [\n  { id: '', text: '' },\n  { id: '<', text: '< (less than)' },\n  { id: '<=', text: '\\u2264 (less than or equal to)' }\n];\n\nconst CONTENT_RULE_EXACT_NUM_OPS = [\n  { id: '==', text: '= (equals)' },\n  { id: '!=', text: \"\\u2260 (doesn't)\" }\n];\n\nconst DEFAULT_PANEL_SETTINGS = {\n  allowLengthChange: true,\n  allowOrdering: true,\n  allowSearching: true,\n  columnDefs: [],\n  initialPageLength: 25,\n  isFullWidth: true,\n  pageLengths: '10,15,20,25,50,100',\n  pseudoCSS: DEFAULT_PSEUDO_CSS,\n  varCols: {\n    dataRefId: null,\n    mainJoinColumn: null,\n    joinColumn: null,\n    nameColumn: null,\n    valueColumn: null\n  }\n};\n\nexport class DataTablePanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n\n    this.$rootScope = $rootScope;\n\n    _.defaultsDeep(this.panel, DEFAULT_PANEL_SETTINGS);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n    this.events.on('render', this.onPanelSizeChanged.bind(this));\n    this.events.on('view-mode-changed', this.draw.bind(this));\n  }\n\n  drawIfChanged() {\n    if (this.panelJSON !== this.getPanelSettingsJSON()) {\n      this.draw();\n    }\n  }\n\n  getPanelSettingsJSON(spacing) {\n    let panel = this.panel;\n    return JSON.stringify(\n      panel,\n      function (key, value) {\n        return (this != panel || _.has(DEFAULT_PANEL_SETTINGS, key))\n          ? value\n          : undefined;\n      },\n      spacing\n    );\n  }\n\n  onPanelSizeChanged() {\n    this.fixDataTableSize();\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/copperhill-datatables-panel/partials/';\n    this.addEditorTab('Table View', `${path}refresh-view.html`, 1);\n    this.addEditorTab('Variable Columns', `${path}var-cols.html`, 2);\n    this.addEditorTab('Editor', `${path}editor.html`, 3);\n    this.addEditorTab('Column Definitions', `${path}column-defs.html`, 4);\n    this.addEditorTab('Styles', `${path}styles.html`, 5);\n    this.addEditorTab('Table View', `${path}refresh-view.html`, 6);\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({ text: 'Export CSV', click: 'ctrl.exportCSV()' });\n  }\n\n  onDataError() {\n    this.draw();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      dataList.forEach(data => data.isReal = true);\n      this.dataList = dataList;\n\n      // Add the variable columns to the data if there are any.\n      this.putVarColsInData();\n    }\n    else {\n      let EXTRA_COLS = 2;\n      this.dataList = [\n        {\n          columns: [{ text: \"X\" }, { text: \"X * X\" }, { text: \"X + X\" }].concat(_.range(EXTRA_COLS).map(y => ({ text: `${y} / Math.random()` }))),\n          rows: _.range(150).map(x => [x, x * x, x + x].concat(_.range(EXTRA_COLS).map(y => y / Math.random()))),\n          isReal: false,\n          type: 'table'\n        }\n      ];\n    }\n\n    this.draw();\n  }\n\n  getConstByName(name) {\n    if (/^[A-Z_][A-Z_0-9]*$/.test(name)) {\n     return eval(name);\n    }\n  }\n\n  addColumnDef() {\n    this.panel.columnDefs.push({\n      filter: '/[^]*/',\n      display: '${value}',\n      displayIsHTML: false,\n      url: '',\n      openNewWindow: true,\n      width: '',\n      classNames: '',\n      isVisible: true,\n      isOrderable: true,\n      isSearchable: true,\n      contentRules: []\n    });\n  }\n\n  removeColumnDef(columnDef) {\n    let columnDefs = this.panel.columnDefs;\n    columnDefs.splice(columnDefs.indexOf(columnDef), 1);\n  }\n\n  addColumnContentRule(columnDef) {\n    columnDef.contentRules.push({\n      type: CONTENT_RULE_TYPES[0].id,\n      classNames: '',\n      classLevel: CONTENT_RULE_CLASS_LEVELS[0].id,\n      filter: '',\n      negateCriteria: false,\n      display: '${value}',\n      displayIsHTML: false,\n      minValue: null,\n      maxValue: null,\n      minValueOp: null,\n      maxValueOp: null,\n      url: '',\n      openNewWindow: true,\n      tooltip: {\n        isVisible: false,\n        display: '',\n        placement: TOOLTIP_PLACEMENTS[0].id\n      }\n    });\n  }\n\n  removeColumnContentRule(contentRule, columnDef) {\n    let contentRules = columnDef.contentRules;\n    contentRules.splice(contentRules.indexOf(contentRule), 1);\n  }\n\n  getPageLengthOptions() {\n    return this.panel.pageLengths\n        .replace(/\\s+/g, '')\n        .split(',')\n        .reduce(\n          (arr, x) => {\n            if (+x === parseInt(x, 10) && +x >= -1) {\n              x = x == -1 ? Infinity : +x;\n              arr.push({ value: x, text: x === Infinity ? 'All' : x });\n            }\n            return arr;\n          },\n          []\n        );\n  }\n\n  exportCSV() {\n    let data = this.parseDataList();\n    JS.dom({\n      _: 'a',\n      href: 'data:text/csv;charset=utf-8,' + encodeURIComponent(\n        toCSV(\n          data.rows.map(row => row.reduce((carry, cell) => {\n            if (cell.visible) {\n              carry.push(getHtmlText(cell.html));\n            }\n            return carry;\n          }, [])),\n          {\n            headers: data.columns.reduce((carry, header) => {\n              if (header.visible) {\n                carry.push(getHtmlText(header.html));\n              }\n              return carry;\n            }, [])\n          }\n        )\n      ),\n      download: this.panel.title + JS.formatDate(new Date, \" (YYYY-MM-DD 'at' H.mm.ss).'csv'\")\n    }).click();\n  }\n\n  getVarsByName() {\n    return this.templateSrv.variables.reduce(\n      (carry, variable) => {\n        // At times current.value is a string and at times it is an array.\n        let varValues = JS.toArray(variable.current.value);\n        let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n        carry[variable.name] = isAll ? [variable.current.text] : varValues;\n        return carry;\n      },\n      {}\n    );\n  }\n\n  drawDataTable(data) {\n    let ctrl = this;\n    let panel = ctrl.panel;\n    let jElem = ctrl.panelElement;\n    let height = jElem.height();\n    let columns = data.columns;\n    let rows = data.rows;\n    let domTable = { _: 'table', style: {} };\n    if (panel.isFullWidth) {\n      domTable.style.width = '100%';\n    }\n\n    let table = JS.dom(domTable);\n    let jTable = jQuery(table).appendTo(jElem.html(''));\n    let headers = data.headers;\n    let dataTableOpts = {\n      columns: columns.map((column, colIndex) => {\n        let result = {\n          title: getHtmlText(column.html),\n          visible: column.visible\n        };\n\n        let colDef = column.colDef;\n        if (colDef && column.visible) {\n          if (colDef.width) {\n            result.width = colDef.width;\n          }\n          if (colDef.classNames) {\n            result.className = colDef.classNames;\n          }\n          result.orderable = colDef.isOrderable;\n          result.searchable = colDef.isSearchable;\n        }\n\n        return result;\n      }),\n      headerCallback(tr) {\n        let thIndex = 0;\n        columns.forEach(col => {\n          if (col.visible) {\n            let jTH = jQuery('>th', tr).eq(thIndex++).html(col.html);\n          }\n        });\n      },\n      data: rows.map(row => row.map(cell => getHtmlText(cell.html))),\n      rowCallback(tr, rowData, pageDisplayIndex, displayIndex, rowIndex) {\n        let tdIndex = 0;\n        let row = rows[rowIndex];\n        console.log({rowData, rowIndex, arguments: arguments, row});\n        rowData.forEach((cellText, colIndex) => {\n          let cell = rows[rowIndex][colIndex];\n          if (cell.visible) {\n            let jTD = jQuery('> td', tr).eq(tdIndex++);\n            if (cell.cls && cell.cls.level === 'CELL') {\n              jTD.addClass(cell.cls.names);\n            }\n            let colDef = columns[colIndex].columnDef;\n            if (colDef && colDef.classNames) {\n              jTD.addClass(colDef.classNames);\n            }\n            let html = cell.html;\n            if (cell.tooltip) {\n              html = `<div data-tooltip data-original-title=\"${_.escape(cell.tooltip.display)}\" data-placement=\"${cell.tooltip.placement}\" class=\"d-inline-block\">${html}</div>`;\n            }\n            jTD.html(html);\n          }\n          if (cell.cls && cell.cls.level === 'ROW') {\n            jQuery(tr).addClass(cell.cls.names);\n          }\n        });\n      },\n      scrollY: height,\n      scrollX: true,\n      scrollCollapse: true,\n      ordering: panel.allowOrdering,\n      searching: panel.allowSearching,\n      lengthChange: panel.allowLengthChange,\n      lengthMenu: ctrl.getPageLengthOptions().reduce(\n        (arr, opt) => [\n          arr[0].concat([opt.value === Infinity ? -1 : opt.value]),\n          arr[1].concat([opt.value === Infinity ? 'All' : opt.value])\n        ],\n        [[], []]\n      ),\n      pageLength: panel.initialPageLength,\n      order: []\n    };\n    let dataTable = jTable.DataTable(dataTableOpts);\n\n    // Horizontally center tables that are not full page width.\n    jElem.find('.dataTables_scrollHeadInner').css('margin', '0 auto');\n\n    // Resize the scroll body of the table.\n    ctrl.fixDataTableSize();\n\n    // Remove the old class names from the wrapper element and add a new\n    // targeted stylesheet.\n    jElem.each((i, elem) => {\n      elem.className = elem.className.replace(/\\b_\\d+\\b/g, ' ').replace(/\\s+/g, ' ').trim();\n      elem.appendChild(JS.css(JSON.parse(pseudoCssToJSON(panel.pseudoCSS)), elem));\n    });\n  }\n\n  getVarColColumns() {\n    let data = this.getVarColsData();\n    return data ? data.columns : [];\n  }\n\n  getVarColsData() {\n    let varCols = this.panel.varCols;\n    let dataRefId = varCols && varCols.dataRefId;\n    let dataList = this.dataList;\n    return dataList && dataList.find(({ refId }) => refId === dataRefId);\n  }\n\n  putVarColsInData() {\n    let varCols = this.panel.varCols;\n    let dataList = this.dataList;\n    let data = dataList[0];\n    let columns = data.columns;\n    let rows = data.rows.slice();\n\n    const MAIN_COL_COUNT = columns.length;\n    const MAIN_ROW_COUNT = rows.length;\n\n    if (varCols) {\n      let vcData = this.getVarColsData();\n      if (vcData) {\n        let vcHeaders = vcData.columns.map(col => col.text);\n        let mainJoinColIndex = columns.findIndex(c => c.text === varCols.mainJoinColumn);\n        let joinColIndex = vcHeaders.indexOf(varCols.joinColumn);\n        let nameColIndex = vcHeaders.indexOf(varCols.nameColumn);\n        let valueColIndex = vcHeaders.indexOf(varCols.valueColumn);\n        if (mainJoinColIndex >= 0 && joinColIndex >= 0 && nameColIndex >= 0 && valueColIndex >= 0) {\n          let mainRowIndex = 0;\n          \n          // Order a sliced version of the main `rows` using the join column.\n          rows.sort((a, b) => a[mainJoinColIndex] < b[mainJoinColIndex] ? -1 : 1);\n\n          // Order a sliced version of the varCols rows using the join column.\n          let vcRows = vcData.rows.slice().sort((a, b) => a[joinColIndex] < b[joinColIndex] ? -1 : 1);\n\n          vcRows\n            // Get a list of all of the new headers while simultaneously adding\n            // the data to the appropriate rows and in the appropriate columns.\n            .reduce((vcHeaders, vcRow) => {\n              let vcHeader = vcRow[nameColIndex];\n              let vcJoinValue = vcRow[joinColIndex];\n              let colIndex = vcHeaders.indexOf(vcHeader);\n              let isNewVCHeader = colIndex < 0;\n\n              // If the new column wasn't found add it.\n              if (isNewVCHeader) {\n                colIndex = vcHeaders.push(vcHeader) - 1;\n              }\n\n              // Since everything is ordered continue in `rows` looking for the\n              // join and if found add the value there while setting the new row's\n              // index as `mainRowIndex`.\n              for (let mainRow, i = mainRowIndex; i < MAIN_ROW_COUNT; i++) {\n                mainRow = rows[i];\n                if (vcJoinValue === mainRow[mainJoinColIndex]) {\n                  mainRow[MAIN_COL_COUNT + colIndex] = vcRow[valueColIndex];\n                  mainRowIndex = i;\n\n                  // NOTE:  Return here to avoid checking `i` outside of loop.\n                  return vcHeaders;\n                }\n              }\n\n              // If new header was added but join was unsuccessful remove the new\n              // header.\n              if (isNewVCHeader) {\n                vcHeaders.pop();\n              }\n\n              return vcHeaders;\n            }, [])\n            // Add the new `columns`.\n            .forEach(vcHeader => columns.push({ text: vcHeader }));\n\n          // Make sure all rows have the right number of columns.\n          let colCount = columns.length;\n          rows.forEach(row => row.push.apply(row, Array(colCount - row.length).fill(null)));\n        }\n      }\n    }\n  }\n\n  parseDataList() {\n    let ctrl = this;\n    let dataList = ctrl.dataList;\n    let data = dataList[0];\n    let columns = data.columns;\n    let rows = data.rows;\n    let varsByName = ctrl.getVarsByName();\n    let panel = ctrl.panel;\n    let colDefs = panel.columnDefs;\n    let varCols = panel.varCols;\n    let colDefRgxs = colDefs.map(colDef => parseRegExp(colDef.filter));\n    let colDefContentRuleFilters = colDefs.map(\n      colDef => colDef.contentRules.map(\n        rule => rule.type === 'FILTER' ? parseRegExp(rule.filter) : null\n      )\n    );\n\n    // Make an array of column headers.\n    let headers = columns.map(col => col.text);\n\n    columns = _.cloneDeep(columns).map(column => {\n      column = _.extend(\n        'string' === typeof column ? { text: column } : column,\n        { visible: true }\n      );\n\n      colDefRgxs.find((colDefRgx, colDefIndex) => {\n        if (colDefRgx.test(column.text)) {\n          let colDef = colDefs[colDefIndex];\n          let gcvOptions = {\n            cell: column.text,\n            cellsByColName: {},\n            ruleType: 'FILTER',\n            rgx: colDefRgx,\n            ctrl,\n            varsByName\n          };\n          column.text = getCellValue(colDef.display, false, gcvOptions);\n\n          let html = colDef.displayIsHTML ? column.text : _.escape(column.text);\n\n          if (colDef.url) {\n            let url = _.escape(getCellValue(colDef.url, true, gcvOptions));\n            let target = colDef.openNewWindow ? '_blank' : '';\n            html = `<a href=\"${url}\" target=\"${target}\" onclick=\"event.stopPropagation()\">${html}</a>`;\n          }\n\n          _.extend(column, {\n            colDef,\n            colDefContentRuleFilters: colDefContentRuleFilters[colDefIndex],\n            html: html,\n            visible: colDef.isVisible\n          });\n\n          return true;\n        }\n      });\n\n      if (!_.has(column, 'html')) {\n        column.html = _.escape(column.text);\n      }\n\n      return column;\n    });\n\n    rows = rows.map(row => {\n      return row.slice().map((cellValue, colIndex) => {\n        let ruleApplied;\n        let column = columns[colIndex];\n        let colDef = column.colDef;\n\n        let cell = {\n          html: cellValue,\n          visible: column.visible\n        };\n\n        if (colDef) {\n          let rules = colDef.contentRules;\n          let cellsByColName = row.reduceRight(\n            (carry, val, i) => _.extend(carry, { [headers[i]]: val }),\n            {}\n          );\n\n          // Use Array#find() solely to match the first applicable rule...\n          rules.find((rule, ruleIndex) => {\n            let isMatch = true;\n            let type = rule.type;\n            let colDefContentRuleFilter = column.colDefContentRuleFilters[ruleIndex];\n            let gcvOptions = {\n              cell: cell.html,\n              cellsByColName,\n              ruleType: rule.type,\n              rgx: colDefContentRuleFilter,\n              ctrl,\n              varsByName\n            };\n            if (type === 'FILTER') {\n              isMatch = colDefContentRuleFilter.test(cell.html);\n            }\n            else if (type === 'RANGE') {\n              let minValue = rule.minValue;\n              let minIsNum = RGX_SIMPLE_NUMBER.test(minValue);\n              let maxValue = rule.maxValue;\n              let maxIsNum = RGX_SIMPLE_NUMBER.test(maxValue);\n              if (minIsNum) {\n                minValue = +minValue;\n              }\n              if (maxIsNum) {\n                maxValue = +maxValue;\n              }\n\n              if (minIsNum || maxIsNum) {\n                cellValue = +cellValue;\n              }\n\n              let minValueOp = rule.minValueOp;\n              if (minValueOp) {\n                isMatch = isMatch && (minValueOp === '<=' ? minValue <= cellValue : (minValue < cellValue));\n              }\n              let maxValueOp = rule.maxValueOp;\n              if (maxValueOp) {\n                isMatch = isMatch && (maxValueOp === '>=' ? maxValue >= cellValue : (maxValue > cellValue));\n              }\n            }\n            else {\n              isMatch = cell.html == null;\n            }\n\n            isMatch = isMatch !== rule.negateCriteria;\n\n            // If this is a match apply the class(es)\n            if (isMatch) {\n              if (rule.classNames) {\n                cell.cls = {\n                  names: getCellValue(rule.classNames, false, gcvOptions),\n                  level: rule.classLevel\n                };\n              }\n\n              // Set the display\n              let displayHTML = getCellValue(rule.display, false, gcvOptions);\n              if (!rule.displayIsHTML) {\n                displayHTML = _.escape(displayHTML);\n              }\n              if (rule.url) {\n                let url = _.escape(getCellValue(rule.url, true, gcvOptions));\n                let target = rule.openNewWindow ? '_blank' : '';\n                let tooltipHTML = '';\n                if (rule.tooltip.isVisible) {\n                  cell.tooltip = {\n                    display: getCellValue(rule.tooltip.display, false, gcvOptions),\n                    placement: rule.tooltip.placement.toLowerCase()\n                  };\n                }\n                displayHTML = `<a href=\"${url}\" target=\"${target}\">${displayHTML}</a>`;\n              }\n              cell.html = displayHTML;\n              ruleApplied = rule;\n            }\n\n            return isMatch;\n          });\n        }\n\n        if (!ruleApplied) {\n          cell.html = _.escape(cell.html);\n        }\n\n        return cell;\n      });\n    });\n\n    return { columns, rows, headers, type: data.type, refId: data.refId };\n  }\n\n  fixDataTableSize() {\n    let jElem = this.panelElement;\n    let fullHeight = jElem.height();\n    let jWrap = jElem.find('.dataTables_wrapper');\n    if (jWrap.length) {\n      let wrapHeight = jWrap.height();\n      let jScrollBody = jWrap.find('.dataTables_scrollBody');\n      let scrollHeight = jScrollBody.height();\n      let nonScrollHeight = wrapHeight - scrollHeight;\n      jScrollBody.css('max-height', fullHeight - nonScrollHeight);\n    }\n  }\n\n  draw() {\n    let error;\n    let isValid = false;\n    let ctrl = this;\n    let jElem = ctrl.element;\n    let jContent = ctrl.panelElement.css('position', 'relative').html('');\n    let elemContent = jContent[0];\n    let data = ctrl.parseDataList();\n\n    ctrl.pageLengthOptions = ctrl.getPageLengthOptions();\n\n    if (data && data.rows.length) {\n      if (data.type === 'table') {\n        try {\n          ctrl.drawDataTable(data);\n          ctrl.panelJSON = this.getPanelSettingsJSON();\n          jElem.tooltip({ selector: '[data-tooltip]' });\n          isValid = true;\n        }\n        catch (err) {\n          error = err;\n        }\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n      if (error) {\n        throw error;\n      }\n    }\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.element = elem;\n    this.panelElement = elem.find('.panel-content');\n    this.throttleDraw = _.debounce(this.draw.bind(this), 1000);\n  }\n}\n\nDataTablePanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}