{"version":3,"sources":["../src/ctrl.js"],"names":["PARTIALS_BASE_PATH","RGX_SIMPLE_NUMBER","DEFAULT_PSEUDO_CSS","UNIT_FORMATS","TOOLTIP_PLACEMENTS","CONTENT_RULE_TYPES","id","text","CONTENT_RULE_CLASS_LEVELS","TZ_OFFSET_TYPES","CONTENT_RULE_MAX_VALUE_OPS","CONTENT_RULE_MIN_VALUE_OPS","CONTENT_RULE_EXACT_NUM_OPS","DEFAULT_PANEL_SETTINGS","allowLengthChange","allowOrdering","allowSearching","allowFiltering","allowRedrawOnModify","allowPaging","columnDefs","initialPageLength","isFullWidth","pageLengths","pseudoCSS","varCols","dataRefId","mainJoinColumn","joinColumn","nameColumn","valueColumn","tzOffsetType","tzOffset","columnFilters","DataTablePanelCtrl","$scope","$injector","$rootScope","_","has","panel","defaultsDeep","events","on","onInitEditMode","bind","onDataReceived","onDataError","onInitPanelActions","onPanelSizeChanged","draw","onDataTablePanelTeardown","$","fn","dataTable","ext","search","push","filterDataTable","settings","data","rowIndex","originalData","arguments","length","isProcessed","columns","every","column","columnIndex","filter","colDef","visible","isSearchable","ignore","test","value","panelJSON","getPanelSettingsJSON","spacing","JSON","stringify","key","undefined","i","splice","fixDataTableSize","addEditorTab","actions","icon","click","dataList","LOCAL_TZ_OFFSET","Date","getTimezoneOffset","forEach","isReal","rows","cells","cell","cellIndex","updateDataListOptions","EXTRA_COLS","concat","range","map","y","x","Math","random","type","name","eval","display","displayIsHTML","url","openNewWindow","width","classNames","isVisible","isOrderable","contentRules","columnDef","offset","colDefIndex","indexOf","newColDefIndex","classLevel","negateCriteria","unitFormat","unitFormatDecimals","unitFormatString","minValue","maxValue","minValueOp","maxValueOp","tooltip","placement","contentRule","dataListOptions","refId","replace","split","reduce","arr","parseInt","Infinity","FILE_NAME_PATTERN","ctrl","publishAppEvent","src","scope","extend","$new","fileNamePattern","fileNamePatternPlaceholder","EXPORT_TYPES","exportType","getFileName","download","exportCSV","exportJSON","delimiter","modalClass","getData","buttons","exportData","header","body","HEADER_TEXTS","c","html","processRows","getVarsByName","row","objRow","blob","Blob","headers","saveAs","opt_options","Object","csvText","carry","col","toLowerCase","mimeType","pattern","title","match","replaceWithTitle","JS","formatDate","templateSrv","variables","variable","varValues","toArray","current","isAll","includeAll","jElem","panelElement","height","varsByName","domTable","style","table","dom","jTable","jQuery","appendTo","dataTableOpts","colIndex","result","className","orderable","searchable","headerCallback","tr","thIndex","jTH","eq","showFilterModal","e","stopPropagation","ID_SUFFIX","filterCopy","cloneDeep","minDate","maxDate","isEditing","dashboard","meta","columnDataType","colDataType","resetFilter","dismiss","saveFilter","scopeFilter","minNum","maxNum","includeMin","includeMax","includeTrue","includeFalse","trim","matchTerms","matchWordStart","includeNull","negate","columnText","dataType","includes","get","prepend","cls","onclick","rowCallback","rowData","pageDisplayIndex","displayIndex","cellValue","tdIndex","cellCount","jTD","level","addClass","names","escape","scrollY","scrollX","deferRender","paging","scrollCollapse","ordering","searching","lengthChange","lengthMenu","getPageLengthOptions","opt","pageLength","order","DataTable","find","css","each","elem","appendChild","parse","rowCount","ruleApplied","valueOf","toString","rules","cellsByColName","ci","rule","ruleCount","ruleIndex","isMatch","colDefContentRuleFilter","colDefContentRuleFilters","gcvOptions","joinValues","rgx","minIsNum","maxIsNum","displayHTML","target","tooltipHTML","getVarColsData","slice","MAIN_COL_COUNT","MAIN_ROW_COUNT","vcData","vcHeaders","mainJoinColIndex","findIndex","joinColIndex","nameColIndex","valueColIndex","mainRowIndex","sort","a","b","vcRowsPrime","vcRows","vcColIndexPairs","vcAddedHeaders","vcRow","vcHeader","vcJoinValue","isNewVCHeader","isChanged","mainRow","zipObject","pop","vcHeaderIndex","first","index","SPLICE_ARGS","apply","pair","colDefs","colDefRgxs","putVarColsIn","colDefRgx","nativeType","min","actual","max","columnFilter","opt_onlyFixHeight","fullHeight","jWrap","wrapHeight","jScrollBody","scrollHeight","nonScrollHeight","error","isValid","element","jContent","elemContent","pageLengthOptions","drawDataTable","selector","err","msg","message","elemMsg","alignItems","textAlign","margin","append","rootVar","path","set","autoRedraw","attrs","throttleDraw","debounce","MetricsPanelCtrl","prototype","drawIfChanged","templateUrl"],"mappings":"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","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { getValueFormats } from './format-values';\nimport _ from 'lodash';\nimport * as JS from './external/YourJS.min';\nimport * as saveAs from './external/FileSaver.min.js';\nimport {\n  toCSV,\n  parseRegExp,\n  pseudoCssToJSON,\n  getCellValue,\n  getHtmlText,\n  term,\n  parseLocalDate,\n  parseOptionalNumber,\n  offsetByTZ,\n  toLocalDateString\n} from './helper-functions';\nimport './external/datatables/js/jquery.dataTables.min';\nimport './external/datatables/js/dataTables.fixedHeader.min';\nimport './external/datatables/js/dataTables.buttons.min';\nimport './external/datatables/css/jquery.dataTables.min.css!';\nimport './external/datatables/css/fixedHeader.dataTables.min.css!'\nimport './external/datatables/css/buttons.dataTables.min.css!';\n\nconst PARTIALS_BASE_PATH = 'public/plugins/copperhill-datatables-panel/partials/';\n\nconst RGX_SIMPLE_NUMBER = /^\\d+(\\.\\d+)?$/;\n\nconst DEFAULT_PSEUDO_CSS = `\n.theme-dark & {\n  color: white;\n  \n  .dataTables_filter input[type=search] {\n    border: 1px solid #262628;\n  }\n}\n.dataTables_filter input[type=search] {\n  border: 1px solid #dde4ed;\n  height: 35px;\n  line-height: 35px;\n  border-radius: 5px;\n  padding: 0 8px;\n}\ntable.dataTable tbody tr {\n  &:hover td {\n    background-image: linear-gradient(0deg, rgba(128,128,128,0.1), rgba(128,128,128,0.1));\n  }\n  &, &.even, &.odd {\n    background-color: transparent;\n    td {\n      border-color: transparent;\n    }\n  }\n  &.odd {\n    background-color: rgba(128,128,128,0.3);\n  }\n  &.even {\n    background-color: rgba(128,128,128,0.15);\n  }\n}\n`;\n\nconst UNIT_FORMATS = getValueFormats();\n\nconst TOOLTIP_PLACEMENTS = [\n  { \"id\": \"TOP\", \"text\": \"Top\" },\n  { \"id\": \"LEFT\", \"text\": \"Left\" },\n  { \"id\": \"RIGHT\", \"text\": \"Right\" },\n  { \"id\": \"BOTTOM\", \"text\": \"Bottom\" }\n];\n\nconst CONTENT_RULE_TYPES = [\n  { id: 'FILTER', text: 'Filter by exact value or RegExp' },\n  { id: 'RANGE', text: \"Match a range of values\" },\n  { id: 'NULL', text: \"Is NULL\" }\n];\n\nconst CONTENT_RULE_CLASS_LEVELS = [\n  { id: 'CELL', text: \"Only the cell\" },\n  { id: 'ROW', text: 'Entire row' }\n];\n\nconst TZ_OFFSET_TYPES = [\n  { id: null, text: 'Default' },\n  { id: 'NO-TIMEZONE', text: 'Local Timezone' },\n  { id: 'NO-TIMEZONE-REVERSE', text: 'Reverse Local Timezone' },\n  { id: 'TIMEZONE', text: 'Specify Minute Offset' }\n];\n\nconst CONTENT_RULE_MAX_VALUE_OPS = [\n  { id: '', text: '' },\n  { id: '>=', text: 'value \\u2265 cell (greater than or equal to)' },\n  { id: '>', text: 'value > cell (greater than)' }\n];\n\nconst CONTENT_RULE_MIN_VALUE_OPS = [\n  { id: '', text: '' },\n  { id: '<', text: 'value < cell (less than)' },\n  { id: '<=', text: 'value \\u2264 cell (less than or equal to)' }\n];\n\nconst CONTENT_RULE_EXACT_NUM_OPS = [\n  { id: '==', text: '= (equals)' },\n  { id: '!=', text: \"\\u2260 (doesn't)\" }\n];\n\nconst DEFAULT_PANEL_SETTINGS = {\n  allowLengthChange: true,\n  allowOrdering: true,\n  allowSearching: true,\n  allowFiltering: false,\n  allowRedrawOnModify: true,\n  allowPaging: true,\n  columnDefs: [],\n  initialPageLength: 25,\n  isFullWidth: true,\n  pageLengths: '10,15,20,25,50,100',\n  pseudoCSS: DEFAULT_PSEUDO_CSS,\n  varCols: {\n    dataRefId: null,\n    mainJoinColumn: null,\n    joinColumn: null,\n    nameColumn: null,\n    valueColumn: null\n  },\n  tzOffsetType: null,\n  tzOffset: 0,\n  columnFilters: []\n};\n\nexport class DataTablePanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n\n    this.$rootScope = $rootScope;\n\n    // Make sure old versions have this value set to false.\n    if (!_.has(this.panel, 'allowRedrawOnModify')) {\n      this.panel.allowRedrawOnModify = false;\n    }\n\n    _.defaultsDeep(this.panel, DEFAULT_PANEL_SETTINGS);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n    this.events.on('render', this.onPanelSizeChanged.bind(this));\n    this.events.on('view-mode-changed', this.draw.bind(this));\n    this.events.on('panel-teardown', this.onDataTablePanelTeardown.bind(this));\n\n    $.fn.dataTable.ext.search.push(this.filterDataTable.bind(this));\n  }\n\n  filterDataTable(settings, data, rowIndex, originalData) {\n    return arguments.length === 0\n      ? this\n      : this.panel.allowFiltering\n        ? originalData.isProcessed\n          ? this.columns.every(function (column, columnIndex) {\n            let { filter } = column;\n            return !column.colDef\n              || !column.visible\n              || !column.colDef.isSearchable\n              || !filter\n              || filter.ignore\n              || filter.test(originalData[columnIndex].value);\n          })\n          : this.columns.every(function (column, columnIndex) {\n            let {filter} = column;\n            return !column.colDef\n              || !column.visible\n              || !column.colDef.isSearchable\n              || !filter\n              || filter.ignore\n              || filter.test(originalData[columnIndex]);\n          })\n        : true;\n  }\n\n  drawIfChanged() {\n    if (this.panelJSON !== this.getPanelSettingsJSON()) {\n      this.draw();\n    }\n  }\n\n  getPanelSettingsJSON(spacing) {\n    let panel = this.panel;\n    return JSON.stringify(\n      panel,\n      function (key, value) {\n        return (this != panel || _.has(DEFAULT_PANEL_SETTINGS, key))\n          ? value\n          : undefined;\n      },\n      spacing\n    );\n  }\n\n  onDataTablePanelTeardown() {\n    let {search} = $.fn.dataTable.ext;\n    for (var i = search.length; i--; ) {\n      if (search[i]() === this) {\n        search.splice(i, 1);\n      }\n    }\n  }\n\n  onPanelSizeChanged() {\n    this.fixDataTableSize();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Table View', `${PARTIALS_BASE_PATH}refresh-view.html`, 1);\n    this.addEditorTab('Variable Columns', `${PARTIALS_BASE_PATH}var-cols.html`, 2);\n    this.addEditorTab('Editor', `${PARTIALS_BASE_PATH}editor.html`, 3);\n    this.addEditorTab('Column Definitions', `${PARTIALS_BASE_PATH}column-defs.html`, 4);\n    this.addEditorTab('Styles', `${PARTIALS_BASE_PATH}styles.html`, 5);\n    this.addEditorTab('Table View', `${PARTIALS_BASE_PATH}refresh-view.html`, 6);\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({\n      icon: 'fa fa-download',\n      text: 'Download As\\u2026',\n      click: 'ctrl.showDownloadModal()'\n    });\n  }\n\n  onDataError() {\n    this.draw();\n  }\n\n  onDataReceived(dataList) {\n    let { tzOffsetType, tzOffset } = this.panel;\n    const LOCAL_TZ_OFFSET = (new Date).getTimezoneOffset();\n    if (dataList && dataList.length) {\n      dataList.forEach(data => {\n        data.isReal = true;\n        data.rows.forEach(cells => {\n          cells.forEach((cell, cellIndex) => {\n            if (/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\dZ$/.test(cell)) {\n              cells[cellIndex] = new Date(cell);\n            }\n          });\n        });\n      });\n      this.dataList = dataList;\n      this.updateDataListOptions();\n    }\n    else {\n      let EXTRA_COLS = 2;\n      this.dataList = [\n        {\n          columns: [{ text: \"X\" }, { text: \"X * X\" }, { text: \"X + X\" }].concat(_.range(EXTRA_COLS).map(y => ({ text: `${y} / Math.random()` }))),\n          rows: _.range(150).map(x => [x, x * x, x + x].concat(_.range(EXTRA_COLS).map(y => y / Math.random()))),\n          isReal: false,\n          type: 'table'\n        }\n      ];\n    }\n\n    this.draw();\n  }\n\n  getConstByName(name) {\n    if (/^[A-Z_][A-Z_0-9]*$/.test(name)) {\n     return eval(name);\n    }\n  }\n\n  addColumnDef() {\n    this.panel.columnDefs.push({\n      filter: '/[^]*/',\n      display: '${value}',\n      displayIsHTML: false,\n      url: '',\n      openNewWindow: true,\n      width: '',\n      classNames: '',\n      isVisible: true,\n      isOrderable: true,\n      isSearchable: true,\n      contentRules: []\n    });\n  }\n\n  moveColumnDef(columnDef, offset) {\n    let columnDefs = this.panel.columnDefs;\n    let colDefIndex = columnDefs.indexOf(columnDef);\n    let newColDefIndex = colDefIndex + offset;\n    if (0 <= newColDefIndex && newColDefIndex < columnDefs.length) {\n      columnDefs.splice(colDefIndex, 1);\n      columnDefs.splice(newColDefIndex, 0, columnDef);\n    }\n  }\n\n  removeColumnDef(columnDef) {\n    let columnDefs = this.panel.columnDefs;\n    columnDefs.splice(columnDefs.indexOf(columnDef), 1);\n  }\n\n  addColumnContentRule(columnDef) {\n    columnDef.contentRules.push({\n      type: CONTENT_RULE_TYPES[0].id,\n      classNames: '',\n      classLevel: CONTENT_RULE_CLASS_LEVELS[0].id,\n      filter: '',\n      negateCriteria: false,\n      display: '${value}',\n      displayIsHTML: false,\n      unitFormat: 'none',\n      unitFormatDecimals: 0,\n      unitFormatString: '',\n      tzOffsetType: null,\n      tzOffset: 0,\n      minValue: null,\n      maxValue: null,\n      minValueOp: null,\n      maxValueOp: null,\n      url: '',\n      openNewWindow: true,\n      tooltip: {\n        isVisible: false,\n        display: '',\n        placement: TOOLTIP_PLACEMENTS[0].id\n      }\n    });\n  }\n\n  removeColumnContentRule(contentRule, columnDef) {\n    let contentRules = columnDef.contentRules;\n    contentRules.splice(contentRules.indexOf(contentRule), 1);\n  }\n\n  updateDataListOptions() {\n    this.dataListOptions = [{}].concat(this.dataList).map((x, i) => ({\n      id: i ? x.refId : null,\n      text: i ? x.refId : '--- NONE ---'\n    }));\n  }\n\n  getPageLengthOptions() {\n    return this.panel.pageLengths\n        .replace(/\\s+/g, '')\n        .split(',')\n        .reduce(\n          (arr, x) => {\n            if (+x === parseInt(x, 10) && +x >= -1) {\n              x = x == -1 ? Infinity : +x;\n              arr.push({ value: x, text: x === Infinity ? 'All' : x });\n            }\n            return arr;\n          },\n          []\n    );\n  }\n\n  showDownloadModal() {\n    const FILE_NAME_PATTERN = \"<TITLE> (YYYY-MM-DD 'at' H.mm.ss)\";\n    let ctrl = this;\n    ctrl.publishAppEvent('show-modal', {\n      src: `${PARTIALS_BASE_PATH}modal-export.html`,\n      scope: _.extend(\n        ctrl.$scope.$new(true),\n        {\n          fileNamePattern: FILE_NAME_PATTERN,\n          fileNamePatternPlaceholder: FILE_NAME_PATTERN,\n          EXPORT_TYPES: [\n            { value: 'CSV', text: 'CSV (Comma-separated values)' },\n            { value: 'JSON', text: 'JSON (JavaScript Object Notation)' },\n            { value: 'TSV', text: 'TSV (Tab-separated values)' }\n          ],\n          exportType: 'CSV',\n          getFileName() {\n            return ctrl.getFileName(this.fileNamePattern, this.exportType);\n          },\n          download() {\n            if (this.exportType === 'CSV') {\n              ctrl.exportCSV(this.fileNamePattern);\n            }\n            else if (this.exportType === 'JSON') {\n              ctrl.exportJSON(this.fileNamePattern);\n            }\n            else if (this.exportType === 'TSV') {\n              ctrl.exportCSV(this.fileNamePattern, { delimiter: '\\t', ext: 'tsv' });\n            }\n          }\n        }\n      ),\n      modalClass: 'modal-confirm',\n    });\n  }\n\n  exportJSON(fileNamePattern) {\n    let data = this.getData();\n    let { columns } = data;\n    let { header, body } = this.dataTable.buttons.exportData();\n    const HEADER_TEXTS = columns.filter(c => c.visible).map(c => getHtmlText(c.html));\n    this.processRows(body, columns, header, this.getVarsByName());\n    let rows = body.map(row => row.reduce((objRow, cell, cellIndex) => {\n      if (cell.visible) {\n        objRow[HEADER_TEXTS[cellIndex]] = getHtmlText(cell.html);\n      }\n      return objRow;\n    }, {}));\n    let blob = new Blob(\n      [JSON.stringify({ headers: HEADER_TEXTS, rows })],\n      { type: 'application/json;charset=utf-8' }\n    );\n    saveAs(blob, this.getFileName(fileNamePattern, 'json'));\n  }\n\n  exportCSV(fileNamePattern, opt_options) {\n    opt_options = Object(opt_options);\n\n    let data = this.getData();\n    let { columns } = data;\n    let { header, body: rows } = this.dataTable.buttons.exportData();\n    this.processRows(rows, columns, header, this.getVarsByName());\n\n    let csvText = toCSV(\n      rows.map(row => row.reduce((carry, cell) => {\n        if (cell.visible) {\n          carry.push(getHtmlText(cell.html));\n        }\n        return carry;\n      }, [])),\n      _.extend(\n        {\n          headers: columns.reduce((carry, col) => {\n            if (col.visible) {\n              carry.push(getHtmlText(col.html));\n            }\n            return carry;\n          }, [])\n        },\n        Object(opt_options)\n      )\n    );\n    let ext = (opt_options.ext || 'csv').toLowerCase();\n    let mimeType = 'text/' + (ext === 'tsv' ? 'tab-separated-values' : ext);\n    let blob = new Blob([csvText], { type: `${mimeType};charset=utf-8` });\n    saveAs(blob, this.getFileName(fileNamePattern, ext));\n  }\n\n  getFileName(pattern, ext) {\n    let {title} = this.panel;\n    return pattern.replace(\n      /(<TITLE>)|[^<]+|</g,\n      (match, replaceWithTitle) => replaceWithTitle ? title : JS.formatDate(new Date, match)\n    ) + '.' + ext.toLowerCase();\n  }\n\n  getVarsByName() {\n    return this.templateSrv.variables.reduce(\n      (carry, variable) => {\n        // At times current.value is a string and at times it is an array.\n        let varValues = JS.toArray(variable.current.value);\n        let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n        carry[variable.name] = isAll ? [variable.current.text] : varValues;\n        return carry;\n      },\n      {}\n    );\n  }\n\n  drawDataTable(data) {\n    let ctrl = this;\n    let panel = ctrl.panel;\n    let jElem = ctrl.panelElement;\n    let height = jElem.height();\n    let columns = ctrl.columns = data.columns;\n    let rows = data.rows;\n    let varsByName = ctrl.getVarsByName();\n    let domTable = { _: 'table', style: {} };\n    if (panel.isFullWidth) {\n      domTable.style.width = '100%';\n    }\n\n    let table = JS.dom(domTable);\n    let jTable = jQuery(table).appendTo(jElem.html(''));\n    let headers = data.headers;\n    let dataTableOpts = {\n      columns: columns.map((column, colIndex) => {\n        let result = {\n          title: getHtmlText(column.html),\n          visible: column.visible\n        };\n\n        let colDef = column.colDef;\n        if (colDef && column.visible) {\n          if (colDef.width) {\n            result.width = colDef.width;\n          }\n          if (colDef.classNames) {\n            result.className = colDef.classNames;\n          }\n          result.orderable = colDef.isOrderable;\n          result.searchable = colDef.isSearchable;\n        }\n\n        return result;\n      }),\n      headerCallback(tr) {\n        let thIndex = 0;\n\n        // Loop through each column...\n        columns.forEach((col, colIndex) => {\n          if (col.visible) {\n            let jTH = jQuery('>th', tr).eq(thIndex++).html(col.html);\n            if (panel.allowFiltering && (!col.colDef || col.colDef.isSearchable)) {\n              let { filter } = col;\n              let colDataType = _.get(filter, 'dataType', 'String');\n\n              function showFilterModal(e) {\n                e && e.stopPropagation();\n\n                const ID_SUFFIX = +new Date;\n\n                let filterCopy = _.extend(\n                  _.cloneDeep(filter),\n                  {\n                    minDate: toLocalDateString(filter.minDate),\n                    maxDate: toLocalDateString(filter.maxDate)\n                  }\n                );\n\n                ctrl.publishAppEvent('show-modal', {\n                  src: `${PARTIALS_BASE_PATH}modal-column-filter.html`,\n                  scope: _.extend(\n                    ctrl.$scope.$new(true),\n                    {\n                      isEditing: ctrl.dashboard.meta.isEditing,\n                      column: _.cloneDeep(col),\n                      columnDataType: colDataType,\n                      ID_SUFFIX,\n                      filter: filterCopy,\n                      resetFilter() {\n                        this.dismiss();\n                        showFilterModal();\n                      },\n                      saveFilter() {\n                        let scopeFilter = this;\n                        let ignore;\n                        if (colDataType === 'Date' || colDataType === 'Number' || colDataType === 'BigInt') {\n                          if (colDataType === 'Date') {\n                            filter.minDate = parseLocalDate(scopeFilter.filter.minDate, ctrl, true);\n                            filter.maxDate = parseLocalDate(scopeFilter.filter.maxDate, ctrl, true);\n                          }\n                          else {\n                            filter.minNum = parseOptionalNumber(scopeFilter.filter.minNum);\n                            filter.maxNum = parseOptionalNumber(scopeFilter.filter.maxNum);\n                          }\n                          ignore = filter.minNum == undefined && filter.maxNum == undefined\n                            && filter.minDate == undefined && filter.maxDate == undefined;\n                          filter.includeMin = scopeFilter.filter.includeMin;\n                          filter.includeMax = scopeFilter.filter.includeMax;\n                        }\n                        else if (colDataType === 'Boolean') {\n                          filter.includeTrue = scopeFilter.filter.includeTrue;\n                          filter.includeFalse = scopeFilter.filter.includeFalse;\n                          ignore = !filter.includeTrue && !filter.includeFalse;\n                        }\n                        else {\n                          filter.text = scopeFilter.filter.text.trim();\n                          filter.matchTerms = term(filter.text, { matchWordStart: true });\n                          ignore = filter.text == '';\n                        }\n                        filter.includeNull = scopeFilter.filter.includeNull;\n                        filter.negate = scopeFilter.filter.negate;\n                        filter.ignore = ignore && !filter.includeNull;\n\n                        // Save column filters only if in editor mode\n                        if (ctrl.dashboard.meta.isEditing) {\n                          ctrl.panel.columnFilters = columns.reduce((columnFilters, column) => {\n                            let filter;\n                            if (column.visible && (filter = column.filter) && !filter.ignore) {\n                              columnFilters.push({\n                                columnText: column.text,\n                                ignore: filter.ignore,\n                                negate: filter.negate,\n                                text: filter.text,\n                                includeTrue: filter.includeTrue,\n                                includeFalse: filter.includeFalse,\n                                includeNull: filter.includeNull,\n                                minNum: filter.minNum,\n                                maxNum: filter.maxNum,\n                                minDate: toLocalDateString(filter.minDate),\n                                maxDate: toLocalDateString(filter.maxDate),\n                                includeMin: filter.includeMin,\n                                includeMax: filter.includeMax,\n                                dataType: filter.dataType\n                              });\n                            }\n                            return columnFilters;\n                          }, []);\n                        }\n\n                        ctrl.dataTable.draw();\n                        this.dismiss();\n                      },\n                      includes: (arr, value) => arr.includes(value)\n                    }\n                  ),\n                  modalClass: 'modal-confirm',\n                });\n              }\n\n              jTH.prepend(JS.dom({\n                _: 'i',\n                cls: 'fa fa-filter ' + (filter.ignore ? 'off' : 'on'),\n                style: (filter.ignore ? 'opacity:0.25;' : '') + 'margin-right:0.25em;cursor:pointer;',\n                onclick: showFilterModal\n              }));\n            }\n          }\n        });\n      },\n      data: rows,\n      rowCallback(tr, rowData, pageDisplayIndex, displayIndex, rowIndex) {\n        if (!rowData.isProcessed) {\n          ctrl.processRows([rowData], columns, headers, varsByName);\n        }\n        for (let cell, cellValue, tdIndex = 0, cellCount = rowData.length, colIndex = 0; colIndex < cellCount; colIndex++) {\n          cell = rowData[colIndex];\n\n          if (cell.visible) {\n            let jTD = jQuery('> td', tr).eq(tdIndex++);\n            if (cell.cls && cell.cls.level === 'CELL') {\n              jTD.addClass(cell.cls.names);\n            }\n            let colDef = columns[colIndex].columnDef;\n            if (colDef && colDef.classNames) {\n              jTD.addClass(colDef.classNames);\n            }\n            let html = cell.html;\n            if (cell.tooltip) {\n              html = `<div data-tooltip data-original-title=\"${_.escape(cell.tooltip.display)}\" data-placement=\"${cell.tooltip.placement}\" class=\"d-inline-block\">${html}</div>`;\n            }\n            jTD.html(html);\n          }\n          if (cell.cls && cell.cls.level === 'ROW') {\n            jQuery(tr).addClass(cell.cls.names);\n          }\n        }\n      },\n      scrollY: height,\n      scrollX: true,\n      deferRender: true,\n      paging: panel.allowPaging,\n      scrollCollapse: true,\n      ordering: panel.allowOrdering,\n      searching: true, // Visibility is controlled via CSS to allow for custom filtering\n      lengthChange: panel.allowLengthChange,\n      lengthMenu: ctrl.getPageLengthOptions().reduce(\n        (arr, opt) => [\n          arr[0].concat([opt.value === Infinity ? -1 : opt.value]),\n          arr[1].concat([opt.value === Infinity ? 'All' : opt.value])\n        ],\n        [[], []]\n      ),\n      pageLength: panel.initialPageLength,\n      order: []\n    };\n    ctrl.dataTable = jTable.DataTable(dataTableOpts);\n\n    // Horizontally center tables that are not full page width.\n    jElem.find('.dataTables_scrollHeadInner').css('margin', '0 auto');\n\n    // Control visibility here instead in options to allow for custom filtering.\n    if (!panel.allowSearching) {\n      jElem.find('.dataTables_filter').css('display', 'none');\n    }\n\n    // Resize the scroll body of the table.\n    ctrl.fixDataTableSize(true);\n\n    // Remove the old class names from the wrapper element and add a new\n    // targeted stylesheet.\n    jElem.each((i, elem) => {\n      elem.className = elem.className.replace(/\\b_\\d+\\b/g, ' ').replace(/\\s+/g, ' ').trim();\n      elem.appendChild(JS.css(JSON.parse(pseudoCssToJSON(panel.pseudoCSS)), elem));\n    });\n  }\n\n  processRows(rows, columns, headers, varsByName) {\n    let ctrl = this;\n\n    for (let row, rowCount = rows.length, rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n      row = rows[rowIndex];\n      if (!row.isProcessed && !(row[0] || {}).isProcessed) {\n        for (let cell, cellValue, tdIndex = 0, cellCount = row.length, colIndex = 0; colIndex < cellCount; colIndex++) {\n          let ruleApplied;\n          let column = columns[colIndex];\n          let colDef = column.colDef;\n\n          cellValue = row[colIndex];\n\n          cell = {\n            html: cellValue,\n            visible: column.visible,\n            value: cellValue,\n            valueOf() { return cellValue; },\n            toString() { return cellValue + ''; },\n            isProcessed: true\n          };\n\n          if (colDef) {\n            let rules = colDef.contentRules;\n            let cellsByColName = {};\n            for (let ci = row.length; ci--;) {\n              cellsByColName[headers[ci]] = row[ci];\n            }\n\n            for (let rule, ruleCount = rules.length, ruleIndex = 0; ruleIndex < ruleCount; ruleIndex++) {\n              rule = rules[ruleIndex];\n              let isMatch = true;\n              let type = rule.type;\n              let colDefContentRuleFilter = column.colDefContentRuleFilters[ruleIndex];\n              let gcvOptions = {\n                cell: cell.html,\n                cellsByColName,\n                joinValues: row.joinValues,\n                colIndex,\n                rule,\n                rgx: colDefContentRuleFilter,\n                ctrl,\n                varsByName\n              };\n              if (type === 'FILTER') {\n                isMatch = colDefContentRuleFilter.test(cell.html);\n              }\n              else if (type === 'RANGE') {\n                let minValue = rule.minValue;\n                let minIsNum = RGX_SIMPLE_NUMBER.test(minValue);\n                let maxValue = rule.maxValue;\n                let maxIsNum = RGX_SIMPLE_NUMBER.test(maxValue);\n                if (minIsNum) {\n                  minValue = +minValue;\n                }\n                if (maxIsNum) {\n                  maxValue = +maxValue;\n                }\n\n                if (minIsNum || maxIsNum) {\n                  cellValue = +cellValue;\n                }\n\n                let minValueOp = rule.minValueOp;\n                if (minValueOp) {\n                  isMatch = isMatch && (minValueOp === '<=' ? minValue <= cellValue : (minValue < cellValue));\n                }\n                let maxValueOp = rule.maxValueOp;\n                if (maxValueOp) {\n                  isMatch = isMatch && (maxValueOp === '>=' ? maxValue >= cellValue : (maxValue > cellValue));\n                }\n              }\n              else {\n                isMatch = cell.html == null;\n              }\n\n              isMatch = isMatch !== rule.negateCriteria;\n\n              // If this is a match apply the class(es)\n              if (isMatch) {\n                if (rule.classNames) {\n                  cell.cls = {\n                    names: getCellValue(rule.classNames, false, gcvOptions),\n                    level: rule.classLevel\n                  };\n                }\n\n                // Set the display\n                let displayHTML = getCellValue(rule.display, false, gcvOptions);\n                if (!rule.displayIsHTML) {\n                  displayHTML = _.escape(displayHTML);\n                }\n                if (rule.url) {\n                  let url = _.escape(getCellValue(rule.url, true, gcvOptions));\n                  let target = rule.openNewWindow ? '_blank' : '';\n                  let tooltipHTML = '';\n                  if (rule.tooltip.isVisible) {\n                    cell.tooltip = {\n                      display: getCellValue(rule.tooltip.display, false, gcvOptions),\n                      placement: rule.tooltip.placement.toLowerCase()\n                    };\n                  }\n                  displayHTML = `<a href=\"${url}\" target=\"${target}\">${displayHTML}</a>`;\n                }\n                cell.html = displayHTML;\n                ruleApplied = rule;\n\n                break; // Break out of rules loop\n              }\n            } // End of rules for-loop\n          } // End if (colDef) {...}\n\n          if (!ruleApplied) {\n            cell.html = _.escape(cell.html);\n          }\n\n          row[colIndex] = cell;\n        } // End of row for-loop\n      } // End if (!row.isProcessed) {...}\n      row.isProcessed = true;\n    } // End of rows for-loop\n  }\n\n  getVarColColumns() {\n    let data = this.getVarColsData();\n    return data ? data.columns : [];\n  }\n\n  getVarColsData() {\n    let varCols = this.panel.varCols;\n    let dataRefId = varCols && varCols.dataRefId;\n    let dataList = this.dataList;\n    return dataList && dataList.find(({ refId }) => refId === dataRefId);\n  }\n\n  putVarColsIn(data) {\n    let varCols = this.panel.varCols;\n    let columns = data.columns;\n    let rows = data.rows.slice();\n\n    const MAIN_COL_COUNT = columns.length;\n    const MAIN_ROW_COUNT = rows.length;\n\n    if (varCols) {\n      let vcData = this.getVarColsData();\n      if (vcData) {\n        let vcHeaders = vcData.columns.map(col => col.text);\n        let mainJoinColIndex = columns.findIndex(c => c.text === varCols.mainJoinColumn);\n        let joinColIndex = vcHeaders.indexOf(varCols.joinColumn);\n        let nameColIndex = vcHeaders.indexOf(varCols.nameColumn);\n        let valueColIndex = vcHeaders.indexOf(varCols.valueColumn);\n        if (mainJoinColIndex >= 0 && joinColIndex >= 0 && nameColIndex >= 0 && valueColIndex >= 0) {\n          let mainRowIndex = 0;\n          \n          // Order a sliced version of the main `rows` using the join column.\n          rows.sort((a, b) => a[mainJoinColIndex] < b[mainJoinColIndex] ? -1 : 1);\n\n          // Order a sliced version of the varCols rows using the join column.\n          let vcRowsPrime = vcData.rows;\n          let vcRows = vcRowsPrime.slice().sort((a, b) => a[joinColIndex] < b[joinColIndex] ? -1 : 1);\n\n          // Used later to reorder the new columns by the order they were found\n          // in the data.\n          let vcColIndexPairs = [];\n\n          vcRows\n            // Get a list of all of the new headers while simultaneously adding\n            // the data to the appropriate rows and in the appropriate columns.\n            .reduce((vcAddedHeaders, vcRow) => {\n              let vcHeader = vcRow[nameColIndex];\n              let vcJoinValue = vcRow[joinColIndex];\n              let colIndex = vcAddedHeaders.indexOf(vcHeader);\n              let isNewVCHeader = colIndex < 0;\n\n              // If the new column wasn't found add it.\n              if (isNewVCHeader) {\n                colIndex = vcAddedHeaders.push(vcHeader) - 1;\n              }\n\n              // Since everything is ordered continue in `rows` looking for the\n              // join and if found add the value there while setting the new row's\n              // index as `mainRowIndex`.\n              for (let isChanged, mainRow, i = mainRowIndex; i < MAIN_ROW_COUNT; i++) {\n                mainRow = rows[i];\n                if (vcJoinValue === mainRow[mainJoinColIndex]) {\n                  mainRow[MAIN_COL_COUNT + colIndex] = vcRow[valueColIndex];\n                  (mainRow.joinValues = mainRow.joinValues || [])[MAIN_COL_COUNT + colIndex] = _.zipObject(vcHeaders, vcRow);\n                  mainRowIndex = i;\n                  isChanged = true;\n                }\n                else if (isChanged) {\n                  // NOTE:  Return here to avoid checking `i` outside of loop.\n                  return vcAddedHeaders;\n                }\n              }\n\n              // If new header was added but join was unsuccessful remove the new\n              // header.\n              if (isNewVCHeader) {\n                vcAddedHeaders.pop();\n              }\n\n              return vcAddedHeaders;\n            }, [])\n            // Add the new `columns`.\n            .forEach((vcHeader, vcHeaderIndex) => {\n              vcColIndexPairs.push({\n                first: vcRowsPrime.findIndex(vcRow => vcRow[nameColIndex] === vcHeader),\n                index: vcHeaderIndex + MAIN_COL_COUNT\n              });\n              columns.push({ text: vcHeader });\n            });\n\n          // Used to reorder all of the var-cols\n          vcColIndexPairs.sort((a, b) => a.first - b.first);\n          const SPLICE_ARGS = [MAIN_COL_COUNT, vcColIndexPairs.length];\n\n          // Reorder all of the var-cols\n          columns.splice.apply(\n            columns,\n            SPLICE_ARGS.concat(vcColIndexPairs.map(pair => columns[pair.index]))\n          );\n\n          // Reorder all of the var-col cells in each row.\n          rows.forEach(row => {\n            row.splice.apply(\n              row,\n              SPLICE_ARGS.concat(vcColIndexPairs.map(pair => {\n                pair = row[pair.index];\n                return pair === undefined ? null : pair;\n              }))\n            );\n          });\n        }\n      }\n    }\n  }\n\n  getData() {\n    let ctrl = this;\n    let dataList = ctrl.dataList[0];\n    let columns = dataList.columns.map(col => _.cloneDeep(col));\n    let rows = dataList.rows.map(row => row.slice());\n    let varsByName = ctrl.getVarsByName();\n    let panel = ctrl.panel;\n    let colDefs = panel.columnDefs;\n    let varCols = panel.varCols;\n    let colDefRgxs = colDefs.map(colDef => parseRegExp(colDef.filter));\n    let colDefContentRuleFilters = colDefs.map(\n      colDef => colDef.contentRules.map(\n        rule => rule.type === 'FILTER' ? parseRegExp(rule.filter) : null\n      )\n    );\n\n    // Create the data object to be returned.\n    let data = { columns, rows, type: dataList.type, refId: dataList.refId };\n\n    // Add the variable columns to the data if there are any.\n    this.putVarColsIn(data);\n\n    // Make an array of column headers.\n    let headers = data.headers = columns.map(col => col.text);\n\n    columns.forEach((column, colIndex) => {\n      if ('string' === typeof column) {\n        column = { text: column, visible: true };\n      }\n      else {\n        column.visible = true;\n      }\n\n      let colDef;\n      colDefRgxs.find((colDefRgx, colDefIndex) => {\n        if (colDefRgx.test(column.text)) {\n          colDef = colDefs[colDefIndex];\n          let gcvOptions = {\n            cell: column.text,\n            cellsByColName: {},\n            rule: { type: 'FILTER' },\n            rgx: colDefRgx,\n            ctrl,\n            varsByName\n          };\n          column.text = getCellValue(colDef.display, false, gcvOptions);\n\n          let html = colDef.displayIsHTML ? column.text : _.escape(column.text);\n\n          if (colDef.url) {\n            let url = _.escape(getCellValue(colDef.url, true, gcvOptions));\n            let target = colDef.openNewWindow ? '_blank' : '';\n            html = `<a href=\"${url}\" target=\"${target}\" onclick=\"event.stopPropagation()\">${html}</a>`;\n          }\n\n          _.extend(column, {\n            colDef,\n            colDefContentRuleFilters: colDefContentRuleFilters[colDefIndex],\n            html,\n            visible: colDef.isVisible\n          });\n\n          return true;\n        }\n      });\n\n      // Initialize the filter object...\n      let filter = column.filter = {\n        ignore: true,\n        negate: false,\n        text: '',\n        includeTrue: false,\n        includeFalse: false,\n        includeNull: false,\n        minNum: null,\n        maxNum: null,\n        minDate: null,\n        maxDate: null,\n        includeMin: false,\n        includeMax: false,\n        dataType: JS.nativeType((rows.find(row => row[colIndex] != undefined) || [])[colIndex]),\n        matchTerms() { return true; }\n      };\n\n      // Add the test() function to the filter object while binding the filter\n      // object to the test() function.\n      filter.test = (function (value) {\n        let { negate, text, includeTrue, includeFalse, includeNull, minNum, maxNum, minDate, maxDate, includeMin, includeMax, dataType } = this;\n        let min = minDate != undefined ? minDate.actual : minNum;\n        let max = maxDate != undefined ? maxDate.actual : maxNum;\n        if (dataType === 'Date' || dataType === 'Number' || dataType === 'BigInt') {\n          return (\n            value == undefined\n              ? includeNull\n              : (\n                (min == undefined || (includeMin ? min <= value : (min < value)))\n                && (max == undefined || (includeMax ? value <= max : (value < max)))\n              )\n          ) !== negate;\n        }\n        else if (dataType === 'Boolean') {\n          return (\n            (includeTrue && value)\n            || (includeFalse && !value)\n            || (includeNull && value == undefined)\n          ) !== negate;\n        }\n        return (this.matchTerms(value) || (includeNull && value == undefined)) !== negate;\n      }).bind(filter);\n\n      // If the column is visible, try to attach the saved column filter by\n      // matching on the column text and the column data type.\n      if (column.visible) {\n        let columnFilter = ctrl.panel.columnFilters.find(\n          (columnFilter) => {\n            let result = filter.dataType === columnFilter.dataType\n              && column.text === columnFilter.columnText;\n            if (result) {\n              _.extend(\n                filter,\n                {\n                  ignore: columnFilter.ignore,\n                  negate: columnFilter.negate,\n                  text: columnFilter.text,\n                  includeTrue: columnFilter.includeTrue,\n                  includeFalse: columnFilter.includeFalse,\n                  includeNull: columnFilter.includeNull,\n                  minNum: columnFilter.minNum,\n                  maxNum: columnFilter.maxNum,\n                  minDate: parseLocalDate(columnFilter.minDate, ctrl, true),\n                  maxDate: parseLocalDate(columnFilter.maxDate, ctrl, true),\n                  includeMin: columnFilter.includeMin,\n                  includeMax: columnFilter.includeMax,\n                  dataType: columnFilter.dataType\n                }\n              );\n            }\n            return result;\n          }\n        );\n      }\n\n      if (!_.has(column, 'html')) {\n        column.html = _.escape(column.text);\n      }\n\n      columns[colIndex] = column;\n    });\n\n    return data;\n  }\n\n  fixDataTableSize(opt_onlyFixHeight) {\n    let jElem = this.panelElement;\n    let fullHeight = jElem.height();\n    let jWrap = jElem.find('.dataTables_wrapper');\n    if (jWrap.length) {\n      let wrapHeight = jWrap.height();\n      let jScrollBody = jWrap.find('.dataTables_scrollBody');\n      let scrollHeight = jScrollBody.height();\n      let nonScrollHeight = wrapHeight - scrollHeight;\n      jScrollBody.css('max-height', fullHeight - nonScrollHeight);\n    }\n\n    // Make sure the column headers get resized\n    if (this.dataTable && !opt_onlyFixHeight) {\n      this.dataTable.columns().draw();\n    }\n  }\n\n  draw() {\n    let error;\n    let isValid = false;\n    let ctrl = this;\n    let jElem = ctrl.element;\n    let jContent = ctrl.panelElement.css('position', 'relative').html('');\n    let elemContent = jContent[0];\n    let data = ctrl.getData();\n\n    ctrl.pageLengthOptions = ctrl.getPageLengthOptions();\n\n    if (data && data.rows.length) {\n      if (data.type === 'table') {\n        try {\n          ctrl.drawDataTable(data);\n          ctrl.panelJSON = this.getPanelSettingsJSON();\n          jElem.tooltip({ selector: '[data-tooltip]' });\n          isValid = true;\n        }\n        catch (err) {\n          error = err;\n        }\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n      if (error) {\n        throw error;\n      }\n    }\n  }\n\n  setPanelValue(rootVar, path, value) {\n    _.set(rootVar, path, value);\n    this.autoRedraw();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.element = elem;\n    this.panelElement = elem.find('.panel-content');\n    this.throttleDraw = _.debounce(this.draw.bind(this), 1000);\n  }\n}\n\nDataTablePanelCtrl.prototype.autoRedraw = _.debounce(function() {\n  if (this.panel.allowRedrawOnModify) {\n    this.drawIfChanged.apply(this, arguments);\n  }\n}, 500);\n\nDataTablePanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}