{"version":3,"sources":["../src/ctrl.js"],"names":["RGX_SIMPLE_NUMBER","DEFAULT_PSEUDO_CSS","UNIT_FORMATS","TOOLTIP_PLACEMENTS","CONTENT_RULE_TYPES","id","text","CONTENT_RULE_CLASS_LEVELS","CONTENT_RULE_MAX_VALUE_OPS","CONTENT_RULE_MIN_VALUE_OPS","CONTENT_RULE_EXACT_NUM_OPS","DEFAULT_PANEL_SETTINGS","allowLengthChange","allowOrdering","allowSearching","allowRedrawOnModify","columnDefs","initialPageLength","isFullWidth","pageLengths","pseudoCSS","varCols","dataRefId","mainJoinColumn","joinColumn","nameColumn","valueColumn","DataTablePanelCtrl","$scope","$injector","$rootScope","_","has","panel","defaultsDeep","events","on","onInitEditMode","bind","onDataReceived","onDataError","onInitPanelActions","onPanelSizeChanged","draw","panelJSON","getPanelSettingsJSON","spacing","JSON","stringify","key","value","undefined","fixDataTableSize","path","addEditorTab","actions","push","click","dataList","length","forEach","data","isReal","updateDataListOptions","EXTRA_COLS","columns","concat","range","map","y","rows","x","Math","random","type","name","test","eval","filter","display","displayIsHTML","url","openNewWindow","width","classNames","isVisible","isOrderable","isSearchable","contentRules","columnDef","splice","indexOf","classLevel","negateCriteria","unitFormat","unitFormatDecimals","unitFormatString","minValue","maxValue","minValueOp","maxValueOp","tooltip","placement","contentRule","dataListOptions","i","refId","replace","split","reduce","arr","parseInt","Infinity","getData","headers","processRows","getVarsByName","JS","dom","href","encodeURIComponent","row","carry","cell","visible","html","col","download","title","formatDate","Date","templateSrv","variables","variable","varValues","toArray","current","isAll","includeAll","ctrl","jElem","panelElement","height","varsByName","domTable","style","table","jTable","jQuery","appendTo","dataTableOpts","column","colIndex","result","colDef","className","orderable","searchable","headerCallback","tr","thIndex","jTH","eq","rowCallback","rowData","pageDisplayIndex","displayIndex","rowIndex","isProcessed","cellValue","tdIndex","cellCount","jTD","cls","level","addClass","names","escape","scrollY","scrollX","scrollCollapse","ordering","searching","lengthChange","lengthMenu","getPageLengthOptions","opt","pageLength","order","dataTable","DataTable","find","css","each","elem","trim","appendChild","parse","rowCount","ruleApplied","valueOf","toString","rules","cellsByColName","ci","rule","ruleCount","ruleIndex","isMatch","colDefContentRuleFilter","colDefContentRuleFilters","gcvOptions","joinValues","ruleType","rgx","minIsNum","maxIsNum","displayHTML","target","tooltipHTML","toLowerCase","getVarColsData","slice","MAIN_COL_COUNT","MAIN_ROW_COUNT","vcData","vcHeaders","mainJoinColIndex","findIndex","c","joinColIndex","nameColIndex","valueColIndex","mainRowIndex","sort","a","b","vcRowsPrime","vcRows","vcColIndexPairs","vcAddedHeaders","vcRow","vcHeader","vcJoinValue","isNewVCHeader","isChanged","mainRow","zipObject","pop","vcHeaderIndex","first","index","SPLICE_ARGS","apply","pair","cloneDeep","colDefs","colDefRgxs","putVarColsIn","colDefRgx","colDefIndex","fullHeight","jWrap","wrapHeight","jScrollBody","scrollHeight","nonScrollHeight","error","isValid","element","jContent","elemContent","pageLengthOptions","drawDataTable","selector","err","msg","message","elemMsg","alignItems","textAlign","$","margin","append","rootVar","set","autoRedraw","scope","attrs","throttleDraw","debounce","MetricsPanelCtrl","prototype","drawIfChanged","arguments","templateUrl"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAOA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,iBAAiB,GAAG,eAA1B;AAEA,IAAMC,kBAAkB,4aAAxB;AAuBA,IAAMC,YAAY,GAAG,oCAArB;AAEA,IAAMC,kBAAkB,GAAG,CACzB;AAAE,QAAM,KAAR;AAAe,UAAQ;AAAvB,CADyB,EAEzB;AAAE,QAAM,MAAR;AAAgB,UAAQ;AAAxB,CAFyB,EAGzB;AAAE,QAAM,OAAR;AAAiB,UAAQ;AAAzB,CAHyB,EAIzB;AAAE,QAAM,QAAR;AAAkB,UAAQ;AAA1B,CAJyB,CAA3B;AAOA,IAAMC,kBAAkB,GAAG,CACzB;AAAEC,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CADyB,EAEzB;AAAED,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,IAAI,EAAE;AAArB,CAFyB,EAGzB;AAAED,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAHyB,CAA3B;AAMA,IAAMC,yBAAyB,GAAG,CAChC;AAAEF,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,IAAI,EAAE;AAApB,CADgC,EAEhC;AAAED,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,IAAI,EAAE;AAAnB,CAFgC,CAAlC;AAKA,IAAME,0BAA0B,GAAG,CACjC;AAAEH,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CADiC,EAEjC;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAFiC,EAGjC;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAHiC,CAAnC;AAMA,IAAMG,0BAA0B,GAAG,CACjC;AAAEJ,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CADiC,EAEjC;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAFiC,EAGjC;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAHiC,CAAnC;AAMA,IAAMI,0BAA0B,GAAG,CACjC;AAAEL,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CADiC,EAEjC;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAFiC,CAAnC;AAKA,IAAMK,sBAAsB,GAAG;AAC7BC,EAAAA,iBAAiB,EAAE,IADU;AAE7BC,EAAAA,aAAa,EAAE,IAFc;AAG7BC,EAAAA,cAAc,EAAE,IAHa;AAI7BC,EAAAA,mBAAmB,EAAE,IAJQ;AAK7BC,EAAAA,UAAU,EAAE,EALiB;AAM7BC,EAAAA,iBAAiB,EAAE,EANU;AAO7BC,EAAAA,WAAW,EAAE,IAPgB;AAQ7BC,EAAAA,WAAW,EAAE,oBARgB;AAS7BC,EAAAA,SAAS,EAAEnB,kBATkB;AAU7BoB,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,IADJ;AAEPC,IAAAA,cAAc,EAAE,IAFT;AAGPC,IAAAA,UAAU,EAAE,IAHL;AAIPC,IAAAA,UAAU,EAAE,IAJL;AAKPC,IAAAA,WAAW,EAAE;AALN;AAVoB,CAA/B;;IAmBaC,kB;;;;;AACX,8BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAAA;;AAAA;;AACzC,4FAAMF,MAAN,EAAcC,SAAd;AAEA,UAAKC,UAAL,GAAkBA,UAAlB,CAHyC,CAKzC;;AACA,QAAI,CAACC,gBAAEC,GAAF,CAAM,MAAKC,KAAX,EAAkB,qBAAlB,CAAL,EAA+C;AAC7C,YAAKA,KAAL,CAAWlB,mBAAX,GAAiC,KAAjC;AACD;;AAEDgB,oBAAEG,YAAF,CAAe,MAAKD,KAApB,EAA2BtB,sBAA3B;;AAEA,UAAKwB,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,+BAAjC;;AACA,UAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKG,cAAL,CAAoBD,IAApB,+BAAhC;;AACA,UAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKG,cAAL,CAAoBD,IAApB,+BAArC;;AACA,UAAKH,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,MAAKI,WAAL,CAAiBF,IAAjB,+BAA7B;;AACA,UAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKK,kBAAL,CAAwBH,IAAxB,+BAArC;;AACA,UAAKH,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKM,kBAAL,CAAwBJ,IAAxB,+BAAzB;;AACA,UAAKH,MAAL,CAAYC,EAAZ,CAAe,mBAAf,EAAoC,MAAKO,IAAL,CAAUL,IAAV,+BAApC;;AAlByC;AAmB1C;;;;oCAEe;AACd,UAAI,KAAKM,SAAL,KAAmB,KAAKC,oBAAL,EAAvB,EAAoD;AAClD,aAAKF,IAAL;AACD;AACF;;;yCAEoBG,O,EAAS;AAC5B,UAAIb,KAAK,GAAG,KAAKA,KAAjB;AACA,aAAOc,IAAI,CAACC,SAAL,CACLf,KADK,EAEL,UAAUgB,GAAV,EAAeC,KAAf,EAAsB;AACpB,eAAQ,QAAQjB,KAAR,IAAiBF,gBAAEC,GAAF,CAAMrB,sBAAN,EAA8BsC,GAA9B,CAAlB,GACHC,KADG,GAEHC,SAFJ;AAGD,OANI,EAOLL,OAPK,CAAP;AASD;;;yCAEoB;AACnB,WAAKM,gBAAL;AACD;;;qCAEgB;AACf,UAAIC,IAAI,GAAG,sDAAX;AACA,WAAKC,YAAL,CAAkB,YAAlB,YAAmCD,IAAnC,wBAA4D,CAA5D;AACA,WAAKC,YAAL,CAAkB,kBAAlB,YAAyCD,IAAzC,oBAA8D,CAA9D;AACA,WAAKC,YAAL,CAAkB,QAAlB,YAA+BD,IAA/B,kBAAkD,CAAlD;AACA,WAAKC,YAAL,CAAkB,oBAAlB,YAA2CD,IAA3C,uBAAmE,CAAnE;AACA,WAAKC,YAAL,CAAkB,QAAlB,YAA+BD,IAA/B,kBAAkD,CAAlD;AACA,WAAKC,YAAL,CAAkB,YAAlB,YAAmCD,IAAnC,wBAA4D,CAA5D;AACD;;;uCAEkBE,O,EAAS;AAC1BA,MAAAA,OAAO,CAACC,IAAR,CAAa;AAAElD,QAAAA,IAAI,EAAE,YAAR;AAAsBmD,QAAAA,KAAK,EAAE;AAA7B,OAAb;AACD;;;kCAEa;AACZ,WAAKd,IAAL;AACD;;;mCAEce,Q,EAAU;AACvB,UAAIA,QAAQ,IAAIA,QAAQ,CAACC,MAAzB,EAAiC;AAC/BD,QAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,MAAL,GAAc,IAAlB;AAAA,SAArB;AACA,aAAKJ,QAAL,GAAgBA,QAAhB;AACA,aAAKK,qBAAL;AACD,OAJD,MAKK;AACH,YAAIC,UAAU,GAAG,CAAjB;AACA,aAAKN,QAAL,GAAgB,CACd;AACEO,UAAAA,OAAO,EAAE,CAAC;AAAE3D,YAAAA,IAAI,EAAE;AAAR,WAAD,EAAgB;AAAEA,YAAAA,IAAI,EAAE;AAAR,WAAhB,EAAmC;AAAEA,YAAAA,IAAI,EAAE;AAAR,WAAnC,EAAsD4D,MAAtD,CAA6DnC,gBAAEoC,KAAF,CAAQH,UAAR,EAAoBI,GAApB,CAAwB,UAAAC,CAAC;AAAA,mBAAK;AAAE/D,cAAAA,IAAI,YAAK+D,CAAL;AAAN,aAAL;AAAA,WAAzB,CAA7D,CADX;AAEEC,UAAAA,IAAI,EAAEvC,gBAAEoC,KAAF,CAAQ,GAAR,EAAaC,GAAb,CAAiB,UAAAG,CAAC;AAAA,mBAAI,CAACA,CAAD,EAAIA,CAAC,GAAGA,CAAR,EAAWA,CAAC,GAAGA,CAAf,EAAkBL,MAAlB,CAAyBnC,gBAAEoC,KAAF,CAAQH,UAAR,EAAoBI,GAApB,CAAwB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,GAAGG,IAAI,CAACC,MAAL,EAAR;AAAA,aAAzB,CAAzB,CAAJ;AAAA,WAAlB,CAFR;AAGEX,UAAAA,MAAM,EAAE,KAHV;AAIEY,UAAAA,IAAI,EAAE;AAJR,SADc,CAAhB;AAQD;;AAED,WAAK/B,IAAL;AACD;;;mCAEcgC,I,EAAM;AACnB,UAAI,qBAAqBC,IAArB,CAA0BD,IAA1B,CAAJ,EAAqC;AACpC,eAAOE,IAAI,CAACF,IAAD,CAAX;AACA;AACF;;;mCAEc;AACb,WAAK1C,KAAL,CAAWjB,UAAX,CAAsBwC,IAAtB,CAA2B;AACzBsB,QAAAA,MAAM,EAAE,QADiB;AAEzBC,QAAAA,OAAO,EAAE,UAFgB;AAGzBC,QAAAA,aAAa,EAAE,KAHU;AAIzBC,QAAAA,GAAG,EAAE,EAJoB;AAKzBC,QAAAA,aAAa,EAAE,IALU;AAMzBC,QAAAA,KAAK,EAAE,EANkB;AAOzBC,QAAAA,UAAU,EAAE,EAPa;AAQzBC,QAAAA,SAAS,EAAE,IARc;AASzBC,QAAAA,WAAW,EAAE,IATY;AAUzBC,QAAAA,YAAY,EAAE,IAVW;AAWzBC,QAAAA,YAAY,EAAE;AAXW,OAA3B;AAaD;;;oCAEeC,S,EAAW;AACzB,UAAIzE,UAAU,GAAG,KAAKiB,KAAL,CAAWjB,UAA5B;AACAA,MAAAA,UAAU,CAAC0E,MAAX,CAAkB1E,UAAU,CAAC2E,OAAX,CAAmBF,SAAnB,CAAlB,EAAiD,CAAjD;AACD;;;yCAEoBA,S,EAAW;AAC9BA,MAAAA,SAAS,CAACD,YAAV,CAAuBhC,IAAvB,CAA4B;AAC1BkB,QAAAA,IAAI,EAAEtE,kBAAkB,CAAC,CAAD,CAAlB,CAAsBC,EADF;AAE1B+E,QAAAA,UAAU,EAAE,EAFc;AAG1BQ,QAAAA,UAAU,EAAErF,yBAAyB,CAAC,CAAD,CAAzB,CAA6BF,EAHf;AAI1ByE,QAAAA,MAAM,EAAE,EAJkB;AAK1Be,QAAAA,cAAc,EAAE,KALU;AAM1Bd,QAAAA,OAAO,EAAE,UANiB;AAO1BC,QAAAA,aAAa,EAAE,KAPW;AAQ1Bc,QAAAA,UAAU,EAAE,MARc;AAS1BC,QAAAA,kBAAkB,EAAE,CATM;AAU1BC,QAAAA,gBAAgB,EAAE,EAVQ;AAW1BC,QAAAA,QAAQ,EAAE,IAXgB;AAY1BC,QAAAA,QAAQ,EAAE,IAZgB;AAa1BC,QAAAA,UAAU,EAAE,IAbc;AAc1BC,QAAAA,UAAU,EAAE,IAdc;AAe1BnB,QAAAA,GAAG,EAAE,EAfqB;AAgB1BC,QAAAA,aAAa,EAAE,IAhBW;AAiB1BmB,QAAAA,OAAO,EAAE;AACPhB,UAAAA,SAAS,EAAE,KADJ;AAEPN,UAAAA,OAAO,EAAE,EAFF;AAGPuB,UAAAA,SAAS,EAAEnG,kBAAkB,CAAC,CAAD,CAAlB,CAAsBE;AAH1B;AAjBiB,OAA5B;AAuBD;;;4CAEuBkG,W,EAAad,S,EAAW;AAC9C,UAAID,YAAY,GAAGC,SAAS,CAACD,YAA7B;AACAA,MAAAA,YAAY,CAACE,MAAb,CAAoBF,YAAY,CAACG,OAAb,CAAqBY,WAArB,CAApB,EAAuD,CAAvD;AACD;;;4CAEuB;AACtB,WAAKC,eAAL,GAAuB,CAAC,EAAD,EAAKtC,MAAL,CAAY,KAAKR,QAAjB,EAA2BU,GAA3B,CAA+B,UAACG,CAAD,EAAIkC,CAAJ;AAAA,eAAW;AAC/DpG,UAAAA,EAAE,EAAEoG,CAAC,GAAGlC,CAAC,CAACmC,KAAL,GAAa,IAD6C;AAE/DpG,UAAAA,IAAI,EAAEmG,CAAC,GAAGlC,CAAC,CAACmC,KAAL,GAAa;AAF2C,SAAX;AAAA,OAA/B,CAAvB;AAID;;;2CAEsB;AACrB,aAAO,KAAKzE,KAAL,CAAWd,WAAX,CACFwF,OADE,CACM,MADN,EACc,EADd,EAEFC,KAFE,CAEI,GAFJ,EAGFC,MAHE,CAID,UAACC,GAAD,EAAMvC,CAAN,EAAY;AACV,YAAI,CAACA,CAAD,KAAOwC,QAAQ,CAACxC,CAAD,EAAI,EAAJ,CAAf,IAA0B,CAACA,CAAD,IAAM,CAAC,CAArC,EAAwC;AACtCA,UAAAA,CAAC,GAAGA,CAAC,IAAI,CAAC,CAAN,GAAUyC,QAAV,GAAqB,CAACzC,CAA1B;AACAuC,UAAAA,GAAG,CAACtD,IAAJ,CAAS;AAAEN,YAAAA,KAAK,EAAEqB,CAAT;AAAYjE,YAAAA,IAAI,EAAEiE,CAAC,KAAKyC,QAAN,GAAiB,KAAjB,GAAyBzC;AAA3C,WAAT;AACD;;AACD,eAAOuC,GAAP;AACD,OAVA,EAWD,EAXC,CAAP;AAaD;;;gCAEW;AACV,UAAIjD,IAAI,GAAG,KAAKoD,OAAL,EAAX;AADU,UAEJ3C,IAFI,GAEuBT,IAFvB,CAEJS,IAFI;AAAA,UAEEL,OAFF,GAEuBJ,IAFvB,CAEEI,OAFF;AAAA,UAEWiD,OAFX,GAEuBrD,IAFvB,CAEWqD,OAFX;AAGV,WAAKC,WAAL,CAAiB7C,IAAjB,EAAuBL,OAAvB,EAAgCiD,OAAhC,EAAyC,KAAKE,aAAL,EAAzC;AAEAC,MAAAA,EAAE,CAACC,GAAH,CAAO;AACLvF,QAAAA,CAAC,EAAE,GADE;AAELwF,QAAAA,IAAI,EAAE,iCAAiCC,kBAAkB,CACvD,4BACElD,IAAI,CAACF,GAAL,CAAS,UAAAqD,GAAG;AAAA,iBAAIA,GAAG,CAACZ,MAAJ,CAAW,UAACa,KAAD,EAAQC,IAAR,EAAiB;AAC1C,gBAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBF,cAAAA,KAAK,CAAClE,IAAN,CAAW,kCAAYmE,IAAI,CAACE,IAAjB,CAAX;AACD;;AACD,mBAAOH,KAAP;AACD,WALe,EAKb,EALa,CAAJ;AAAA,SAAZ,CADF,EAOE;AACER,UAAAA,OAAO,EAAEjD,OAAO,CAAC4C,MAAR,CAAe,UAACa,KAAD,EAAQI,GAAR,EAAgB;AACtC,gBAAIA,GAAG,CAACF,OAAR,EAAiB;AACfF,cAAAA,KAAK,CAAClE,IAAN,CAAW,kCAAYsE,GAAG,CAACD,IAAhB,CAAX;AACD;;AACD,mBAAOH,KAAP;AACD,WALQ,EAKN,EALM;AADX,SAPF,CADuD,CAFpD;AAoBLK,QAAAA,QAAQ,EAAE,KAAK9F,KAAL,CAAW+F,KAAX,GAAmBX,EAAE,CAACY,UAAH,CAAc,IAAIC,IAAJ,EAAd,EAAwB,kCAAxB;AApBxB,OAAP,EAqBGzE,KArBH;AAsBD;;;oCAEe;AACd,aAAO,KAAK0E,WAAL,CAAiBC,SAAjB,CAA2BvB,MAA3B,CACL,UAACa,KAAD,EAAQW,QAAR,EAAqB;AACnB;AACA,YAAIC,SAAS,GAAGjB,EAAE,CAACkB,OAAH,CAAWF,QAAQ,CAACG,OAAT,CAAiBtF,KAA5B,CAAhB;AACA,YAAIuF,KAAK,GAAGJ,QAAQ,CAACK,UAAT,IAAuBJ,SAAS,CAAC3E,MAAV,KAAqB,CAA5C,IAAiD2E,SAAS,CAAC,CAAD,CAAT,KAAiB,QAA9E;AACAZ,QAAAA,KAAK,CAACW,QAAQ,CAAC1D,IAAV,CAAL,GAAuB8D,KAAK,GAAG,CAACJ,QAAQ,CAACG,OAAT,CAAiBlI,IAAlB,CAAH,GAA6BgI,SAAzD;AACA,eAAOZ,KAAP;AACD,OAPI,EAQL,EARK,CAAP;AAUD;;;kCAEa7D,I,EAAM;AAClB,UAAI8E,IAAI,GAAG,IAAX;AACA,UAAI1G,KAAK,GAAG0G,IAAI,CAAC1G,KAAjB;AACA,UAAI2G,KAAK,GAAGD,IAAI,CAACE,YAAjB;AACA,UAAIC,MAAM,GAAGF,KAAK,CAACE,MAAN,EAAb;AACA,UAAI7E,OAAO,GAAGJ,IAAI,CAACI,OAAnB;AACA,UAAIK,IAAI,GAAGT,IAAI,CAACS,IAAhB;AACA,UAAIyE,UAAU,GAAGJ,IAAI,CAACvB,aAAL,EAAjB;AACA,UAAI4B,QAAQ,GAAG;AAAEjH,QAAAA,CAAC,EAAE,OAAL;AAAckH,QAAAA,KAAK,EAAE;AAArB,OAAf;;AACA,UAAIhH,KAAK,CAACf,WAAV,EAAuB;AACrB8H,QAAAA,QAAQ,CAACC,KAAT,CAAe9D,KAAf,GAAuB,MAAvB;AACD;;AAED,UAAI+D,KAAK,GAAG7B,EAAE,CAACC,GAAH,CAAO0B,QAAP,CAAZ;AACA,UAAIG,MAAM,GAAGC,MAAM,CAACF,KAAD,CAAN,CAAcG,QAAd,CAAuBT,KAAK,CAACf,IAAN,CAAW,EAAX,CAAvB,CAAb;AACA,UAAIX,OAAO,GAAGrD,IAAI,CAACqD,OAAnB;AACA,UAAIoC,aAAa,GAAG;AAClBrF,QAAAA,OAAO,EAAEA,OAAO,CAACG,GAAR,CAAY,UAACmF,MAAD,EAASC,QAAT,EAAsB;AACzC,cAAIC,MAAM,GAAG;AACXzB,YAAAA,KAAK,EAAE,kCAAYuB,MAAM,CAAC1B,IAAnB,CADI;AAEXD,YAAAA,OAAO,EAAE2B,MAAM,CAAC3B;AAFL,WAAb;AAKA,cAAI8B,MAAM,GAAGH,MAAM,CAACG,MAApB;;AACA,cAAIA,MAAM,IAAIH,MAAM,CAAC3B,OAArB,EAA8B;AAC5B,gBAAI8B,MAAM,CAACvE,KAAX,EAAkB;AAChBsE,cAAAA,MAAM,CAACtE,KAAP,GAAeuE,MAAM,CAACvE,KAAtB;AACD;;AACD,gBAAIuE,MAAM,CAACtE,UAAX,EAAuB;AACrBqE,cAAAA,MAAM,CAACE,SAAP,GAAmBD,MAAM,CAACtE,UAA1B;AACD;;AACDqE,YAAAA,MAAM,CAACG,SAAP,GAAmBF,MAAM,CAACpE,WAA1B;AACAmE,YAAAA,MAAM,CAACI,UAAP,GAAoBH,MAAM,CAACnE,YAA3B;AACD;;AAED,iBAAOkE,MAAP;AACD,SAnBQ,CADS;AAqBlBK,QAAAA,cArBkB,0BAqBHC,EArBG,EAqBC;AACjB,cAAIC,OAAO,GAAG,CAAd;AACA/F,UAAAA,OAAO,CAACL,OAAR,CAAgB,UAAAkE,GAAG,EAAI;AACrB,gBAAIA,GAAG,CAACF,OAAR,EAAiB;AACf,kBAAIqC,GAAG,GAAGb,MAAM,CAAC,KAAD,EAAQW,EAAR,CAAN,CAAkBG,EAAlB,CAAqBF,OAAO,EAA5B,EAAgCnC,IAAhC,CAAqCC,GAAG,CAACD,IAAzC,CAAV;AACD;AACF,WAJD;AAKD,SA5BiB;AA6BlBhE,QAAAA,IAAI,EAAES,IA7BY;AA8BlB6F,QAAAA,WA9BkB,uBA8BNJ,EA9BM,EA8BFK,OA9BE,EA8BOC,gBA9BP,EA8ByBC,YA9BzB,EA8BuCC,QA9BvC,EA8BiD;AACjE,cAAI,CAACH,OAAO,CAACI,WAAb,EAA0B;AACxB7B,YAAAA,IAAI,CAACxB,WAAL,CAAiB,CAACiD,OAAD,CAAjB,EAA4BnG,OAA5B,EAAqCiD,OAArC,EAA8C6B,UAA9C;AACD;;AACD,eAAK,IAAIpB,IAAJ,EAAU8C,SAAV,EAAqBC,OAAO,GAAG,CAA/B,EAAkCC,SAAS,GAAGP,OAAO,CAACzG,MAAtD,EAA8D6F,QAAQ,GAAG,CAA9E,EAAiFA,QAAQ,GAAGmB,SAA5F,EAAuGnB,QAAQ,EAA/G,EAAmH;AACjH7B,YAAAA,IAAI,GAAGyC,OAAO,CAACZ,QAAD,CAAd;;AAEA,gBAAI7B,IAAI,CAACC,OAAT,EAAkB;AAChB,kBAAIgD,GAAG,GAAGxB,MAAM,CAAC,MAAD,EAASW,EAAT,CAAN,CAAmBG,EAAnB,CAAsBQ,OAAO,EAA7B,CAAV;;AACA,kBAAI/C,IAAI,CAACkD,GAAL,IAAYlD,IAAI,CAACkD,GAAL,CAASC,KAAT,KAAmB,MAAnC,EAA2C;AACzCF,gBAAAA,GAAG,CAACG,QAAJ,CAAapD,IAAI,CAACkD,GAAL,CAASG,KAAtB;AACD;;AACD,kBAAItB,MAAM,GAAGzF,OAAO,CAACuF,QAAD,CAAP,CAAkB/D,SAA/B;;AACA,kBAAIiE,MAAM,IAAIA,MAAM,CAACtE,UAArB,EAAiC;AAC/BwF,gBAAAA,GAAG,CAACG,QAAJ,CAAarB,MAAM,CAACtE,UAApB;AACD;;AACD,kBAAIyC,IAAI,GAAGF,IAAI,CAACE,IAAhB;;AACA,kBAAIF,IAAI,CAACtB,OAAT,EAAkB;AAChBwB,gBAAAA,IAAI,qDAA6C9F,gBAAEkJ,MAAF,CAAStD,IAAI,CAACtB,OAAL,CAAatB,OAAtB,CAA7C,iCAAgG4C,IAAI,CAACtB,OAAL,CAAaC,SAA7G,yCAAkJuB,IAAlJ,WAAJ;AACD;;AACD+C,cAAAA,GAAG,CAAC/C,IAAJ,CAASA,IAAT;AACD;;AACD,gBAAIF,IAAI,CAACkD,GAAL,IAAYlD,IAAI,CAACkD,GAAL,CAASC,KAAT,KAAmB,KAAnC,EAA0C;AACxC1B,cAAAA,MAAM,CAACW,EAAD,CAAN,CAAWgB,QAAX,CAAoBpD,IAAI,CAACkD,GAAL,CAASG,KAA7B;AACD;AACF;AACF,SAxDiB;AAyDlBE,QAAAA,OAAO,EAAEpC,MAzDS;AA0DlBqC,QAAAA,OAAO,EAAE,IA1DS;AA2DlBC,QAAAA,cAAc,EAAE,IA3DE;AA4DlBC,QAAAA,QAAQ,EAAEpJ,KAAK,CAACpB,aA5DE;AA6DlByK,QAAAA,SAAS,EAAErJ,KAAK,CAACnB,cA7DC;AA8DlByK,QAAAA,YAAY,EAAEtJ,KAAK,CAACrB,iBA9DF;AA+DlB4K,QAAAA,UAAU,EAAE7C,IAAI,CAAC8C,oBAAL,GAA4B5E,MAA5B,CACV,UAACC,GAAD,EAAM4E,GAAN;AAAA,iBAAc,CACZ5E,GAAG,CAAC,CAAD,CAAH,CAAO5C,MAAP,CAAc,CAACwH,GAAG,CAACxI,KAAJ,KAAc8D,QAAd,GAAyB,CAAC,CAA1B,GAA8B0E,GAAG,CAACxI,KAAnC,CAAd,CADY,EAEZ4D,GAAG,CAAC,CAAD,CAAH,CAAO5C,MAAP,CAAc,CAACwH,GAAG,CAACxI,KAAJ,KAAc8D,QAAd,GAAyB,KAAzB,GAAiC0E,GAAG,CAACxI,KAAtC,CAAd,CAFY,CAAd;AAAA,SADU,EAKV,CAAC,EAAD,EAAK,EAAL,CALU,CA/DM;AAsElByI,QAAAA,UAAU,EAAE1J,KAAK,CAAChB,iBAtEA;AAuElB2K,QAAAA,KAAK,EAAE;AAvEW,OAApB;AAyEA,UAAIC,SAAS,GAAG1C,MAAM,CAAC2C,SAAP,CAAiBxC,aAAjB,CAAhB,CAzFkB,CA2FlB;;AACAV,MAAAA,KAAK,CAACmD,IAAN,CAAW,6BAAX,EAA0CC,GAA1C,CAA8C,QAA9C,EAAwD,QAAxD,EA5FkB,CA8FlB;;AACArD,MAAAA,IAAI,CAACvF,gBAAL,GA/FkB,CAiGlB;AACA;;AACAwF,MAAAA,KAAK,CAACqD,IAAN,CAAW,UAACxF,CAAD,EAAIyF,IAAJ,EAAa;AACtBA,QAAAA,IAAI,CAACvC,SAAL,GAAiBuC,IAAI,CAACvC,SAAL,CAAehD,OAAf,CAAuB,WAAvB,EAAoC,GAApC,EAAyCA,OAAzC,CAAiD,MAAjD,EAAyD,GAAzD,EAA8DwF,IAA9D,EAAjB;AACAD,QAAAA,IAAI,CAACE,WAAL,CAAiB/E,EAAE,CAAC2E,GAAH,CAAOjJ,IAAI,CAACsJ,KAAL,CAAW,sCAAgBpK,KAAK,CAACb,SAAtB,CAAX,CAAP,EAAqD8K,IAArD,CAAjB;AACD,OAHD;AAID;;;gCAEW5H,I,EAAML,O,EAASiD,O,EAAS6B,U,EAAY;AAC9C,UAAIJ,IAAI,GAAG,IAAX;;AAEA,WAAK,IAAIlB,GAAJ,EAAS6E,QAAQ,GAAGhI,IAAI,CAACX,MAAzB,EAAiC4G,QAAQ,GAAG,CAAjD,EAAoDA,QAAQ,GAAG+B,QAA/D,EAAyE/B,QAAQ,EAAjF,EAAqF;AACnF9C,QAAAA,GAAG,GAAGnD,IAAI,CAACiG,QAAD,CAAV;;AACA,YAAI,CAAC9C,GAAG,CAAC+C,WAAT,EAAsB;AAAA,wDACME,OADN,EACmBC,SADnB,EAC2CnB,QAD3C;AAElB,gBAAI+C,WAAW,SAAf;AACA,gBAAIhD,MAAM,GAAGtF,OAAO,CAACuF,QAAD,CAApB;AACA,gBAAIE,MAAM,GAAGH,MAAM,CAACG,MAApB;AAEAe,YAAAA,UAAS,GAAGhD,GAAG,CAAC+B,QAAD,CAAf;AAEA7B,YAAAA,KAAI,GAAG;AACLE,cAAAA,IAAI,EAAE4C,UADD;AAEL7C,cAAAA,OAAO,EAAE2B,MAAM,CAAC3B,OAFX;AAGL4E,cAAAA,OAHK,qBAGK;AAAA;AAAA;AAAE,uBAAO/B,UAAP;AAAmB,eAH1B;AAILgC,cAAAA,QAJK,sBAIM;AAAA;AAAA;AAAE,uBAAOhC,UAAP;AAAmB;AAJ3B,aAAP;;AAOA,gBAAIf,MAAJ,EAAY;AACV,kBAAIgD,KAAK,GAAGhD,MAAM,CAAClE,YAAnB;AACA,kBAAImH,cAAc,GAAG,EAArB;;AACA,mBAAK,IAAIC,EAAE,GAAGnF,GAAG,CAAC9D,MAAlB,EAA0BiJ,EAAE,EAA5B,GAAiC;AAC/BD,gBAAAA,cAAc,CAACzF,OAAO,CAAC0F,EAAD,CAAR,CAAd,GAA8BnF,GAAG,CAACmF,EAAD,CAAjC;AACD;;AAED,mBAAK,IAAIC,IAAJ,EAAUC,SAAS,GAAGJ,KAAK,CAAC/I,MAA5B,EAAoCoJ,SAAS,GAAG,CAArD,EAAwDA,SAAS,GAAGD,SAApE,EAA+EC,SAAS,EAAxF,EAA4F;AAC1FF,gBAAAA,IAAI,GAAGH,KAAK,CAACK,SAAD,CAAZ;AACA,oBAAIC,OAAO,GAAG,IAAd;AACA,oBAAItI,IAAI,GAAGmI,IAAI,CAACnI,IAAhB;AACA,oBAAIuI,uBAAuB,GAAG1D,MAAM,CAAC2D,wBAAP,CAAgCH,SAAhC,CAA9B;AACA,oBAAII,UAAU,GAAG;AACfxF,kBAAAA,IAAI,EAAEA,KAAI,CAACE,IADI;AAEf8E,kBAAAA,cAAc,EAAdA,cAFe;AAGfS,kBAAAA,UAAU,EAAE3F,GAAG,CAAC2F,UAHD;AAIf5D,kBAAAA,QAAQ,EAARA,QAJe;AAKf6D,kBAAAA,QAAQ,EAAER,IAAI,CAACnI,IALA;AAMf4I,kBAAAA,GAAG,EAAEL,uBANU;AAOftE,kBAAAA,IAAI,EAAJA,IAPe;AAQfI,kBAAAA,UAAU,EAAVA,UARe;AASfjD,kBAAAA,UAAU,EAAE+G,IAAI,CAAC/G,UATF;AAUfE,kBAAAA,gBAAgB,EAAE6G,IAAI,CAAC7G,gBAVR;AAWfD,kBAAAA,kBAAkB,EAAE8G,IAAI,CAAC9G;AAXV,iBAAjB;;AAaA,oBAAIrB,IAAI,KAAK,QAAb,EAAuB;AACrBsI,kBAAAA,OAAO,GAAGC,uBAAuB,CAACrI,IAAxB,CAA6B+C,KAAI,CAACE,IAAlC,CAAV;AACD,iBAFD,MAGK,IAAInD,IAAI,KAAK,OAAb,EAAsB;AACzB,sBAAIuB,QAAQ,GAAG4G,IAAI,CAAC5G,QAApB;AACA,sBAAIsH,QAAQ,GAAGvN,iBAAiB,CAAC4E,IAAlB,CAAuBqB,QAAvB,CAAf;AACA,sBAAIC,QAAQ,GAAG2G,IAAI,CAAC3G,QAApB;AACA,sBAAIsH,QAAQ,GAAGxN,iBAAiB,CAAC4E,IAAlB,CAAuBsB,QAAvB,CAAf;;AACA,sBAAIqH,QAAJ,EAAc;AACZtH,oBAAAA,QAAQ,GAAG,CAACA,QAAZ;AACD;;AACD,sBAAIuH,QAAJ,EAAc;AACZtH,oBAAAA,QAAQ,GAAG,CAACA,QAAZ;AACD;;AAED,sBAAIqH,QAAQ,IAAIC,QAAhB,EAA0B;AACxB/C,oBAAAA,UAAS,GAAG,CAACA,UAAb;AACD;;AAED,sBAAItE,UAAU,GAAG0G,IAAI,CAAC1G,UAAtB;;AACA,sBAAIA,UAAJ,EAAgB;AACd6G,oBAAAA,OAAO,GAAGA,OAAO,KAAK7G,UAAU,KAAK,IAAf,GAAsBF,QAAQ,IAAIwE,UAAlC,GAA+CxE,QAAQ,GAAGwE,UAA/D,CAAjB;AACD;;AACD,sBAAIrE,UAAU,GAAGyG,IAAI,CAACzG,UAAtB;;AACA,sBAAIA,UAAJ,EAAgB;AACd4G,oBAAAA,OAAO,GAAGA,OAAO,KAAK5G,UAAU,KAAK,IAAf,GAAsBF,QAAQ,IAAIuE,UAAlC,GAA+CvE,QAAQ,GAAGuE,UAA/D,CAAjB;AACD;AACF,iBAxBI,MAyBA;AACHuC,kBAAAA,OAAO,GAAGrF,KAAI,CAACE,IAAL,IAAa,IAAvB;AACD;;AAEDmF,gBAAAA,OAAO,GAAGA,OAAO,KAAKH,IAAI,CAAChH,cAA3B,CAlD0F,CAoD1F;;AACA,oBAAImH,OAAJ,EAAa;AACX,sBAAIH,IAAI,CAACzH,UAAT,EAAqB;AACnBuC,oBAAAA,KAAI,CAACkD,GAAL,GAAW;AACTG,sBAAAA,KAAK,EAAE,mCAAa6B,IAAI,CAACzH,UAAlB,EAA8B,KAA9B,EAAqC+H,UAArC,CADE;AAETrC,sBAAAA,KAAK,EAAE+B,IAAI,CAACjH;AAFH,qBAAX;AAID,mBANU,CAQX;;;AACA,sBAAI6H,WAAW,GAAG,mCAAaZ,IAAI,CAAC9H,OAAlB,EAA2B,KAA3B,EAAkCoI,UAAlC,CAAlB;;AACA,sBAAI,CAACN,IAAI,CAAC7H,aAAV,EAAyB;AACvByI,oBAAAA,WAAW,GAAG1L,gBAAEkJ,MAAF,CAASwC,WAAT,CAAd;AACD;;AACD,sBAAIZ,IAAI,CAAC5H,GAAT,EAAc;AACZ,wBAAIA,GAAG,GAAGlD,gBAAEkJ,MAAF,CAAS,mCAAa4B,IAAI,CAAC5H,GAAlB,EAAuB,IAAvB,EAA6BkI,UAA7B,CAAT,CAAV;;AACA,wBAAIO,MAAM,GAAGb,IAAI,CAAC3H,aAAL,GAAqB,QAArB,GAAgC,EAA7C;AACA,wBAAIyI,WAAW,GAAG,EAAlB;;AACA,wBAAId,IAAI,CAACxG,OAAL,CAAahB,SAAjB,EAA4B;AAC1BsC,sBAAAA,KAAI,CAACtB,OAAL,GAAe;AACbtB,wBAAAA,OAAO,EAAE,mCAAa8H,IAAI,CAACxG,OAAL,CAAatB,OAA1B,EAAmC,KAAnC,EAA0CoI,UAA1C,CADI;AAEb7G,wBAAAA,SAAS,EAAEuG,IAAI,CAACxG,OAAL,CAAaC,SAAb,CAAuBsH,WAAvB;AAFE,uBAAf;AAID;;AACDH,oBAAAA,WAAW,uBAAexI,GAAf,yBAA+ByI,MAA/B,gBAA0CD,WAA1C,SAAX;AACD;;AACD9F,kBAAAA,KAAI,CAACE,IAAL,GAAY4F,WAAZ;AACAlB,kBAAAA,WAAW,GAAGM,IAAd;AAEA,wBA5BW,CA4BJ;AACR;AACF,eA1FS,CA0FR;;AACH,aA1GiB,CA0GhB;;;AAEF,gBAAI,CAACN,WAAL,EAAkB;AAChB5E,cAAAA,KAAI,CAACE,IAAL,GAAY9F,gBAAEkJ,MAAF,CAAStD,KAAI,CAACE,IAAd,CAAZ;AACD;;AAEDJ,YAAAA,GAAG,CAAC+B,QAAD,CAAH,GAAgB7B,KAAhB;AAhHkB;AAAA;AAAA;;AACpB,eAAK,IAAIA,IAAJ,EAAU8C,SAAV,EAAqBC,OAAO,GAAG,CAA/B,EAAkCC,SAAS,GAAGlD,GAAG,CAAC9D,MAAlD,EAA0D6F,QAAQ,GAAG,CAA1E,EAA6EA,QAAQ,GAAGmB,SAAxF,EAAmGnB,QAAQ,EAA3G,EAA+G;AAAA,kBAAtG7B,IAAsG,EAAhG8C,SAAgG,EAArFC,OAAqF,EAAxEC,SAAwE,EAAhDnB,QAAgD;AAgH9G,WAjHmB,CAiHlB;;AACH,SApHkF,CAoHjF;;;AACF/B,QAAAA,GAAG,CAAC+C,WAAJ,GAAkB,IAAlB;AACD,OAzH6C,CAyH5C;;AACH;;;uCAEkB;AACjB,UAAI3G,IAAI,GAAG,KAAKgK,cAAL,EAAX;AACA,aAAOhK,IAAI,GAAGA,IAAI,CAACI,OAAR,GAAkB,EAA7B;AACD;;;qCAEgB;AACf,UAAI5C,OAAO,GAAG,KAAKY,KAAL,CAAWZ,OAAzB;AACA,UAAIC,SAAS,GAAGD,OAAO,IAAIA,OAAO,CAACC,SAAnC;AACA,UAAIoC,QAAQ,GAAG,KAAKA,QAApB;AACA,aAAOA,QAAQ,IAAIA,QAAQ,CAACqI,IAAT,CAAc;AAAA,YAAGrF,KAAH,QAAGA,KAAH;AAAA,eAAeA,KAAK,KAAKpF,SAAzB;AAAA,OAAd,CAAnB;AACD;;;iCAEYuC,I,EAAM;AACjB,UAAIxC,OAAO,GAAG,KAAKY,KAAL,CAAWZ,OAAzB;AACA,UAAI4C,OAAO,GAAGJ,IAAI,CAACI,OAAnB;AACA,UAAIK,IAAI,GAAGT,IAAI,CAACS,IAAL,CAAUwJ,KAAV,EAAX;AAEA,UAAMC,cAAc,GAAG9J,OAAO,CAACN,MAA/B;AACA,UAAMqK,cAAc,GAAG1J,IAAI,CAACX,MAA5B;;AAEA,UAAItC,OAAJ,EAAa;AACX,YAAI4M,MAAM,GAAG,KAAKJ,cAAL,EAAb;;AACA,YAAII,MAAJ,EAAY;AACV,cAAIC,SAAS,GAAGD,MAAM,CAAChK,OAAP,CAAeG,GAAf,CAAmB,UAAA0D,GAAG;AAAA,mBAAIA,GAAG,CAACxH,IAAR;AAAA,WAAtB,CAAhB;AACA,cAAI6N,gBAAgB,GAAGlK,OAAO,CAACmK,SAAR,CAAkB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC/N,IAAF,KAAWe,OAAO,CAACE,cAAvB;AAAA,WAAnB,CAAvB;AACA,cAAI+M,YAAY,GAAGJ,SAAS,CAACvI,OAAV,CAAkBtE,OAAO,CAACG,UAA1B,CAAnB;AACA,cAAI+M,YAAY,GAAGL,SAAS,CAACvI,OAAV,CAAkBtE,OAAO,CAACI,UAA1B,CAAnB;AACA,cAAI+M,aAAa,GAAGN,SAAS,CAACvI,OAAV,CAAkBtE,OAAO,CAACK,WAA1B,CAApB;;AACA,cAAIyM,gBAAgB,IAAI,CAApB,IAAyBG,YAAY,IAAI,CAAzC,IAA8CC,YAAY,IAAI,CAA9D,IAAmEC,aAAa,IAAI,CAAxF,EAA2F;AACzF,gBAAIC,YAAY,GAAG,CAAnB,CADyF,CAGzF;;AACAnK,YAAAA,IAAI,CAACoK,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUD,CAAC,CAACR,gBAAD,CAAD,GAAsBS,CAAC,CAACT,gBAAD,CAAvB,GAA4C,CAAC,CAA7C,GAAiD,CAA3D;AAAA,aAAV,EAJyF,CAMzF;;AACA,gBAAIU,WAAW,GAAGZ,MAAM,CAAC3J,IAAzB;AACA,gBAAIwK,MAAM,GAAGD,WAAW,CAACf,KAAZ,GAAoBY,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUD,CAAC,CAACL,YAAD,CAAD,GAAkBM,CAAC,CAACN,YAAD,CAAnB,GAAoC,CAAC,CAArC,GAAyC,CAAnD;AAAA,aAAzB,CAAb,CARyF,CAUzF;AACA;;AACA,gBAAIS,eAAe,GAAG,EAAtB;AAEAD,YAAAA,MAAM,CACJ;AACA;AAFI,aAGHjI,MAHH,CAGU,UAACmI,cAAD,EAAiBC,KAAjB,EAA2B;AACjC,kBAAIC,QAAQ,GAAGD,KAAK,CAACV,YAAD,CAApB;AACA,kBAAIY,WAAW,GAAGF,KAAK,CAACX,YAAD,CAAvB;AACA,kBAAI9E,QAAQ,GAAGwF,cAAc,CAACrJ,OAAf,CAAuBuJ,QAAvB,CAAf;AACA,kBAAIE,aAAa,GAAG5F,QAAQ,GAAG,CAA/B,CAJiC,CAMjC;;AACA,kBAAI4F,aAAJ,EAAmB;AACjB5F,gBAAAA,QAAQ,GAAGwF,cAAc,CAACxL,IAAf,CAAoB0L,QAApB,IAAgC,CAA3C;AACD,eATgC,CAWjC;AACA;AACA;;;AACA,mBAAK,IAAIG,SAAJ,EAAeC,OAAf,EAAwB7I,CAAC,GAAGgI,YAAjC,EAA+ChI,CAAC,GAAGuH,cAAnD,EAAmEvH,CAAC,EAApE,EAAwE;AACtE6I,gBAAAA,OAAO,GAAGhL,IAAI,CAACmC,CAAD,CAAd;;AACA,oBAAI0I,WAAW,KAAKG,OAAO,CAACnB,gBAAD,CAA3B,EAA+C;AAC7CmB,kBAAAA,OAAO,CAACvB,cAAc,GAAGvE,QAAlB,CAAP,GAAqCyF,KAAK,CAACT,aAAD,CAA1C;AACA,mBAACc,OAAO,CAAClC,UAAR,GAAqBkC,OAAO,CAAClC,UAAR,IAAsB,EAA5C,EAAgDW,cAAc,GAAGvE,QAAjE,IAA6EzH,gBAAEwN,SAAF,CAAYrB,SAAZ,EAAuBe,KAAvB,CAA7E;AACAR,kBAAAA,YAAY,GAAGhI,CAAf;AACA4I,kBAAAA,SAAS,GAAG,IAAZ;AACD,iBALD,MAMK,IAAIA,SAAJ,EAAe;AAClB;AACA,yBAAOL,cAAP;AACD;AACF,eA1BgC,CA4BjC;AACA;;;AACA,kBAAII,aAAJ,EAAmB;AACjBJ,gBAAAA,cAAc,CAACQ,GAAf;AACD;;AAED,qBAAOR,cAAP;AACD,aAtCH,EAsCK,EAtCL,EAuCE;AAvCF,aAwCGpL,OAxCH,CAwCW,UAACsL,QAAD,EAAWO,aAAX,EAA6B;AACpCV,cAAAA,eAAe,CAACvL,IAAhB,CAAqB;AACnBkM,gBAAAA,KAAK,EAAEb,WAAW,CAACT,SAAZ,CAAsB,UAAAa,KAAK;AAAA,yBAAIA,KAAK,CAACV,YAAD,CAAL,KAAwBW,QAA5B;AAAA,iBAA3B,CADY;AAEnBS,gBAAAA,KAAK,EAAEF,aAAa,GAAG1B;AAFJ,eAArB;AAIA9J,cAAAA,OAAO,CAACT,IAAR,CAAa;AAAElD,gBAAAA,IAAI,EAAE4O;AAAR,eAAb;AACD,aA9CH,EAdyF,CA8DzF;;AACAH,YAAAA,eAAe,CAACL,IAAhB,CAAqB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUD,CAAC,CAACe,KAAF,GAAUd,CAAC,CAACc,KAAtB;AAAA,aAArB;AACA,gBAAME,WAAW,GAAG,CAAC7B,cAAD,EAAiBgB,eAAe,CAACpL,MAAjC,CAApB,CAhEyF,CAkEzF;;AACAM,YAAAA,OAAO,CAACyB,MAAR,CAAemK,KAAf,CACE5L,OADF,EAEE2L,WAAW,CAAC1L,MAAZ,CAAmB6K,eAAe,CAAC3K,GAAhB,CAAoB,UAAA0L,IAAI;AAAA,qBAAI7L,OAAO,CAAC6L,IAAI,CAACH,KAAN,CAAX;AAAA,aAAxB,CAAnB,CAFF,EAnEyF,CAwEzF;;AACArL,YAAAA,IAAI,CAACV,OAAL,CAAa,UAAA6D,GAAG,EAAI;AAClBA,cAAAA,GAAG,CAAC/B,MAAJ,CAAWmK,KAAX,CACEpI,GADF,EAEEmI,WAAW,CAAC1L,MAAZ,CAAmB6K,eAAe,CAAC3K,GAAhB,CAAoB,UAAA0L,IAAI,EAAI;AAC7CA,gBAAAA,IAAI,GAAGrI,GAAG,CAACqI,IAAI,CAACH,KAAN,CAAV;AACA,uBAAOG,IAAI,KAAK3M,SAAT,GAAqB,IAArB,GAA4B2M,IAAnC;AACD,eAHkB,CAAnB,CAFF;AAOD,aARD;AASD;AACF;AACF;AACF;;;8BAES;AACR,UAAInH,IAAI,GAAG,IAAX;AACA,UAAIjF,QAAQ,GAAGiF,IAAI,CAACjF,QAAL,CAAc,CAAd,CAAf;AACA,UAAIO,OAAO,GAAGP,QAAQ,CAACO,OAAT,CAAiBG,GAAjB,CAAqB,UAAA0D,GAAG;AAAA,eAAI/F,gBAAEgO,SAAF,CAAYjI,GAAZ,CAAJ;AAAA,OAAxB,CAAd;AACA,UAAIxD,IAAI,GAAGZ,QAAQ,CAACY,IAAT,CAAcF,GAAd,CAAkB,UAAAqD,GAAG;AAAA,eAAIA,GAAG,CAACqG,KAAJ,EAAJ;AAAA,OAArB,CAAX;AACA,UAAI/E,UAAU,GAAGJ,IAAI,CAACvB,aAAL,EAAjB;AACA,UAAInF,KAAK,GAAG0G,IAAI,CAAC1G,KAAjB;AACA,UAAI+N,OAAO,GAAG/N,KAAK,CAACjB,UAApB;AACA,UAAIK,OAAO,GAAGY,KAAK,CAACZ,OAApB;AACA,UAAI4O,UAAU,GAAGD,OAAO,CAAC5L,GAAR,CAAY,UAAAsF,MAAM;AAAA,eAAI,kCAAYA,MAAM,CAAC5E,MAAnB,CAAJ;AAAA,OAAlB,CAAjB;AACA,UAAIoI,wBAAwB,GAAG8C,OAAO,CAAC5L,GAAR,CAC7B,UAAAsF,MAAM;AAAA,eAAIA,MAAM,CAAClE,YAAP,CAAoBpB,GAApB,CACR,UAAAyI,IAAI;AAAA,iBAAIA,IAAI,CAACnI,IAAL,KAAc,QAAd,GAAyB,kCAAYmI,IAAI,CAAC/H,MAAjB,CAAzB,GAAoD,IAAxD;AAAA,SADI,CAAJ;AAAA,OADuB,CAA/B,CAVQ,CAgBR;;AACA,UAAIjB,IAAI,GAAG;AAAEI,QAAAA,OAAO,EAAPA,OAAF;AAAWK,QAAAA,IAAI,EAAJA,IAAX;AAAiBI,QAAAA,IAAI,EAAEhB,QAAQ,CAACgB,IAAhC;AAAsCgC,QAAAA,KAAK,EAAEhD,QAAQ,CAACgD;AAAtD,OAAX,CAjBQ,CAmBR;;AACA,WAAKwJ,YAAL,CAAkBrM,IAAlB,EApBQ,CAsBR;;AACA,UAAIqD,OAAO,GAAGrD,IAAI,CAACqD,OAAL,GAAejD,OAAO,CAACG,GAAR,CAAY,UAAA0D,GAAG;AAAA,eAAIA,GAAG,CAACxH,IAAR;AAAA,OAAf,CAA7B;AAEA2D,MAAAA,OAAO,CAACL,OAAR,CAAgB,UAAC2F,MAAD,EAASC,QAAT,EAAsB;AACpC,YAAI,aAAa,OAAOD,MAAxB,EAAgC;AAC9BA,UAAAA,MAAM,GAAG;AAAEjJ,YAAAA,IAAI,EAAEiJ,MAAR;AAAgB3B,YAAAA,OAAO,EAAE;AAAzB,WAAT;AACD,SAFD,MAGK;AACH2B,UAAAA,MAAM,CAAC3B,OAAP,GAAiB,IAAjB;AACD;;AAEDqI,QAAAA,UAAU,CAAClE,IAAX,CAAgB,UAACoE,SAAD,EAAYC,WAAZ,EAA4B;AAC1C,cAAID,SAAS,CAACvL,IAAV,CAAe2E,MAAM,CAACjJ,IAAtB,CAAJ,EAAiC;AAC/B,gBAAIoJ,MAAM,GAAGsG,OAAO,CAACI,WAAD,CAApB;AACA,gBAAIjD,UAAU,GAAG;AACfxF,cAAAA,IAAI,EAAE4B,MAAM,CAACjJ,IADE;AAEfqM,cAAAA,cAAc,EAAE,EAFD;AAGfU,cAAAA,QAAQ,EAAE,QAHK;AAIfC,cAAAA,GAAG,EAAE6C,SAJU;AAKfxH,cAAAA,IAAI,EAAJA,IALe;AAMfI,cAAAA,UAAU,EAAVA,UANe;AAOfjD,cAAAA,UAAU,EAAE,IAPG;AAQfC,cAAAA,kBAAkB,EAAE;AARL,aAAjB;AAUAwD,YAAAA,MAAM,CAACjJ,IAAP,GAAc,mCAAaoJ,MAAM,CAAC3E,OAApB,EAA6B,KAA7B,EAAoCoI,UAApC,CAAd;AAEA,gBAAItF,IAAI,GAAG6B,MAAM,CAAC1E,aAAP,GAAuBuE,MAAM,CAACjJ,IAA9B,GAAqCyB,gBAAEkJ,MAAF,CAAS1B,MAAM,CAACjJ,IAAhB,CAAhD;;AAEA,gBAAIoJ,MAAM,CAACzE,GAAX,EAAgB;AACd,kBAAIA,GAAG,GAAGlD,gBAAEkJ,MAAF,CAAS,mCAAavB,MAAM,CAACzE,GAApB,EAAyB,IAAzB,EAA+BkI,UAA/B,CAAT,CAAV;;AACA,kBAAIO,MAAM,GAAGhE,MAAM,CAACxE,aAAP,GAAuB,QAAvB,GAAkC,EAA/C;AACA2C,cAAAA,IAAI,uBAAe5C,GAAf,yBAA+ByI,MAA/B,oDAA4E7F,IAA5E,SAAJ;AACD;;AAED0B,YAAAA,MAAM,CAACG,MAAP,GAAgBA,MAAhB;AACAH,YAAAA,MAAM,CAAC2D,wBAAP,GAAkCA,wBAAwB,CAACkD,WAAD,CAA1D;AACA7G,YAAAA,MAAM,CAAC1B,IAAP,GAAcA,IAAd;AACA0B,YAAAA,MAAM,CAAC3B,OAAP,GAAiB8B,MAAM,CAACrE,SAAxB;AAEA,mBAAO,IAAP;AACD;AACF,SA9BD;;AAgCA,YAAI,CAACtD,gBAAEC,GAAF,CAAMuH,MAAN,EAAc,MAAd,CAAL,EAA4B;AAC1BA,UAAAA,MAAM,CAAC1B,IAAP,GAAc9F,gBAAEkJ,MAAF,CAAS1B,MAAM,CAACjJ,IAAhB,CAAd;AACD;;AAED2D,QAAAA,OAAO,CAACuF,QAAD,CAAP,GAAoBD,MAApB;AACD,OA7CD;AA+CA,aAAO1F,IAAP;AACD;;;uCAEkB;AACjB,UAAI+E,KAAK,GAAG,KAAKC,YAAjB;AACA,UAAIwH,UAAU,GAAGzH,KAAK,CAACE,MAAN,EAAjB;AACA,UAAIwH,KAAK,GAAG1H,KAAK,CAACmD,IAAN,CAAW,qBAAX,CAAZ;;AACA,UAAIuE,KAAK,CAAC3M,MAAV,EAAkB;AAChB,YAAI4M,UAAU,GAAGD,KAAK,CAACxH,MAAN,EAAjB;AACA,YAAI0H,WAAW,GAAGF,KAAK,CAACvE,IAAN,CAAW,wBAAX,CAAlB;AACA,YAAI0E,YAAY,GAAGD,WAAW,CAAC1H,MAAZ,EAAnB;AACA,YAAI4H,eAAe,GAAGH,UAAU,GAAGE,YAAnC;AACAD,QAAAA,WAAW,CAACxE,GAAZ,CAAgB,YAAhB,EAA8BqE,UAAU,GAAGK,eAA3C;AACD;AACF;;;2BAEM;AACL,UAAIC,KAAJ;AACA,UAAIC,OAAO,GAAG,KAAd;AACA,UAAIjI,IAAI,GAAG,IAAX;AACA,UAAIC,KAAK,GAAGD,IAAI,CAACkI,OAAjB;AACA,UAAIC,QAAQ,GAAGnI,IAAI,CAACE,YAAL,CAAkBmD,GAAlB,CAAsB,UAAtB,EAAkC,UAAlC,EAA8CnE,IAA9C,CAAmD,EAAnD,CAAf;AACA,UAAIkJ,WAAW,GAAGD,QAAQ,CAAC,CAAD,CAA1B;AACA,UAAIjN,IAAI,GAAG8E,IAAI,CAAC1B,OAAL,EAAX;AAEA0B,MAAAA,IAAI,CAACqI,iBAAL,GAAyBrI,IAAI,CAAC8C,oBAAL,EAAzB;;AAEA,UAAI5H,IAAI,IAAIA,IAAI,CAACS,IAAL,CAAUX,MAAtB,EAA8B;AAC5B,YAAIE,IAAI,CAACa,IAAL,KAAc,OAAlB,EAA2B;AACzB,cAAI;AACFiE,YAAAA,IAAI,CAACsI,aAAL,CAAmBpN,IAAnB;AACA8E,YAAAA,IAAI,CAAC/F,SAAL,GAAiB,KAAKC,oBAAL,EAAjB;AACA+F,YAAAA,KAAK,CAACvC,OAAN,CAAc;AAAE6K,cAAAA,QAAQ,EAAE;AAAZ,aAAd;AACAN,YAAAA,OAAO,GAAG,IAAV;AACD,WALD,CAMA,OAAOO,GAAP,EAAY;AACVR,YAAAA,KAAK,GAAGQ,GAAR;AACD;AACF;AACF;;AACD,UAAI,CAACP,OAAL,EAAc;AACZ,YAAIQ,GAAG,GAAG,aAAaT,KAAK,GAAG,YAAYA,KAAK,CAACU,OAArB,GAA+B,GAAjD,CAAV;AACA,YAAIC,OAAO,GAAGjK,EAAE,CAACC,GAAH,CAAO;AACnBvF,UAAAA,CAAC,EAAE,KADgB;AACTkH,UAAAA,KAAK,EAAE;AAAElE,YAAAA,OAAO,EAAE,MAAX;AAAmBwM,YAAAA,UAAU,EAAE,QAA/B;AAAyCC,YAAAA,SAAS,EAAE,QAApD;AAA8D1I,YAAAA,MAAM,EAAE;AAAtE,WADE;AAC8E2I,UAAAA,CAAC,EAAE,CAClG;AAAE1P,YAAAA,CAAC,EAAE,KAAL;AAAY8I,YAAAA,GAAG,EAAE,mBAAjB;AAAsC5B,YAAAA,KAAK,EAAE;AAAEyI,cAAAA,MAAM,EAAE;AAAV,aAA7C;AAAqEpR,YAAAA,IAAI,EAAE8Q;AAA3E,WADkG;AADjF,SAAP,CAAd;AAKAN,QAAAA,QAAQ,CAACjJ,IAAT,CAAc,EAAd,EAAkB8J,MAAlB,CAAyBL,OAAzB;;AACA,YAAIX,KAAJ,EAAW;AACT,gBAAMA,KAAN;AACD;AACF;AACF;;;kCAEaiB,O,EAASvO,I,EAAMH,K,EAAO;AAClCnB,sBAAE8P,GAAF,CAAMD,OAAN,EAAevO,IAAf,EAAqBH,KAArB;;AACA,WAAK4O,UAAL;AACD;;;yBAEIC,K,EAAO7F,I,EAAM8F,K,EAAOrJ,I,EAAM;AAC7B,WAAKkI,OAAL,GAAe3E,IAAf;AACA,WAAKrD,YAAL,GAAoBqD,IAAI,CAACH,IAAL,CAAU,gBAAV,CAApB;AACA,WAAKkG,YAAL,GAAoBlQ,gBAAEmQ,QAAF,CAAW,KAAKvP,IAAL,CAAUL,IAAV,CAAe,IAAf,CAAX,EAAiC,IAAjC,CAApB;AACD;;;;EA9qBqC6P,qB;;;AAirBxCxQ,kBAAkB,CAACyQ,SAAnB,CAA6BN,UAA7B,GAA0C/P,gBAAEmQ,QAAF,CAAW,YAAW;AAC9D,MAAI,KAAKjQ,KAAL,CAAWlB,mBAAf,EAAoC;AAClC,SAAKsR,aAAL,CAAmBxC,KAAnB,CAAyB,IAAzB,EAA+ByC,SAA/B;AACD;AACF,CAJyC,EAIvC,GAJuC,CAA1C;AAMA3Q,kBAAkB,CAAC4Q,WAAnB,GAAiC,sBAAjC","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { getValueFormats } from './format-values';\nimport _ from 'lodash';\nimport * as JS from './external/YourJS.min';\nimport {\n  toCSV,\n  parseRegExp,\n  pseudoCssToJSON,\n  getCellValue,\n  getHtmlText\n} from './helper-functions';\nimport './external/datatables/js/jquery.dataTables.min';\nimport './external/datatables/js/dataTables.fixedHeader.min';\nimport './external/datatables/css/jquery.dataTables.min.css!';\nimport './external/datatables/css/fixedHeader.dataTables.min.css!';\n\nconst RGX_SIMPLE_NUMBER = /^\\d+(\\.\\d+)?$/;\n\nconst DEFAULT_PSEUDO_CSS = `\n.theme-dark & {\n  color: white;\n}\ntable.dataTable tbody tr {\n  &:hover td {\n    background-image: linear-gradient(0deg, rgba(128,128,128,0.1), rgba(128,128,128,0.1));\n  }\n  &, &.even, &.odd {\n    background-color: transparent;\n    td {\n      border-color: transparent;\n    }\n  }\n  &.odd {\n    background-color: rgba(128,128,128,0.3);\n  }\n  &.even {\n    background-color: rgba(128,128,128,0.15);\n  }\n}\n`;\n\nconst UNIT_FORMATS = getValueFormats();\n\nconst TOOLTIP_PLACEMENTS = [\n  { \"id\": \"TOP\", \"text\": \"Top\" },\n  { \"id\": \"LEFT\", \"text\": \"Left\" },\n  { \"id\": \"RIGHT\", \"text\": \"Right\" },\n  { \"id\": \"BOTTOM\", \"text\": \"Bottom\" }\n];\n\nconst CONTENT_RULE_TYPES = [\n  { id: 'FILTER', text: 'Filter by exact value or RegExp' },\n  { id: 'RANGE', text: \"Match a range of values\" },\n  { id: 'NULL', text: \"Is NULL\" }\n];\n\nconst CONTENT_RULE_CLASS_LEVELS = [\n  { id: 'CELL', text: \"Only the cell\" },\n  { id: 'ROW', text: 'Entire row' }\n];\n\nconst CONTENT_RULE_MAX_VALUE_OPS = [\n  { id: '', text: '' },\n  { id: '>=', text: '\\u2265 (greater than or equal to)' },\n  { id: '>', text: '> (greater than)' }\n];\n\nconst CONTENT_RULE_MIN_VALUE_OPS = [\n  { id: '', text: '' },\n  { id: '<', text: '< (less than)' },\n  { id: '<=', text: '\\u2264 (less than or equal to)' }\n];\n\nconst CONTENT_RULE_EXACT_NUM_OPS = [\n  { id: '==', text: '= (equals)' },\n  { id: '!=', text: \"\\u2260 (doesn't)\" }\n];\n\nconst DEFAULT_PANEL_SETTINGS = {\n  allowLengthChange: true,\n  allowOrdering: true,\n  allowSearching: true,\n  allowRedrawOnModify: true,\n  columnDefs: [],\n  initialPageLength: 25,\n  isFullWidth: true,\n  pageLengths: '10,15,20,25,50,100',\n  pseudoCSS: DEFAULT_PSEUDO_CSS,\n  varCols: {\n    dataRefId: null,\n    mainJoinColumn: null,\n    joinColumn: null,\n    nameColumn: null,\n    valueColumn: null\n  }\n};\n\nexport class DataTablePanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n\n    this.$rootScope = $rootScope;\n\n    // Make sure old versions have this value set to false.\n    if (!_.has(this.panel, 'allowRedrawOnModify')) {\n      this.panel.allowRedrawOnModify = false;\n    }\n\n    _.defaultsDeep(this.panel, DEFAULT_PANEL_SETTINGS);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n    this.events.on('render', this.onPanelSizeChanged.bind(this));\n    this.events.on('view-mode-changed', this.draw.bind(this));\n  }\n\n  drawIfChanged() {\n    if (this.panelJSON !== this.getPanelSettingsJSON()) {\n      this.draw();\n    }\n  }\n\n  getPanelSettingsJSON(spacing) {\n    let panel = this.panel;\n    return JSON.stringify(\n      panel,\n      function (key, value) {\n        return (this != panel || _.has(DEFAULT_PANEL_SETTINGS, key))\n          ? value\n          : undefined;\n      },\n      spacing\n    );\n  }\n\n  onPanelSizeChanged() {\n    this.fixDataTableSize();\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/copperhill-datatables-panel/partials/';\n    this.addEditorTab('Table View', `${path}refresh-view.html`, 1);\n    this.addEditorTab('Variable Columns', `${path}var-cols.html`, 2);\n    this.addEditorTab('Editor', `${path}editor.html`, 3);\n    this.addEditorTab('Column Definitions', `${path}column-defs.html`, 4);\n    this.addEditorTab('Styles', `${path}styles.html`, 5);\n    this.addEditorTab('Table View', `${path}refresh-view.html`, 6);\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({ text: 'Export CSV', click: 'ctrl.exportCSV()' });\n  }\n\n  onDataError() {\n    this.draw();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      dataList.forEach(data => data.isReal = true);\n      this.dataList = dataList;\n      this.updateDataListOptions();\n    }\n    else {\n      let EXTRA_COLS = 2;\n      this.dataList = [\n        {\n          columns: [{ text: \"X\" }, { text: \"X * X\" }, { text: \"X + X\" }].concat(_.range(EXTRA_COLS).map(y => ({ text: `${y} / Math.random()` }))),\n          rows: _.range(150).map(x => [x, x * x, x + x].concat(_.range(EXTRA_COLS).map(y => y / Math.random()))),\n          isReal: false,\n          type: 'table'\n        }\n      ];\n    }\n\n    this.draw();\n  }\n\n  getConstByName(name) {\n    if (/^[A-Z_][A-Z_0-9]*$/.test(name)) {\n     return eval(name);\n    }\n  }\n\n  addColumnDef() {\n    this.panel.columnDefs.push({\n      filter: '/[^]*/',\n      display: '${value}',\n      displayIsHTML: false,\n      url: '',\n      openNewWindow: true,\n      width: '',\n      classNames: '',\n      isVisible: true,\n      isOrderable: true,\n      isSearchable: true,\n      contentRules: []\n    });\n  }\n\n  removeColumnDef(columnDef) {\n    let columnDefs = this.panel.columnDefs;\n    columnDefs.splice(columnDefs.indexOf(columnDef), 1);\n  }\n\n  addColumnContentRule(columnDef) {\n    columnDef.contentRules.push({\n      type: CONTENT_RULE_TYPES[0].id,\n      classNames: '',\n      classLevel: CONTENT_RULE_CLASS_LEVELS[0].id,\n      filter: '',\n      negateCriteria: false,\n      display: '${value}',\n      displayIsHTML: false,\n      unitFormat: 'none',\n      unitFormatDecimals: 0,\n      unitFormatString: '',\n      minValue: null,\n      maxValue: null,\n      minValueOp: null,\n      maxValueOp: null,\n      url: '',\n      openNewWindow: true,\n      tooltip: {\n        isVisible: false,\n        display: '',\n        placement: TOOLTIP_PLACEMENTS[0].id\n      }\n    });\n  }\n\n  removeColumnContentRule(contentRule, columnDef) {\n    let contentRules = columnDef.contentRules;\n    contentRules.splice(contentRules.indexOf(contentRule), 1);\n  }\n\n  updateDataListOptions() {\n    this.dataListOptions = [{}].concat(this.dataList).map((x, i) => ({\n      id: i ? x.refId : null,\n      text: i ? x.refId : '--- NONE ---'\n    }));\n  }\n\n  getPageLengthOptions() {\n    return this.panel.pageLengths\n        .replace(/\\s+/g, '')\n        .split(',')\n        .reduce(\n          (arr, x) => {\n            if (+x === parseInt(x, 10) && +x >= -1) {\n              x = x == -1 ? Infinity : +x;\n              arr.push({ value: x, text: x === Infinity ? 'All' : x });\n            }\n            return arr;\n          },\n          []\n        );\n  }\n\n  exportCSV() {\n    let data = this.getData();\n    let { rows, columns, headers } = data;\n    this.processRows(rows, columns, headers, this.getVarsByName());\n\n    JS.dom({\n      _: 'a',\n      href: 'data:text/csv;charset=utf-8,' + encodeURIComponent(\n        toCSV(\n          rows.map(row => row.reduce((carry, cell) => {\n            if (cell.visible) {\n              carry.push(getHtmlText(cell.html));\n            }\n            return carry;\n          }, [])),\n          {\n            headers: columns.reduce((carry, col) => {\n              if (col.visible) {\n                carry.push(getHtmlText(col.html));\n              }\n              return carry;\n            }, [])\n          }\n        )\n      ),\n      download: this.panel.title + JS.formatDate(new Date, \" (YYYY-MM-DD 'at' H.mm.ss).'csv'\")\n    }).click();\n  }\n\n  getVarsByName() {\n    return this.templateSrv.variables.reduce(\n      (carry, variable) => {\n        // At times current.value is a string and at times it is an array.\n        let varValues = JS.toArray(variable.current.value);\n        let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n        carry[variable.name] = isAll ? [variable.current.text] : varValues;\n        return carry;\n      },\n      {}\n    );\n  }\n\n  drawDataTable(data) {\n    let ctrl = this;\n    let panel = ctrl.panel;\n    let jElem = ctrl.panelElement;\n    let height = jElem.height();\n    let columns = data.columns;\n    let rows = data.rows;\n    let varsByName = ctrl.getVarsByName();\n    let domTable = { _: 'table', style: {} };\n    if (panel.isFullWidth) {\n      domTable.style.width = '100%';\n    }\n\n    let table = JS.dom(domTable);\n    let jTable = jQuery(table).appendTo(jElem.html(''));\n    let headers = data.headers;\n    let dataTableOpts = {\n      columns: columns.map((column, colIndex) => {\n        let result = {\n          title: getHtmlText(column.html),\n          visible: column.visible\n        };\n\n        let colDef = column.colDef;\n        if (colDef && column.visible) {\n          if (colDef.width) {\n            result.width = colDef.width;\n          }\n          if (colDef.classNames) {\n            result.className = colDef.classNames;\n          }\n          result.orderable = colDef.isOrderable;\n          result.searchable = colDef.isSearchable;\n        }\n\n        return result;\n      }),\n      headerCallback(tr) {\n        let thIndex = 0;\n        columns.forEach(col => {\n          if (col.visible) {\n            let jTH = jQuery('>th', tr).eq(thIndex++).html(col.html);\n          }\n        });\n      },\n      data: rows,\n      rowCallback(tr, rowData, pageDisplayIndex, displayIndex, rowIndex) {\n        if (!rowData.isProcessed) {\n          ctrl.processRows([rowData], columns, headers, varsByName);\n        }\n        for (let cell, cellValue, tdIndex = 0, cellCount = rowData.length, colIndex = 0; colIndex < cellCount; colIndex++) {\n          cell = rowData[colIndex];\n\n          if (cell.visible) {\n            let jTD = jQuery('> td', tr).eq(tdIndex++);\n            if (cell.cls && cell.cls.level === 'CELL') {\n              jTD.addClass(cell.cls.names);\n            }\n            let colDef = columns[colIndex].columnDef;\n            if (colDef && colDef.classNames) {\n              jTD.addClass(colDef.classNames);\n            }\n            let html = cell.html;\n            if (cell.tooltip) {\n              html = `<div data-tooltip data-original-title=\"${_.escape(cell.tooltip.display)}\" data-placement=\"${cell.tooltip.placement}\" class=\"d-inline-block\">${html}</div>`;\n            }\n            jTD.html(html);\n          }\n          if (cell.cls && cell.cls.level === 'ROW') {\n            jQuery(tr).addClass(cell.cls.names);\n          }\n        }\n      },\n      scrollY: height,\n      scrollX: true,\n      scrollCollapse: true,\n      ordering: panel.allowOrdering,\n      searching: panel.allowSearching,\n      lengthChange: panel.allowLengthChange,\n      lengthMenu: ctrl.getPageLengthOptions().reduce(\n        (arr, opt) => [\n          arr[0].concat([opt.value === Infinity ? -1 : opt.value]),\n          arr[1].concat([opt.value === Infinity ? 'All' : opt.value])\n        ],\n        [[], []]\n      ),\n      pageLength: panel.initialPageLength,\n      order: []\n    };\n    let dataTable = jTable.DataTable(dataTableOpts);\n\n    // Horizontally center tables that are not full page width.\n    jElem.find('.dataTables_scrollHeadInner').css('margin', '0 auto');\n\n    // Resize the scroll body of the table.\n    ctrl.fixDataTableSize();\n\n    // Remove the old class names from the wrapper element and add a new\n    // targeted stylesheet.\n    jElem.each((i, elem) => {\n      elem.className = elem.className.replace(/\\b_\\d+\\b/g, ' ').replace(/\\s+/g, ' ').trim();\n      elem.appendChild(JS.css(JSON.parse(pseudoCssToJSON(panel.pseudoCSS)), elem));\n    });\n  }\n\n  processRows(rows, columns, headers, varsByName) {\n    let ctrl = this;\n\n    for (let row, rowCount = rows.length, rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n      row = rows[rowIndex];\n      if (!row.isProcessed) {\n        for (let cell, cellValue, tdIndex = 0, cellCount = row.length, colIndex = 0; colIndex < cellCount; colIndex++) {\n          let ruleApplied;\n          let column = columns[colIndex];\n          let colDef = column.colDef;\n\n          cellValue = row[colIndex];\n\n          cell = {\n            html: cellValue,\n            visible: column.visible,\n            valueOf() { return cellValue; },\n            toString() { return cellValue; }\n          };\n\n          if (colDef) {\n            let rules = colDef.contentRules;\n            let cellsByColName = {};\n            for (let ci = row.length; ci--;) {\n              cellsByColName[headers[ci]] = row[ci];\n            }\n\n            for (let rule, ruleCount = rules.length, ruleIndex = 0; ruleIndex < ruleCount; ruleIndex++) {\n              rule = rules[ruleIndex];\n              let isMatch = true;\n              let type = rule.type;\n              let colDefContentRuleFilter = column.colDefContentRuleFilters[ruleIndex];\n              let gcvOptions = {\n                cell: cell.html,\n                cellsByColName,\n                joinValues: row.joinValues,\n                colIndex,\n                ruleType: rule.type,\n                rgx: colDefContentRuleFilter,\n                ctrl,\n                varsByName,\n                unitFormat: rule.unitFormat,\n                unitFormatString: rule.unitFormatString,\n                unitFormatDecimals: rule.unitFormatDecimals\n              };\n              if (type === 'FILTER') {\n                isMatch = colDefContentRuleFilter.test(cell.html);\n              }\n              else if (type === 'RANGE') {\n                let minValue = rule.minValue;\n                let minIsNum = RGX_SIMPLE_NUMBER.test(minValue);\n                let maxValue = rule.maxValue;\n                let maxIsNum = RGX_SIMPLE_NUMBER.test(maxValue);\n                if (minIsNum) {\n                  minValue = +minValue;\n                }\n                if (maxIsNum) {\n                  maxValue = +maxValue;\n                }\n\n                if (minIsNum || maxIsNum) {\n                  cellValue = +cellValue;\n                }\n\n                let minValueOp = rule.minValueOp;\n                if (minValueOp) {\n                  isMatch = isMatch && (minValueOp === '<=' ? minValue <= cellValue : (minValue < cellValue));\n                }\n                let maxValueOp = rule.maxValueOp;\n                if (maxValueOp) {\n                  isMatch = isMatch && (maxValueOp === '>=' ? maxValue >= cellValue : (maxValue > cellValue));\n                }\n              }\n              else {\n                isMatch = cell.html == null;\n              }\n\n              isMatch = isMatch !== rule.negateCriteria;\n\n              // If this is a match apply the class(es)\n              if (isMatch) {\n                if (rule.classNames) {\n                  cell.cls = {\n                    names: getCellValue(rule.classNames, false, gcvOptions),\n                    level: rule.classLevel\n                  };\n                }\n\n                // Set the display\n                let displayHTML = getCellValue(rule.display, false, gcvOptions);\n                if (!rule.displayIsHTML) {\n                  displayHTML = _.escape(displayHTML);\n                }\n                if (rule.url) {\n                  let url = _.escape(getCellValue(rule.url, true, gcvOptions));\n                  let target = rule.openNewWindow ? '_blank' : '';\n                  let tooltipHTML = '';\n                  if (rule.tooltip.isVisible) {\n                    cell.tooltip = {\n                      display: getCellValue(rule.tooltip.display, false, gcvOptions),\n                      placement: rule.tooltip.placement.toLowerCase()\n                    };\n                  }\n                  displayHTML = `<a href=\"${url}\" target=\"${target}\">${displayHTML}</a>`;\n                }\n                cell.html = displayHTML;\n                ruleApplied = rule;\n\n                break; // Break out of rules loop\n              }\n            } // End of rules for-loop\n          } // End if (colDef) {...}\n\n          if (!ruleApplied) {\n            cell.html = _.escape(cell.html);\n          }\n\n          row[colIndex] = cell;\n        } // End of row for-loop\n      } // End if (!row.isProcessed) {...}\n      row.isProcessed = true;\n    } // End of rows for-loop\n  }\n\n  getVarColColumns() {\n    let data = this.getVarColsData();\n    return data ? data.columns : [];\n  }\n\n  getVarColsData() {\n    let varCols = this.panel.varCols;\n    let dataRefId = varCols && varCols.dataRefId;\n    let dataList = this.dataList;\n    return dataList && dataList.find(({ refId }) => refId === dataRefId);\n  }\n\n  putVarColsIn(data) {\n    let varCols = this.panel.varCols;\n    let columns = data.columns;\n    let rows = data.rows.slice();\n\n    const MAIN_COL_COUNT = columns.length;\n    const MAIN_ROW_COUNT = rows.length;\n\n    if (varCols) {\n      let vcData = this.getVarColsData();\n      if (vcData) {\n        let vcHeaders = vcData.columns.map(col => col.text);\n        let mainJoinColIndex = columns.findIndex(c => c.text === varCols.mainJoinColumn);\n        let joinColIndex = vcHeaders.indexOf(varCols.joinColumn);\n        let nameColIndex = vcHeaders.indexOf(varCols.nameColumn);\n        let valueColIndex = vcHeaders.indexOf(varCols.valueColumn);\n        if (mainJoinColIndex >= 0 && joinColIndex >= 0 && nameColIndex >= 0 && valueColIndex >= 0) {\n          let mainRowIndex = 0;\n          \n          // Order a sliced version of the main `rows` using the join column.\n          rows.sort((a, b) => a[mainJoinColIndex] < b[mainJoinColIndex] ? -1 : 1);\n\n          // Order a sliced version of the varCols rows using the join column.\n          let vcRowsPrime = vcData.rows;\n          let vcRows = vcRowsPrime.slice().sort((a, b) => a[joinColIndex] < b[joinColIndex] ? -1 : 1);\n\n          // Used later to reorder the new columns by the order they were found\n          // in the data.\n          let vcColIndexPairs = [];\n\n          vcRows\n            // Get a list of all of the new headers while simultaneously adding\n            // the data to the appropriate rows and in the appropriate columns.\n            .reduce((vcAddedHeaders, vcRow) => {\n              let vcHeader = vcRow[nameColIndex];\n              let vcJoinValue = vcRow[joinColIndex];\n              let colIndex = vcAddedHeaders.indexOf(vcHeader);\n              let isNewVCHeader = colIndex < 0;\n\n              // If the new column wasn't found add it.\n              if (isNewVCHeader) {\n                colIndex = vcAddedHeaders.push(vcHeader) - 1;\n              }\n\n              // Since everything is ordered continue in `rows` looking for the\n              // join and if found add the value there while setting the new row's\n              // index as `mainRowIndex`.\n              for (let isChanged, mainRow, i = mainRowIndex; i < MAIN_ROW_COUNT; i++) {\n                mainRow = rows[i];\n                if (vcJoinValue === mainRow[mainJoinColIndex]) {\n                  mainRow[MAIN_COL_COUNT + colIndex] = vcRow[valueColIndex];\n                  (mainRow.joinValues = mainRow.joinValues || [])[MAIN_COL_COUNT + colIndex] = _.zipObject(vcHeaders, vcRow);\n                  mainRowIndex = i;\n                  isChanged = true;\n                }\n                else if (isChanged) {\n                  // NOTE:  Return here to avoid checking `i` outside of loop.\n                  return vcAddedHeaders;\n                }\n              }\n\n              // If new header was added but join was unsuccessful remove the new\n              // header.\n              if (isNewVCHeader) {\n                vcAddedHeaders.pop();\n              }\n\n              return vcAddedHeaders;\n            }, [])\n            // Add the new `columns`.\n            .forEach((vcHeader, vcHeaderIndex) => {\n              vcColIndexPairs.push({\n                first: vcRowsPrime.findIndex(vcRow => vcRow[nameColIndex] === vcHeader),\n                index: vcHeaderIndex + MAIN_COL_COUNT\n              });\n              columns.push({ text: vcHeader });\n            });\n\n          // Used to reorder all of the var-cols\n          vcColIndexPairs.sort((a, b) => a.first - b.first);\n          const SPLICE_ARGS = [MAIN_COL_COUNT, vcColIndexPairs.length];\n\n          // Reorder all of the var-cols\n          columns.splice.apply(\n            columns,\n            SPLICE_ARGS.concat(vcColIndexPairs.map(pair => columns[pair.index]))\n          );\n\n          // Reorder all of the var-col cells in each row.\n          rows.forEach(row => {\n            row.splice.apply(\n              row,\n              SPLICE_ARGS.concat(vcColIndexPairs.map(pair => {\n                pair = row[pair.index];\n                return pair === undefined ? null : pair;\n              }))\n            );\n          });\n        }\n      }\n    }\n  }\n\n  getData() {\n    let ctrl = this;\n    let dataList = ctrl.dataList[0];\n    let columns = dataList.columns.map(col => _.cloneDeep(col));\n    let rows = dataList.rows.map(row => row.slice());\n    let varsByName = ctrl.getVarsByName();\n    let panel = ctrl.panel;\n    let colDefs = panel.columnDefs;\n    let varCols = panel.varCols;\n    let colDefRgxs = colDefs.map(colDef => parseRegExp(colDef.filter));\n    let colDefContentRuleFilters = colDefs.map(\n      colDef => colDef.contentRules.map(\n        rule => rule.type === 'FILTER' ? parseRegExp(rule.filter) : null\n      )\n    );\n\n    // Create the data object to be returned.\n    let data = { columns, rows, type: dataList.type, refId: dataList.refId };\n\n    // Add the variable columns to the data if there are any.\n    this.putVarColsIn(data);\n\n    // Make an array of column headers.\n    let headers = data.headers = columns.map(col => col.text);\n\n    columns.forEach((column, colIndex) => {\n      if ('string' === typeof column) {\n        column = { text: column, visible: true };\n      }\n      else {\n        column.visible = true;\n      }\n\n      colDefRgxs.find((colDefRgx, colDefIndex) => {\n        if (colDefRgx.test(column.text)) {\n          let colDef = colDefs[colDefIndex];\n          let gcvOptions = {\n            cell: column.text,\n            cellsByColName: {},\n            ruleType: 'FILTER',\n            rgx: colDefRgx,\n            ctrl,\n            varsByName,\n            unitFormat: null,\n            unitFormatDecimals: null\n          };\n          column.text = getCellValue(colDef.display, false, gcvOptions);\n\n          let html = colDef.displayIsHTML ? column.text : _.escape(column.text);\n\n          if (colDef.url) {\n            let url = _.escape(getCellValue(colDef.url, true, gcvOptions));\n            let target = colDef.openNewWindow ? '_blank' : '';\n            html = `<a href=\"${url}\" target=\"${target}\" onclick=\"event.stopPropagation()\">${html}</a>`;\n          }\n\n          column.colDef = colDef;\n          column.colDefContentRuleFilters = colDefContentRuleFilters[colDefIndex];\n          column.html = html;\n          column.visible = colDef.isVisible;\n\n          return true;\n        }\n      });\n\n      if (!_.has(column, 'html')) {\n        column.html = _.escape(column.text);\n      }\n\n      columns[colIndex] = column;\n    });\n\n    return data;\n  }\n\n  fixDataTableSize() {\n    let jElem = this.panelElement;\n    let fullHeight = jElem.height();\n    let jWrap = jElem.find('.dataTables_wrapper');\n    if (jWrap.length) {\n      let wrapHeight = jWrap.height();\n      let jScrollBody = jWrap.find('.dataTables_scrollBody');\n      let scrollHeight = jScrollBody.height();\n      let nonScrollHeight = wrapHeight - scrollHeight;\n      jScrollBody.css('max-height', fullHeight - nonScrollHeight);\n    }\n  }\n\n  draw() {\n    let error;\n    let isValid = false;\n    let ctrl = this;\n    let jElem = ctrl.element;\n    let jContent = ctrl.panelElement.css('position', 'relative').html('');\n    let elemContent = jContent[0];\n    let data = ctrl.getData();\n\n    ctrl.pageLengthOptions = ctrl.getPageLengthOptions();\n\n    if (data && data.rows.length) {\n      if (data.type === 'table') {\n        try {\n          ctrl.drawDataTable(data);\n          ctrl.panelJSON = this.getPanelSettingsJSON();\n          jElem.tooltip({ selector: '[data-tooltip]' });\n          isValid = true;\n        }\n        catch (err) {\n          error = err;\n        }\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n      if (error) {\n        throw error;\n      }\n    }\n  }\n\n  setPanelValue(rootVar, path, value) {\n    _.set(rootVar, path, value);\n    this.autoRedraw();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.element = elem;\n    this.panelElement = elem.find('.panel-content');\n    this.throttleDraw = _.debounce(this.draw.bind(this), 1000);\n  }\n}\n\nDataTablePanelCtrl.prototype.autoRedraw = _.debounce(function() {\n  if (this.panel.allowRedrawOnModify) {\n    this.drawIfChanged.apply(this, arguments);\n  }\n}, 500);\n\nDataTablePanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}