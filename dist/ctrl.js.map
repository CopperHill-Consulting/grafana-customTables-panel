{"version":3,"sources":["../src/ctrl.js"],"names":["PARTIALS_BASE_PATH","RGX_SIMPLE_NUMBER","DEFAULT_PSEUDO_CSS","UNIT_FORMATS","TOOLTIP_PLACEMENTS","CONTENT_RULE_TYPES","id","text","CONTENT_RULE_CLASS_LEVELS","TZ_OFFSET_TYPES","CONTENT_RULE_MAX_VALUE_OPS","CONTENT_RULE_MIN_VALUE_OPS","CONTENT_RULE_EXACT_NUM_OPS","DEFAULT_PANEL_SETTINGS","allowLengthChange","allowOrdering","allowSearching","allowFiltering","allowRedrawOnModify","allowPaging","columnDefs","initialPageLength","isFullWidth","pageLengths","pseudoCSS","varCols","dataRefId","mainJoinColumn","joinColumn","nameColumn","valueColumn","DataTablePanelCtrl","$scope","$injector","$rootScope","_","has","panel","defaultsDeep","events","on","onInitEditMode","bind","onDataReceived","onDataError","onInitPanelActions","onPanelSizeChanged","draw","onDataTablePanelTeardown","$","fn","dataTable","ext","search","push","filterDataTable","settings","data","rowIndex","originalData","arguments","length","isProcessed","columns","every","column","columnIndex","filter","colDef","visible","isSearchable","ignore","test","value","panelJSON","getPanelSettingsJSON","spacing","JSON","stringify","key","undefined","i","splice","fixDataTableSize","addEditorTab","actions","icon","click","dataList","forEach","isReal","rows","cells","cell","cellIndex","Date","updateDataListOptions","EXTRA_COLS","concat","range","map","y","x","Math","random","type","name","eval","display","displayIsHTML","url","openNewWindow","width","classNames","isVisible","isOrderable","contentRules","columnDef","offset","colDefIndex","indexOf","newColDefIndex","classLevel","negateCriteria","unitFormat","unitFormatDecimals","unitFormatString","tzOffsetType","tzOffset","minValue","maxValue","minValueOp","maxValueOp","tooltip","placement","contentRule","dataListOptions","refId","replace","split","reduce","arr","parseInt","Infinity","FILE_NAME_PATTERN","ctrl","publishAppEvent","src","scope","extend","$new","fileNamePattern","fileNamePatternPlaceholder","EXPORT_TYPES","exportType","getFileName","download","exportCSV","exportJSON","delimiter","modalClass","getData","buttons","exportData","header","body","HEADER_TEXTS","c","html","processRows","getVarsByName","row","objRow","blob","Blob","headers","saveAs","opt_options","Object","csvText","carry","col","toLowerCase","mimeType","pattern","title","match","replaceWithTitle","JS","formatDate","templateSrv","variables","variable","varValues","toArray","current","isAll","includeAll","jElem","panelElement","height","varsByName","domTable","style","table","dom","jTable","jQuery","appendTo","dataTableOpts","colIndex","result","className","orderable","searchable","headerCallback","tr","thIndex","jTH","eq","showFilterModal","e","stopPropagation","ID_SUFFIX","filterCopy","cloneDeep","minDate","maxDate","columnDataType","colDataType","resetFilter","dismiss","saveFilter","scopeFilter","minNum","maxNum","includeMin","includeMax","includeTrue","includeFalse","trim","matchTerms","matchWordStart","includeNull","negate","includes","get","prepend","cls","onclick","rowCallback","rowData","pageDisplayIndex","displayIndex","cellValue","tdIndex","cellCount","jTD","level","addClass","names","escape","scrollY","scrollX","deferRender","paging","scrollCollapse","ordering","searching","lengthChange","lengthMenu","getPageLengthOptions","opt","pageLength","order","DataTable","find","css","each","elem","appendChild","parse","rowCount","ruleApplied","valueOf","toString","rules","cellsByColName","ci","rule","ruleCount","ruleIndex","isMatch","colDefContentRuleFilter","colDefContentRuleFilters","gcvOptions","joinValues","rgx","minIsNum","maxIsNum","displayHTML","target","tooltipHTML","getVarColsData","slice","MAIN_COL_COUNT","MAIN_ROW_COUNT","vcData","vcHeaders","mainJoinColIndex","findIndex","joinColIndex","nameColIndex","valueColIndex","mainRowIndex","sort","a","b","vcRowsPrime","vcRows","vcColIndexPairs","vcAddedHeaders","vcRow","vcHeader","vcJoinValue","isNewVCHeader","isChanged","mainRow","zipObject","pop","vcHeaderIndex","first","index","SPLICE_ARGS","apply","pair","colDefs","colDefRgxs","putVarColsIn","colDefRgx","dataType","nativeType","min","max","opt_onlyFixHeight","fullHeight","jWrap","wrapHeight","jScrollBody","scrollHeight","nonScrollHeight","error","isValid","element","jContent","elemContent","pageLengthOptions","drawDataTable","selector","err","msg","message","elemMsg","alignItems","textAlign","margin","append","rootVar","path","set","autoRedraw","attrs","throttleDraw","debounce","MetricsPanelCtrl","prototype","drawIfChanged","templateUrl"],"mappings":"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","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { getValueFormats } from './format-values';\nimport _ from 'lodash';\nimport * as JS from './external/YourJS.min';\nimport * as saveAs from './external/FileSaver.min.js';\nimport {\n  toCSV,\n  parseRegExp,\n  pseudoCssToJSON,\n  getCellValue,\n  getHtmlText,\n  term,\n  parseLocalDate,\n  parseOptionalNumber\n} from './helper-functions';\nimport './external/datatables/js/jquery.dataTables.min';\nimport './external/datatables/js/dataTables.fixedHeader.min';\nimport './external/datatables/js/dataTables.buttons.min';\nimport './external/datatables/css/jquery.dataTables.min.css!';\nimport './external/datatables/css/fixedHeader.dataTables.min.css!'\nimport './external/datatables/css/buttons.dataTables.min.css!';\n\nconst PARTIALS_BASE_PATH = 'public/plugins/copperhill-datatables-panel/partials/';\n\nconst RGX_SIMPLE_NUMBER = /^\\d+(\\.\\d+)?$/;\n\nconst DEFAULT_PSEUDO_CSS = `\n.theme-dark & {\n  color: white;\n  \n  .dataTables_filter input[type=search] {\n    border: 1px solid #262628;\n  }\n}\n.dataTables_filter input[type=search] {\n  border: 1px solid #dde4ed;\n  height: 35px;\n  line-height: 35px;\n  border-radius: 5px;\n  padding: 0 8px;\n}\ntable.dataTable tbody tr {\n  &:hover td {\n    background-image: linear-gradient(0deg, rgba(128,128,128,0.1), rgba(128,128,128,0.1));\n  }\n  &, &.even, &.odd {\n    background-color: transparent;\n    td {\n      border-color: transparent;\n    }\n  }\n  &.odd {\n    background-color: rgba(128,128,128,0.3);\n  }\n  &.even {\n    background-color: rgba(128,128,128,0.15);\n  }\n}\n`;\n\nconst UNIT_FORMATS = getValueFormats();\n\nconst TOOLTIP_PLACEMENTS = [\n  { \"id\": \"TOP\", \"text\": \"Top\" },\n  { \"id\": \"LEFT\", \"text\": \"Left\" },\n  { \"id\": \"RIGHT\", \"text\": \"Right\" },\n  { \"id\": \"BOTTOM\", \"text\": \"Bottom\" }\n];\n\nconst CONTENT_RULE_TYPES = [\n  { id: 'FILTER', text: 'Filter by exact value or RegExp' },\n  { id: 'RANGE', text: \"Match a range of values\" },\n  { id: 'NULL', text: \"Is NULL\" }\n];\n\nconst CONTENT_RULE_CLASS_LEVELS = [\n  { id: 'CELL', text: \"Only the cell\" },\n  { id: 'ROW', text: 'Entire row' }\n];\n\nconst TZ_OFFSET_TYPES = [\n  { id: null, text: 'Default' },\n  { id: 'NO-TIMEZONE', text: 'Local Timezone' },\n  { id: 'TIMEZONE', text: 'Specify Minute Offset' }\n];\n\nconst CONTENT_RULE_MAX_VALUE_OPS = [\n  { id: '', text: '' },\n  { id: '>=', text: 'value \\u2265 cell (greater than or equal to)' },\n  { id: '>', text: 'value > cell (greater than)' }\n];\n\nconst CONTENT_RULE_MIN_VALUE_OPS = [\n  { id: '', text: '' },\n  { id: '<', text: 'value < cell (less than)' },\n  { id: '<=', text: 'value \\u2264 cell (less than or equal to)' }\n];\n\nconst CONTENT_RULE_EXACT_NUM_OPS = [\n  { id: '==', text: '= (equals)' },\n  { id: '!=', text: \"\\u2260 (doesn't)\" }\n];\n\nconst DEFAULT_PANEL_SETTINGS = {\n  allowLengthChange: true,\n  allowOrdering: true,\n  allowSearching: true,\n  allowFiltering: false,\n  allowRedrawOnModify: true,\n  allowPaging: true,\n  columnDefs: [],\n  initialPageLength: 25,\n  isFullWidth: true,\n  pageLengths: '10,15,20,25,50,100',\n  pseudoCSS: DEFAULT_PSEUDO_CSS,\n  varCols: {\n    dataRefId: null,\n    mainJoinColumn: null,\n    joinColumn: null,\n    nameColumn: null,\n    valueColumn: null\n  }\n};\n\nexport class DataTablePanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n\n    this.$rootScope = $rootScope;\n\n    // Make sure old versions have this value set to false.\n    if (!_.has(this.panel, 'allowRedrawOnModify')) {\n      this.panel.allowRedrawOnModify = false;\n    }\n\n    _.defaultsDeep(this.panel, DEFAULT_PANEL_SETTINGS);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n    this.events.on('render', this.onPanelSizeChanged.bind(this));\n    this.events.on('view-mode-changed', this.draw.bind(this));\n    this.events.on('panel-teardown', this.onDataTablePanelTeardown.bind(this));\n\n    $.fn.dataTable.ext.search.push(this.filterDataTable.bind(this));\n  }\n\n  filterDataTable(settings, data, rowIndex, originalData) {\n    return arguments.length === 0\n      ? this\n      : this.panel.allowFiltering\n        ? originalData.isProcessed\n          ? this.columns.every(function (column, columnIndex) {\n            let { filter } = column;\n            return !column.colDef\n              || !column.visible\n              || !column.colDef.isSearchable\n              || !filter\n              || filter.ignore\n              || filter.test(originalData[columnIndex].value);\n          })\n          : this.columns.every(function (column, columnIndex) {\n            let {filter} = column;\n            return !column.colDef\n              || !column.visible\n              || !column.colDef.isSearchable\n              || !filter\n              || filter.ignore\n              || filter.test(originalData[columnIndex]);\n          })\n        : true;\n  }\n\n  drawIfChanged() {\n    if (this.panelJSON !== this.getPanelSettingsJSON()) {\n      this.draw();\n    }\n  }\n\n  getPanelSettingsJSON(spacing) {\n    let panel = this.panel;\n    return JSON.stringify(\n      panel,\n      function (key, value) {\n        return (this != panel || _.has(DEFAULT_PANEL_SETTINGS, key))\n          ? value\n          : undefined;\n      },\n      spacing\n    );\n  }\n\n  onDataTablePanelTeardown() {\n    let {search} = $.fn.dataTable.ext;\n    for (var i = search.length; i--; ) {\n      if (search() === this) {\n        search.splice(i, 1);\n      }\n    }\n  }\n\n  onPanelSizeChanged() {\n    this.fixDataTableSize();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Table View', `${PARTIALS_BASE_PATH}refresh-view.html`, 1);\n    this.addEditorTab('Variable Columns', `${PARTIALS_BASE_PATH}var-cols.html`, 2);\n    this.addEditorTab('Editor', `${PARTIALS_BASE_PATH}editor.html`, 3);\n    this.addEditorTab('Column Definitions', `${PARTIALS_BASE_PATH}column-defs.html`, 4);\n    this.addEditorTab('Styles', `${PARTIALS_BASE_PATH}styles.html`, 5);\n    this.addEditorTab('Table View', `${PARTIALS_BASE_PATH}refresh-view.html`, 6);\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({\n      icon: 'fa fa-download',\n      text: 'Download As\\u2026',\n      click: 'ctrl.showDownloadModal()'\n    });\n  }\n\n  onDataError() {\n    this.draw();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      dataList.forEach(data => {\n        data.isReal = true;\n        data.rows.forEach(cells => {\n          cells.forEach((cell, cellIndex) => {\n            cells[cellIndex] = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\dZ$/.test(cell)\n              ? new Date(cell)\n              : cell;\n          });\n        });\n      });\n      this.dataList = dataList;\n      this.updateDataListOptions();\n    }\n    else {\n      let EXTRA_COLS = 2;\n      this.dataList = [\n        {\n          columns: [{ text: \"X\" }, { text: \"X * X\" }, { text: \"X + X\" }].concat(_.range(EXTRA_COLS).map(y => ({ text: `${y} / Math.random()` }))),\n          rows: _.range(150).map(x => [x, x * x, x + x].concat(_.range(EXTRA_COLS).map(y => y / Math.random()))),\n          isReal: false,\n          type: 'table'\n        }\n      ];\n    }\n\n    this.draw();\n  }\n\n  getConstByName(name) {\n    if (/^[A-Z_][A-Z_0-9]*$/.test(name)) {\n     return eval(name);\n    }\n  }\n\n  addColumnDef() {\n    this.panel.columnDefs.push({\n      filter: '/[^]*/',\n      display: '${value}',\n      displayIsHTML: false,\n      url: '',\n      openNewWindow: true,\n      width: '',\n      classNames: '',\n      isVisible: true,\n      isOrderable: true,\n      isSearchable: true,\n      contentRules: []\n    });\n  }\n\n  moveColumnDef(columnDef, offset) {\n    let columnDefs = this.panel.columnDefs;\n    let colDefIndex = columnDefs.indexOf(columnDef);\n    let newColDefIndex = colDefIndex + offset;\n    if (0 <= newColDefIndex && newColDefIndex < columnDefs.length) {\n      columnDefs.splice(colDefIndex, 1);\n      columnDefs.splice(newColDefIndex, 0, columnDef);\n    }\n  }\n\n  removeColumnDef(columnDef) {\n    let columnDefs = this.panel.columnDefs;\n    columnDefs.splice(columnDefs.indexOf(columnDef), 1);\n  }\n\n  addColumnContentRule(columnDef) {\n    columnDef.contentRules.push({\n      type: CONTENT_RULE_TYPES[0].id,\n      classNames: '',\n      classLevel: CONTENT_RULE_CLASS_LEVELS[0].id,\n      filter: '',\n      negateCriteria: false,\n      display: '${value}',\n      displayIsHTML: false,\n      unitFormat: 'none',\n      unitFormatDecimals: 0,\n      unitFormatString: '',\n      tzOffsetType: null,\n      tzOffset: 0,\n      minValue: null,\n      maxValue: null,\n      minValueOp: null,\n      maxValueOp: null,\n      url: '',\n      openNewWindow: true,\n      tooltip: {\n        isVisible: false,\n        display: '',\n        placement: TOOLTIP_PLACEMENTS[0].id\n      }\n    });\n  }\n\n  removeColumnContentRule(contentRule, columnDef) {\n    let contentRules = columnDef.contentRules;\n    contentRules.splice(contentRules.indexOf(contentRule), 1);\n  }\n\n  updateDataListOptions() {\n    this.dataListOptions = [{}].concat(this.dataList).map((x, i) => ({\n      id: i ? x.refId : null,\n      text: i ? x.refId : '--- NONE ---'\n    }));\n  }\n\n  getPageLengthOptions() {\n    return this.panel.pageLengths\n        .replace(/\\s+/g, '')\n        .split(',')\n        .reduce(\n          (arr, x) => {\n            if (+x === parseInt(x, 10) && +x >= -1) {\n              x = x == -1 ? Infinity : +x;\n              arr.push({ value: x, text: x === Infinity ? 'All' : x });\n            }\n            return arr;\n          },\n          []\n    );\n  }\n\n  showDownloadModal() {\n    const FILE_NAME_PATTERN = \"<TITLE> (YYYY-MM-DD 'at' H.mm.ss)\";\n    let ctrl = this;\n    ctrl.publishAppEvent('show-modal', {\n      src: `${PARTIALS_BASE_PATH}modal-export.html`,\n      scope: _.extend(\n        ctrl.$scope.$new(true),\n        {\n          fileNamePattern: FILE_NAME_PATTERN,\n          fileNamePatternPlaceholder: FILE_NAME_PATTERN,\n          EXPORT_TYPES: [\n            { value: 'CSV', text: 'CSV (Comma-separated values)' },\n            { value: 'JSON', text: 'JSON (JavaScript Object Notation)' },\n            { value: 'TSV', text: 'TSV (Tab-separated values)' }\n          ],\n          exportType: 'CSV',\n          getFileName() {\n            return ctrl.getFileName(this.fileNamePattern, this.exportType);\n          },\n          download() {\n            if (this.exportType === 'CSV') {\n              ctrl.exportCSV(this.fileNamePattern);\n            }\n            else if (this.exportType === 'JSON') {\n              ctrl.exportJSON(this.fileNamePattern);\n            }\n            else if (this.exportType === 'TSV') {\n              ctrl.exportCSV(this.fileNamePattern, { delimiter: '\\t', ext: 'tsv' });\n            }\n          }\n        }\n      ),\n      modalClass: 'modal-confirm',\n    });\n  }\n\n  exportJSON(fileNamePattern) {\n    let data = this.getData();\n    let { columns } = data;\n    let { header, body } = this.dataTable.buttons.exportData();\n    const HEADER_TEXTS = columns.filter(c => c.visible).map(c => getHtmlText(c.html));\n    this.processRows(body, columns, header, this.getVarsByName());\n    let rows = body.map(row => row.reduce((objRow, cell, cellIndex) => {\n      if (cell.visible) {\n        objRow[HEADER_TEXTS[cellIndex]] = getHtmlText(cell.html);\n      }\n      return objRow;\n    }, {}));\n    let blob = new Blob(\n      [JSON.stringify({ headers: HEADER_TEXTS, rows })],\n      { type: 'application/json;charset=utf-8' }\n    );\n    saveAs(blob, this.getFileName(fileNamePattern, 'json'));\n  }\n\n  exportCSV(fileNamePattern, opt_options) {\n    opt_options = Object(opt_options);\n    \n    let data = this.getData();\n    let { columns } = data;\n    let { header, body: rows } = this.dataTable.buttons.exportData();\n    this.processRows(rows, columns, header, this.getVarsByName());\n\n    let csvText = toCSV(\n      rows.map(row => row.reduce((carry, cell) => {\n        if (cell.visible) {\n          carry.push(getHtmlText(cell.html));\n        }\n        return carry;\n      }, [])),\n      _.extend(\n        {\n          headers: columns.reduce((carry, col) => {\n            if (col.visible) {\n              carry.push(getHtmlText(col.html));\n            }\n            return carry;\n          }, [])\n        },\n        Object(opt_options)\n      )\n    );\n    let ext = (opt_options.ext || 'csv').toLowerCase();\n    let mimeType = 'text/' + (ext === 'tsv' ? 'tab-separated-values' : ext);\n    let blob = new Blob([csvText], { type: `${mimeType};charset=utf-8` });\n    saveAs(blob, this.getFileName(fileNamePattern, ext));\n  }\n\n  getFileName(pattern, ext) {\n    let {title} = this.panel;\n    return pattern.replace(\n      /(<TITLE>)|[^<]+|</g,\n      (match, replaceWithTitle) => replaceWithTitle ? title : JS.formatDate(new Date, match)\n    ) + '.' + ext.toLowerCase();\n  }\n\n  getVarsByName() {\n    return this.templateSrv.variables.reduce(\n      (carry, variable) => {\n        // At times current.value is a string and at times it is an array.\n        let varValues = JS.toArray(variable.current.value);\n        let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n        carry[variable.name] = isAll ? [variable.current.text] : varValues;\n        return carry;\n      },\n      {}\n    );\n  }\n\n  drawDataTable(data) {\n    let ctrl = this;\n    let panel = ctrl.panel;\n    let jElem = ctrl.panelElement;\n    let height = jElem.height();\n    let columns = ctrl.columns = data.columns;\n    let rows = data.rows;\n    let varsByName = ctrl.getVarsByName();\n    let domTable = { _: 'table', style: {} };\n    if (panel.isFullWidth) {\n      domTable.style.width = '100%';\n    }\n\n    let table = JS.dom(domTable);\n    let jTable = jQuery(table).appendTo(jElem.html(''));\n    let headers = data.headers;\n    let dataTableOpts = {\n      columns: columns.map((column, colIndex) => {\n        let result = {\n          title: getHtmlText(column.html),\n          visible: column.visible\n        };\n\n        let colDef = column.colDef;\n        if (colDef && column.visible) {\n          if (colDef.width) {\n            result.width = colDef.width;\n          }\n          if (colDef.classNames) {\n            result.className = colDef.classNames;\n          }\n          result.orderable = colDef.isOrderable;\n          result.searchable = colDef.isSearchable;\n        }\n\n        return result;\n      }),\n      headerCallback(tr) {\n        let thIndex = 0;\n        columns.forEach((col, colIndex) => {\n          if (col.visible) {\n            let jTH = jQuery('>th', tr).eq(thIndex++).html(col.html);\n            if (panel.allowFiltering && (!col.colDef || col.colDef.isSearchable)) {\n              let { filter } = col;\n              let colDataType = _.get(col, 'filter.dataType', 'String');\n\n              function showFilterModal(e) {\n                e && e.stopPropagation();\n\n                const ID_SUFFIX = +new Date;\n\n                let filterCopy = _.extend(\n                  _.cloneDeep(filter),\n                  {\n                    minDate: filter.minDate\n                      && JS.formatDate(filter.minDate, 'YYYY-MM-DD HH:mm:ss'),\n                    maxDate: filter.maxDate\n                      && JS.formatDate(filter.maxDate, 'YYYY-MM-DD HH:mm:ss')\n                  }\n                );\n\n                ctrl.publishAppEvent('show-modal', {\n                  src: `${PARTIALS_BASE_PATH}modal-column-filter.html`,\n                  scope: _.extend(\n                    ctrl.$scope.$new(true),\n                    {\n                      column: _.cloneDeep(col),\n                      columnDataType: colDataType,\n                      ID_SUFFIX,\n                      filter: filterCopy,\n                      resetFilter() {\n                        this.dismiss();\n                        showFilterModal();\n                      },\n                      saveFilter() {\n                        let scopeFilter = this;\n                        let ignore;\n                        if (colDataType === 'Date' || colDataType === 'Number' || colDataType === 'BigInt') {\n                          if (colDataType === 'Date') {\n                            filter.minDate = parseLocalDate(scopeFilter.filter.minDate);\n                            filter.maxDate = parseLocalDate(scopeFilter.filter.maxDate);\n                          }\n                          else {\n                            filter.minNum = parseOptionalNumber(scopeFilter.filter.minNum);\n                            filter.maxNum = parseOptionalNumber(scopeFilter.filter.maxNum);\n                          }\n                          ignore = filter.minNum == undefined && filter.maxNum == undefined\n                            && filter.minDate == undefined && filter.maxDate == undefined;\n                          filter.includeMin = scopeFilter.filter.includeMin;\n                          filter.includeMax = scopeFilter.filter.includeMax;\n                        }\n                        else if (colDataType === 'Boolean') {\n                          filter.includeTrue = scopeFilter.filter.includeTrue;\n                          filter.includeFalse = scopeFilter.filter.includeFalse;\n                          ignore = !filter.includeTrue && !filter.includeFalse;\n                        }\n                        else {\n                          filter.text = scopeFilter.filter.text.trim();\n                          filter.matchTerms = term(filter.text, { matchWordStart: true });\n                          ignore = filter.text == '';\n                        }\n                        filter.includeNull = scopeFilter.filter.includeNull;\n                        filter.negate = scopeFilter.filter.negate;\n                        filter.ignore = ignore && !filter.includeNull;\n                        ctrl.dataTable.draw();\n                        this.dismiss();\n                      },\n                      includes: (arr, value) => arr.includes(value)\n                    }\n                  ),\n                  modalClass: 'modal-confirm',\n                });\n              }\n\n              jTH.prepend(JS.dom({\n                _: 'i',\n                cls: 'fa fa-filter ' + (filter.ignore ? 'off' : 'on'),\n                style: (filter.ignore ? 'opacity:0.25;' : '') + 'margin-right:0.25em;cursor:pointer;',\n                onclick: showFilterModal\n              }));\n            }\n          }\n        });\n      },\n      data: rows,\n      rowCallback(tr, rowData, pageDisplayIndex, displayIndex, rowIndex) {\n        if (!rowData.isProcessed) {\n          ctrl.processRows([rowData], columns, headers, varsByName);\n        }\n        for (let cell, cellValue, tdIndex = 0, cellCount = rowData.length, colIndex = 0; colIndex < cellCount; colIndex++) {\n          cell = rowData[colIndex];\n\n          if (cell.visible) {\n            let jTD = jQuery('> td', tr).eq(tdIndex++);\n            if (cell.cls && cell.cls.level === 'CELL') {\n              jTD.addClass(cell.cls.names);\n            }\n            let colDef = columns[colIndex].columnDef;\n            if (colDef && colDef.classNames) {\n              jTD.addClass(colDef.classNames);\n            }\n            let html = cell.html;\n            if (cell.tooltip) {\n              html = `<div data-tooltip data-original-title=\"${_.escape(cell.tooltip.display)}\" data-placement=\"${cell.tooltip.placement}\" class=\"d-inline-block\">${html}</div>`;\n            }\n            jTD.html(html);\n          }\n          if (cell.cls && cell.cls.level === 'ROW') {\n            jQuery(tr).addClass(cell.cls.names);\n          }\n        }\n      },\n      scrollY: height,\n      scrollX: true,\n      deferRender: true,\n      paging: panel.allowPaging,\n      scrollCollapse: true,\n      ordering: panel.allowOrdering,\n      searching: true, // Visibility is controlled via CSS to allow for custom filtering\n      lengthChange: panel.allowLengthChange,\n      lengthMenu: ctrl.getPageLengthOptions().reduce(\n        (arr, opt) => [\n          arr[0].concat([opt.value === Infinity ? -1 : opt.value]),\n          arr[1].concat([opt.value === Infinity ? 'All' : opt.value])\n        ],\n        [[], []]\n      ),\n      pageLength: panel.initialPageLength,\n      order: []\n    };\n    ctrl.dataTable = jTable.DataTable(dataTableOpts);\n\n    // Horizontally center tables that are not full page width.\n    jElem.find('.dataTables_scrollHeadInner').css('margin', '0 auto');\n\n    // Control visibility here instead in options to allow for custom filtering.\n    if (!panel.allowSearching) {\n      jElem.find('.dataTables_filter').css('display', 'none');\n    }\n\n    // Resize the scroll body of the table.\n    ctrl.fixDataTableSize(true);\n\n    // Remove the old class names from the wrapper element and add a new\n    // targeted stylesheet.\n    jElem.each((i, elem) => {\n      elem.className = elem.className.replace(/\\b_\\d+\\b/g, ' ').replace(/\\s+/g, ' ').trim();\n      elem.appendChild(JS.css(JSON.parse(pseudoCssToJSON(panel.pseudoCSS)), elem));\n    });\n  }\n\n  processRows(rows, columns, headers, varsByName) {\n    let ctrl = this;\n\n    for (let row, rowCount = rows.length, rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n      row = rows[rowIndex];\n      if (!row.isProcessed && (0 in row) && !row[0].isProcessed) {\n        for (let cell, cellValue, tdIndex = 0, cellCount = row.length, colIndex = 0; colIndex < cellCount; colIndex++) {\n          let ruleApplied;\n          let column = columns[colIndex];\n          let colDef = column.colDef;\n\n          cellValue = row[colIndex];\n\n          cell = {\n            html: cellValue,\n            visible: column.visible,\n            value: cellValue,\n            valueOf() { return cellValue; },\n            toString() { return cellValue + ''; },\n            isProcessed: true\n          };\n\n          if (colDef) {\n            let rules = colDef.contentRules;\n            let cellsByColName = {};\n            for (let ci = row.length; ci--;) {\n              cellsByColName[headers[ci]] = row[ci];\n            }\n\n            for (let rule, ruleCount = rules.length, ruleIndex = 0; ruleIndex < ruleCount; ruleIndex++) {\n              rule = rules[ruleIndex];\n              let isMatch = true;\n              let type = rule.type;\n              let colDefContentRuleFilter = column.colDefContentRuleFilters[ruleIndex];\n              let gcvOptions = {\n                cell: cell.html,\n                cellsByColName,\n                joinValues: row.joinValues,\n                colIndex,\n                rule,\n                rgx: colDefContentRuleFilter,\n                ctrl,\n                varsByName\n              };\n              if (type === 'FILTER') {\n                isMatch = colDefContentRuleFilter.test(cell.html);\n              }\n              else if (type === 'RANGE') {\n                let minValue = rule.minValue;\n                let minIsNum = RGX_SIMPLE_NUMBER.test(minValue);\n                let maxValue = rule.maxValue;\n                let maxIsNum = RGX_SIMPLE_NUMBER.test(maxValue);\n                if (minIsNum) {\n                  minValue = +minValue;\n                }\n                if (maxIsNum) {\n                  maxValue = +maxValue;\n                }\n\n                if (minIsNum || maxIsNum) {\n                  cellValue = +cellValue;\n                }\n\n                let minValueOp = rule.minValueOp;\n                if (minValueOp) {\n                  isMatch = isMatch && (minValueOp === '<=' ? minValue <= cellValue : (minValue < cellValue));\n                }\n                let maxValueOp = rule.maxValueOp;\n                if (maxValueOp) {\n                  isMatch = isMatch && (maxValueOp === '>=' ? maxValue >= cellValue : (maxValue > cellValue));\n                }\n              }\n              else {\n                isMatch = cell.html == null;\n              }\n\n              isMatch = isMatch !== rule.negateCriteria;\n\n              // If this is a match apply the class(es)\n              if (isMatch) {\n                if (rule.classNames) {\n                  cell.cls = {\n                    names: getCellValue(rule.classNames, false, gcvOptions),\n                    level: rule.classLevel\n                  };\n                }\n\n                // Set the display\n                let displayHTML = getCellValue(rule.display, false, gcvOptions);\n                if (!rule.displayIsHTML) {\n                  displayHTML = _.escape(displayHTML);\n                }\n                if (rule.url) {\n                  let url = _.escape(getCellValue(rule.url, true, gcvOptions));\n                  let target = rule.openNewWindow ? '_blank' : '';\n                  let tooltipHTML = '';\n                  if (rule.tooltip.isVisible) {\n                    cell.tooltip = {\n                      display: getCellValue(rule.tooltip.display, false, gcvOptions),\n                      placement: rule.tooltip.placement.toLowerCase()\n                    };\n                  }\n                  displayHTML = `<a href=\"${url}\" target=\"${target}\">${displayHTML}</a>`;\n                }\n                cell.html = displayHTML;\n                ruleApplied = rule;\n\n                break; // Break out of rules loop\n              }\n            } // End of rules for-loop\n          } // End if (colDef) {...}\n\n          if (!ruleApplied) {\n            cell.html = _.escape(cell.html);\n          }\n\n          row[colIndex] = cell;\n        } // End of row for-loop\n      } // End if (!row.isProcessed) {...}\n      row.isProcessed = true;\n    } // End of rows for-loop\n  }\n\n  getVarColColumns() {\n    let data = this.getVarColsData();\n    return data ? data.columns : [];\n  }\n\n  getVarColsData() {\n    let varCols = this.panel.varCols;\n    let dataRefId = varCols && varCols.dataRefId;\n    let dataList = this.dataList;\n    return dataList && dataList.find(({ refId }) => refId === dataRefId);\n  }\n\n  putVarColsIn(data) {\n    let varCols = this.panel.varCols;\n    let columns = data.columns;\n    let rows = data.rows.slice();\n\n    const MAIN_COL_COUNT = columns.length;\n    const MAIN_ROW_COUNT = rows.length;\n\n    if (varCols) {\n      let vcData = this.getVarColsData();\n      if (vcData) {\n        let vcHeaders = vcData.columns.map(col => col.text);\n        let mainJoinColIndex = columns.findIndex(c => c.text === varCols.mainJoinColumn);\n        let joinColIndex = vcHeaders.indexOf(varCols.joinColumn);\n        let nameColIndex = vcHeaders.indexOf(varCols.nameColumn);\n        let valueColIndex = vcHeaders.indexOf(varCols.valueColumn);\n        if (mainJoinColIndex >= 0 && joinColIndex >= 0 && nameColIndex >= 0 && valueColIndex >= 0) {\n          let mainRowIndex = 0;\n          \n          // Order a sliced version of the main `rows` using the join column.\n          rows.sort((a, b) => a[mainJoinColIndex] < b[mainJoinColIndex] ? -1 : 1);\n\n          // Order a sliced version of the varCols rows using the join column.\n          let vcRowsPrime = vcData.rows;\n          let vcRows = vcRowsPrime.slice().sort((a, b) => a[joinColIndex] < b[joinColIndex] ? -1 : 1);\n\n          // Used later to reorder the new columns by the order they were found\n          // in the data.\n          let vcColIndexPairs = [];\n\n          vcRows\n            // Get a list of all of the new headers while simultaneously adding\n            // the data to the appropriate rows and in the appropriate columns.\n            .reduce((vcAddedHeaders, vcRow) => {\n              let vcHeader = vcRow[nameColIndex];\n              let vcJoinValue = vcRow[joinColIndex];\n              let colIndex = vcAddedHeaders.indexOf(vcHeader);\n              let isNewVCHeader = colIndex < 0;\n\n              // If the new column wasn't found add it.\n              if (isNewVCHeader) {\n                colIndex = vcAddedHeaders.push(vcHeader) - 1;\n              }\n\n              // Since everything is ordered continue in `rows` looking for the\n              // join and if found add the value there while setting the new row's\n              // index as `mainRowIndex`.\n              for (let isChanged, mainRow, i = mainRowIndex; i < MAIN_ROW_COUNT; i++) {\n                mainRow = rows[i];\n                if (vcJoinValue === mainRow[mainJoinColIndex]) {\n                  mainRow[MAIN_COL_COUNT + colIndex] = vcRow[valueColIndex];\n                  (mainRow.joinValues = mainRow.joinValues || [])[MAIN_COL_COUNT + colIndex] = _.zipObject(vcHeaders, vcRow);\n                  mainRowIndex = i;\n                  isChanged = true;\n                }\n                else if (isChanged) {\n                  // NOTE:  Return here to avoid checking `i` outside of loop.\n                  return vcAddedHeaders;\n                }\n              }\n\n              // If new header was added but join was unsuccessful remove the new\n              // header.\n              if (isNewVCHeader) {\n                vcAddedHeaders.pop();\n              }\n\n              return vcAddedHeaders;\n            }, [])\n            // Add the new `columns`.\n            .forEach((vcHeader, vcHeaderIndex) => {\n              vcColIndexPairs.push({\n                first: vcRowsPrime.findIndex(vcRow => vcRow[nameColIndex] === vcHeader),\n                index: vcHeaderIndex + MAIN_COL_COUNT\n              });\n              columns.push({ text: vcHeader });\n            });\n\n          // Used to reorder all of the var-cols\n          vcColIndexPairs.sort((a, b) => a.first - b.first);\n          const SPLICE_ARGS = [MAIN_COL_COUNT, vcColIndexPairs.length];\n\n          // Reorder all of the var-cols\n          columns.splice.apply(\n            columns,\n            SPLICE_ARGS.concat(vcColIndexPairs.map(pair => columns[pair.index]))\n          );\n\n          // Reorder all of the var-col cells in each row.\n          rows.forEach(row => {\n            row.splice.apply(\n              row,\n              SPLICE_ARGS.concat(vcColIndexPairs.map(pair => {\n                pair = row[pair.index];\n                return pair === undefined ? null : pair;\n              }))\n            );\n          });\n        }\n      }\n    }\n  }\n\n  getData() {\n    let ctrl = this;\n    let dataList = ctrl.dataList[0];\n    let columns = dataList.columns.map(col => _.cloneDeep(col));\n    let rows = dataList.rows.map(row => row.slice());\n    let varsByName = ctrl.getVarsByName();\n    let panel = ctrl.panel;\n    let colDefs = panel.columnDefs;\n    let varCols = panel.varCols;\n    let colDefRgxs = colDefs.map(colDef => parseRegExp(colDef.filter));\n    let colDefContentRuleFilters = colDefs.map(\n      colDef => colDef.contentRules.map(\n        rule => rule.type === 'FILTER' ? parseRegExp(rule.filter) : null\n      )\n    );\n\n    // Create the data object to be returned.\n    let data = { columns, rows, type: dataList.type, refId: dataList.refId };\n\n    // Add the variable columns to the data if there are any.\n    this.putVarColsIn(data);\n\n    // Make an array of column headers.\n    let headers = data.headers = columns.map(col => col.text);\n\n    columns.forEach((column, colIndex) => {\n      if ('string' === typeof column) {\n        column = { text: column, visible: true };\n      }\n      else {\n        column.visible = true;\n      }\n\n      let colDef;\n      colDefRgxs.find((colDefRgx, colDefIndex) => {\n        if (colDefRgx.test(column.text)) {\n          colDef = colDefs[colDefIndex];\n          let gcvOptions = {\n            cell: column.text,\n            cellsByColName: {},\n            rule: { type: 'FILTER' },\n            rgx: colDefRgx,\n            ctrl,\n            varsByName\n          };\n          column.text = getCellValue(colDef.display, false, gcvOptions);\n\n          let html = colDef.displayIsHTML ? column.text : _.escape(column.text);\n\n          if (colDef.url) {\n            let url = _.escape(getCellValue(colDef.url, true, gcvOptions));\n            let target = colDef.openNewWindow ? '_blank' : '';\n            html = `<a href=\"${url}\" target=\"${target}\" onclick=\"event.stopPropagation()\">${html}</a>`;\n          }\n\n          _.extend(column, {\n            colDef,\n            colDefContentRuleFilters: colDefContentRuleFilters[colDefIndex],\n            html,\n            visible: colDef.isVisible\n          });\n\n          return true;\n        }\n      });\n\n      column.filter = {\n        ignore: true,\n        negate: false,\n        text: '',\n        includeTrue: false,\n        includeFalse: false,\n        includeNull: false,\n        minNum: null,\n        maxNum: null,\n        minDate: null,\n        maxDate: null,\n        includeMin: false,\n        includeMax: false,\n        dataType: JS.nativeType((rows.find(row => row[colIndex] != undefined) || [])[colIndex]),\n        test(value) {\n          let { negate, text, includeTrue, includeFalse, includeNull, minNum, maxNum, minDate, maxDate, includeMin, includeMax, dataType } = this;\n          let min = minNum != undefined ? minNum : minDate;\n          let max = maxNum != undefined ? maxNum : maxDate;\n          if (dataType === 'Date' || dataType === 'Number' || dataType === 'BigInt') {\n            return (\n              value == undefined\n                ? includeNull\n                : (\n                  (min == undefined || (includeMin ? min <= value : (min < value)))\n                  && (max == undefined || (includeMax ? value <= max : (value < max)))\n                )\n            ) !== negate;\n          }\n          else if (dataType === 'Boolean') {\n            return (\n              (includeTrue && value)\n              || (includeFalse && !value)\n              || (includeNull && value == undefined)\n            ) !== negate;\n          }\n          return (this.matchTerms(value) || (includeNull && value == undefined)) !== negate;\n        },\n        matchTerms() { return true; }\n      };\n      column.filter.test = column.filter.test.bind(column.filter);\n\n      if (!_.has(column, 'html')) {\n        column.html = _.escape(column.text);\n      }\n\n      columns[colIndex] = column;\n    });\n\n    return data;\n  }\n\n  fixDataTableSize(opt_onlyFixHeight) {\n    let jElem = this.panelElement;\n    let fullHeight = jElem.height();\n    let jWrap = jElem.find('.dataTables_wrapper');\n    if (jWrap.length) {\n      let wrapHeight = jWrap.height();\n      let jScrollBody = jWrap.find('.dataTables_scrollBody');\n      let scrollHeight = jScrollBody.height();\n      let nonScrollHeight = wrapHeight - scrollHeight;\n      jScrollBody.css('max-height', fullHeight - nonScrollHeight);\n    }\n\n    // Make sure the column headers get resized\n    if (this.dataTable && !opt_onlyFixHeight) {\n      this.dataTable.columns().draw();\n    }\n  }\n\n  draw() {\n    let error;\n    let isValid = false;\n    let ctrl = this;\n    let jElem = ctrl.element;\n    let jContent = ctrl.panelElement.css('position', 'relative').html('');\n    let elemContent = jContent[0];\n    let data = ctrl.getData();\n\n    ctrl.pageLengthOptions = ctrl.getPageLengthOptions();\n\n    if (data && data.rows.length) {\n      if (data.type === 'table') {\n        try {\n          ctrl.drawDataTable(data);\n          ctrl.panelJSON = this.getPanelSettingsJSON();\n          jElem.tooltip({ selector: '[data-tooltip]' });\n          isValid = true;\n        }\n        catch (err) {\n          error = err;\n        }\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n      if (error) {\n        throw error;\n      }\n    }\n  }\n\n  setPanelValue(rootVar, path, value) {\n    _.set(rootVar, path, value);\n    this.autoRedraw();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.element = elem;\n    this.panelElement = elem.find('.panel-content');\n    this.throttleDraw = _.debounce(this.draw.bind(this), 1000);\n  }\n}\n\nDataTablePanelCtrl.prototype.autoRedraw = _.debounce(function() {\n  if (this.panel.allowRedrawOnModify) {\n    this.drawIfChanged.apply(this, arguments);\n  }\n}, 500);\n\nDataTablePanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}